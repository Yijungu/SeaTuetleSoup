{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport ButtonWithTip from \"../../component/tiptoolbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\"어떤 대상에 대해 알고 싶으신가요?\");\n  const [question_step, setQuestion_Step] = useState(true);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"1단계 힌트\");\n  const [hintText2, setHintText2] = useState(\"2단계 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  const [background_text, setBackGroudText] = useState(\"정답을 입력하세요.\");\n  const [answerloding_text, setAnswerLodingText] = useState(\"정답을 확인중입니다.\");\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${lastTime.getMonth() + 1}-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: \"\"\n          }\n        });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: text_t\n          }\n        });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n      setAuthor(data.author);\n      setMainCharacter(data.main_character);\n      setHint(data.hints && data.hints.length > 0 ? data.hints[0].hint : null);\n      setHint2(data.hints && data.hints.length > 1 ? data.hints[1].hint : null);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = asnync => {\n    setTabPressed(false);\n    // setQuestion_Step(false);\n  };\n\n  const handleAnswerCheckcclick = asnync => {\n    setTabPressed(true);\n    // setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      // setQuestion_Step(false);\n    }\n\n    if (e.key === \"Escape\") {\n      // setQuestion_Step(false);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text_x,\n            aiQuestion: \"\",\n            answer: \"5자 이상으로 적어주세요.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          setBackGroudText(\"\");\n          const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n            data: text_x\n          });\n          console.log(anotherResponse.data.response);\n          if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\") || anotherResponse.data.response.startsWith(\"Yes\")) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers(prev => prev + 1);\n\n              // setUpdateState(true);\n            }\n\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            const newQnas = [{\n              question: text_x,\n              aiQuestion: anotherResponse.data.ai_question,\n              aiQuestionKr: anotherResponse.data.ai_question_kr,\n              answer: \"정답이 아닙니다.\"\n            }, ...qnas];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n          setBackGroudText(\"정답을 입력하세요.\");\n        }\n      } else {\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text_x,\n            aiQuestion: \"\",\n            answer: \"5자 이상으로 적어주세요.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          // setQuestion_Step(false);\n          const tempQnas = [{\n            question: text_x,\n            aiQuestion: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 27\n            }, this),\n            answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 23\n            }, this),\n            aiQuestionKr: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)\n          }, ...qnas];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n            data: text_x\n          });\n          let updatedQnas;\n          // console.log(response.data.ai_question);\n          // console.log(response.data.response);\n          let responseString = JSON.stringify(response.data.response);\n          if (responseString.includes(\"Yes\") || responseString.includes(\"yes\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.aiQuestion.type === Loading && qna.answer.type === Loading ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answer: \"네.\"\n            } : qna);\n          } else if (responseString.includes(\"No\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.aiQuestion.type === Loading && qna.answer.type === Loading ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answer: \"아니오.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably not\") || responseString.includes(\"probably not.\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.aiQuestion.type === Loading && qna.answer.type === Loading ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answer: \"아마도 아닐 겁니다.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably.\") || responseString.includes(\"probably\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.aiQuestion.type === Loading && qna.answer.type === Loading ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answer: \"아마도 맞을 겁니다.\"\n            } : qna);\n          } else {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.aiQuestion.type === Loading && qna.answer.type === Loading ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answer: \"필요없는 정보입니다.\"\n            } : qna);\n          }\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem_main_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question_box\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"Question\",\n                children: question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hint_giveup_button_box\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hint_button_box\",\n                onClick: openHintModal,\n                children: \"\\uD78C\\uD2B8 \\uBCF4\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                isOpen: hintmodalIsOpen,\n                onRequestClose: closeHintModal,\n                overlayClassName: \"ModalOverlay\",\n                className: \"ModalContent\",\n                contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"hint-button-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"hint_button\",\n                    onClick: () => setHintText(hint),\n                    children: hintText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"hint_button\",\n                    onClick: () => setHintText2(hint2),\n                    children: hintText2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"hint_button_close\",\n                    onClick: closeHintModal,\n                    children: [\" \", \"\\uB2EB\\uAE30\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"giveup_button\",\n                onClick: openModal,\n                children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                isOpen: modalIsOpen,\n                onRequestClose: closeModal,\n                overlayClassName: \"ModalOverlay\",\n                className: \"ModalContent\",\n                contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"12.5px\",\n                    marginBottom: \"20px\"\n                  },\n                  children: \"\\uC815\\uB9D0\\uB85C \\uD3EC\\uAE30\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"button-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      marginLeft: \"30px\",\n                      padding: \"0px\"\n                    },\n                    onClick: closeModal,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        margin: \"0px\"\n                      },\n                      children: \"\\uCDE8\\uC18C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#3E5FD1\",\n                      marginRight: \"30px\",\n                      padding: \"0px\"\n                    },\n                    onClick: handleGiveUpClick,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        margin: \"none\"\n                      },\n                      children: \"\\uD655\\uC778\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 542,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), author && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source\",\n            children: `출처 : ${author}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle_check_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quesiton_check_box\",\n              onClick: handleQuesionCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${!tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), \" 질문\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result_check_box\",\n              onClick: handleAnswerCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), \" 정답\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qeustion_text_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `textbox ${shake ? \"shake\" : \"\"}`,\n              value: text,\n              onChange: handleChange,\n              onKeyDown: handleKeyPress,\n              placeholder: !tabPressed ? question_step ? \"주어를 넣어 질문을 입력하세요.\" : `ex) ${main_character}` : `${background_text}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), background_text === \"\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                position: \"absolute\"\n              },\n              children: answerloding_text.split(\"\").map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  animationDelay: `${(i - 1) * 100}ms`,\n                  left: i > 2 ? `${33 + (i - 3) * 13}px` : `${i * 13}px`\n                },\n                className: \"wave\",\n                children: char\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `send_button ${tabPressed ? \"tabPressed\" : \"\"}`,\n            onClick: handleSendClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SendButton\",\n              src: SendButton,\n              alt: \"SendButton\",\n              width: \"15\",\n              height: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              aiQuestion: qna.aiQuestion,\n              aiQuestionKr: qna.aiQuestionKr,\n              index: index,\n              answer: qna.answer,\n              opened: index === 0 ? true : false,\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"F22F\",\n          src: F22FBeta,\n          alt: \"F22FBeta\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: \"Tab \\uD0A4\\uB97C \\uB20C\\uB7EC \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonWithTip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"9Fzj/Ks1lFJv71hDrgPPv4hlqJ4=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","F22FBeta","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","ButtonWithTip","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","hintmodalIsOpen","setHintModalIsOpen","text_t","setText_t","author","setAuthor","main_character","setMainCharacter","text_question","setText_Question","question_step","setQuestion_Step","givup","setGiveUp","question_2step_text","setQuestion_2step_Text","hintText","setHintText","hintText2","setHintText2","hint","setHint","hint2","setHint2","background_text","setBackGroudText","answerloding_text","setAnswerLodingText","now","Date","currentDate","getFullYear","getMonth","getDate","lastTime","localStorage","getItem","lastDate","setItem","savedNickname","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","get","process","env","REACT_APP_API_URL","then","response","data","hints","length","catch","error","console","handleChange","e","target","value","handleQuesionCheckcclick","asnync","handleAnswerCheckcclick","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","text_x","setTimeout","newQnas","aiQuestion","answer","anotherResponse","post","log","startsWith","prev","ai_question","aiQuestionKr","ai_question_kr","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","responseString","includes","map","qna","type","openModal","openHintModal","closeHintModal","div","initial","opacity","animate","exit","children","className","onClick","isOpen","onRequestClose","overlayClassName","contentLabel","style","fontSize","marginBottom","border","backgroundColor","marginLeft","padding","margin","marginRight","onChange","onKeyDown","placeholder","position","split","char","i","animationDelay","left","src","alt","width","height","index","opened","borderBottomStrength","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport ButtonWithTip from \"../../component/tiptoolbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\n    \"어떤 대상에 대해 알고 싶으신가요?\"\n  );\n  const [question_step, setQuestion_Step] = useState(true);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"1단계 힌트\");\n  const [hintText2, setHintText2] = useState(\"2단계 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  const [background_text, setBackGroudText] = useState(\"정답을 입력하세요.\");\n  const [answerloding_text, setAnswerLodingText] =\n    useState(\"정답을 확인중입니다.\");\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${\n        lastTime.getMonth() + 1\n      }-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n\n    setCorrectAnswers(savedCorrectAnswers);\n\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", { state: { userAnswer: \"\" } });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", { state: { userAnswer: text_t } });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n        setAuthor(data.author);\n        setMainCharacter(data.main_character);\n        setHint(\n          data.hints && data.hints.length > 0 ? data.hints[0].hint : null\n        );\n        setHint2(\n          data.hints && data.hints.length > 1 ? data.hints[1].hint : null\n        );\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = (asnync) => {\n    setTabPressed(false);\n    // setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = (asnync) => {\n    setTabPressed(true);\n    // setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      // setQuestion_Step(false);\n    }\n    if (e.key === \"Escape\") {\n      // setQuestion_Step(false);\n    }\n  };\n\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            {\n              question: text_x,\n              aiQuestion: \"\",\n              answer: \"5자 이상으로 적어주세요.\",\n            },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          setBackGroudText(\"\");\n          const anotherResponse = await axios.post(\n            process.env.REACT_APP_API_URL + \"/submit/\",\n            {\n              data: text_x,\n            }\n          );\n          console.log(anotherResponse.data.response);\n          if (\n            anotherResponse.data.response.startsWith(\"네\") ||\n            anotherResponse.data.response.startsWith(\"예\") ||\n            anotherResponse.data.response.startsWith(\"맞습니다\") ||\n            anotherResponse.data.response.startsWith(\"Yes\")\n          ) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${\n              now.getMonth() + 1\n            }-${now.getDate()}`;\n\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (\n              lastGiveUpDate !== currentDate &&\n              lastCorrectDate !== currentDate\n            ) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers((prev) => prev + 1);\n\n              // setUpdateState(true);\n            }\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            const newQnas = [\n              {\n                question: text_x,\n                aiQuestion: anotherResponse.data.ai_question,\n                aiQuestionKr: anotherResponse.data.ai_question_kr,\n                answer: \"정답이 아닙니다.\",\n              },\n              ...qnas,\n            ];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n          setBackGroudText(\"정답을 입력하세요.\");\n        }\n      } else {\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            {\n              question: text_x,\n              aiQuestion: \"\",\n              answer: \"5자 이상으로 적어주세요.\",\n            },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          // setQuestion_Step(false);\n          const tempQnas = [\n            {\n              question: text_x,\n              aiQuestion: <Loading />,\n              answer: <Loading />,\n              aiQuestionKr: <Loading />,\n            },\n            ...qnas,\n          ];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/question/\",\n            {\n              data: text_x,\n            }\n          );\n          let updatedQnas;\n          // console.log(response.data.ai_question);\n          // console.log(response.data.response);\n          let responseString = JSON.stringify(response.data.response);\n          if (\n            responseString.includes(\"Yes\") ||\n            responseString.includes(\"yes\")\n          ) {\n            // if (true) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x &&\n              qna.aiQuestion.type === Loading &&\n              qna.answer.type === Loading\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answer: \"네.\",\n                  }\n                : qna\n            );\n          } else if (responseString.includes(\"No\")) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x &&\n              qna.aiQuestion.type === Loading &&\n              qna.answer.type === Loading\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answer: \"아니오.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably not\") ||\n            responseString.includes(\"probably not.\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x &&\n              qna.aiQuestion.type === Loading &&\n              qna.answer.type === Loading\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answer: \"아마도 아닐 겁니다.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably.\") ||\n            responseString.includes(\"probably\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x &&\n              qna.aiQuestion.type === Loading &&\n              qna.answer.type === Loading\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answer: \"아마도 맞을 겁니다.\",\n                  }\n                : qna\n            );\n          } else {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x &&\n              qna.aiQuestion.type === Loading &&\n              qna.answer.type === Loading\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answer: \"필요없는 정보입니다.\",\n                  }\n                : qna\n            );\n          }\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"problem_main_box\">\n              <div className=\"question_box\">\n                <span className=\"Question\">{question}</span>\n              </div>\n              <div className=\"hint_giveup_button_box\">\n                <button className=\"hint_button_box\" onClick={openHintModal}>\n                  힌트 보기\n                </button>\n                <Modal\n                  isOpen={hintmodalIsOpen}\n                  onRequestClose={closeHintModal}\n                  overlayClassName=\"ModalOverlay\"\n                  className=\"ModalContent\"\n                  contentLabel=\"포기 확인\"\n                >\n                  <div className=\"hint-button-container\">\n                    <button\n                      className=\"hint_button\"\n                      onClick={() => setHintText(hint)}\n                    >\n                      {hintText}\n                    </button>\n                    <button\n                      className=\"hint_button\"\n                      onClick={() => setHintText2(hint2)}\n                    >\n                      {hintText2}\n                    </button>\n                    <button\n                      className=\"hint_button_close\"\n                      onClick={closeHintModal}\n                    >\n                      {\" \"}\n                      닫기{\" \"}\n                    </button>\n                  </div>\n                </Modal>\n                <button className=\"giveup_button\" onClick={openModal}>\n                  포기하기\n                </button>\n\n                <Modal\n                  isOpen={modalIsOpen}\n                  onRequestClose={closeModal}\n                  overlayClassName=\"ModalOverlay\"\n                  className=\"ModalContent\"\n                  contentLabel=\"포기 확인\"\n                >\n                  <p style={{ fontSize: \"12.5px\", marginBottom: \"20px\" }}>\n                    정말로 포기하시겠습니까?\n                  </p>\n                  <div className=\"button-container\">\n                    <button\n                      style={{\n                        border: \"1px solid #2d2d2d\",\n                        backgroundColor: \"#ffffff\",\n                        marginLeft: \"30px\",\n                        padding: \"0px\",\n                      }}\n                      onClick={closeModal}\n                    >\n                      <p style={{ margin: \"0px\" }}>취소</p>\n                    </button>\n                    <button\n                      style={{\n                        border: \"1px solid #2d2d2d\",\n                        backgroundColor: \"#3E5FD1\",\n                        marginRight: \"30px\",\n                        padding: \"0px\",\n                      }}\n                      onClick={handleGiveUpClick}\n                    >\n                      <p style={{ margin: \"none\" }}>확인</p>\n                    </button>\n                  </div>\n                </Modal>\n              </div>\n            </div>\n            {author && <span className=\"source\">{`출처 : ${author}`}</span>}\n            <div className=\"circle_check_box\">\n              <div\n                className=\"quesiton_check_box\"\n                onClick={handleQuesionCheckcclick}\n              >\n                <div\n                  className={`circle ${!tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 질문\"}\n              </div>\n              <div\n                className=\"result_check_box\"\n                onClick={handleAnswerCheckcclick}\n              >\n                <div\n                  className={`circle ${tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 정답\"}\n              </div>\n            </div>\n\n            <div className=\"qeustion_text_box\">\n              <input\n                className={`textbox ${shake ? \"shake\" : \"\"}`}\n                value={text}\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder={\n                  !tabPressed\n                    ? question_step\n                      ? \"주어를 넣어 질문을 입력하세요.\"\n                      : `ex) ${main_character}`\n                    : `${background_text}`\n                }\n              />\n              {background_text === \"\" && (\n                <h1 style={{ position: \"absolute\" }}>\n                  {answerloding_text.split(\"\").map((char, i) => (\n                    <span\n                      style={{\n                        animationDelay: `${(i - 1) * 100}ms`,\n                        left: i > 2 ? `${33 + (i - 3) * 13}px` : `${i * 13}px`,\n                      }}\n                      className=\"wave\"\n                    >\n                      {char}\n                    </span>\n                  ))}\n                </h1>\n              )}\n            </div>\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  aiQuestion={qna.aiQuestion}\n                  aiQuestionKr={qna.aiQuestionKr}\n                  index={index}\n                  answer={qna.answer}\n                  opened={index === 0 ? true : false}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <img\n            className=\"F22F\"\n            src={F22FBeta}\n            alt=\"F22FBeta\"\n            onClick={handleLogoClick}\n          />\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              Tab 키를 눌러 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ButtonWithTip />\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}