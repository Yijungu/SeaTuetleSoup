{"ast":null,"code":"var _jsxFileName = \"/Users/yijungu/SeaTuetleSoup/turtle_frontend/src/component/loading.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./loading.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = () => {\n  _s();\n  const [loadingClass, setLoadingClass] = useState(\"\");\n  useEffect(() => {\n    // 애니메이션이 렌더링 이후에 시작되도록 지연시킵니다.\n    const timer = setTimeout(() => {\n      setLoadingClass(\"loading\");\n    }, 100); // 100ms 이후에 애니메이션을 시작하도록 설정했습니다.\n\n    // 컴포넌트가 언마운트되었을 때 타이머를 해제합니다.\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: loadingClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Loading, \"oXtyT2h6zNSGFiPN2pNbzMoRjvo=\");\n_c = Loading;\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Loading","_s","loadingClass","setLoadingClass","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yijungu/SeaTuetleSoup/turtle_frontend/src/component/loading.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./loading.css\";\n\nconst Loading = () => {\n  const [loadingClass, setLoadingClass] = useState(\"\");\n\n  useEffect(() => {\n    // 애니메이션이 렌더링 이후에 시작되도록 지연시킵니다.\n    const timer = setTimeout(() => {\n      setLoadingClass(\"loading\");\n    }, 100); // 100ms 이후에 애니메이션을 시작하도록 설정했습니다.\n\n    // 컴포넌트가 언마운트되었을 때 타이머를 해제합니다.\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div className={loadingClass}>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loading;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,eAAe,CAAC,SAAS,CAAC;IAC5B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACXG,YAAY,CAACF,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKQ,SAAS,EAAEL,YAAa;IAAAM,QAAA,gBAC3BT,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACX,EAAA,CAtBID,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAwBb,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}