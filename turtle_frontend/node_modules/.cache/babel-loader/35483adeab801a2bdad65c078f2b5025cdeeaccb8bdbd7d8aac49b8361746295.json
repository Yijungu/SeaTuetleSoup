{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\"어떤 대상에 대해 알고 싶으신가요?\");\n  const [question_step, setQuestion_Step] = useState(false);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"1단계 힌트\");\n  const [hintText2, setHintText2] = useState(\"2단계 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${lastTime.getMonth() + 1}-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: \"\"\n          }\n        });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: text_t\n          }\n        });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n      setAuthor(data.author);\n      setMainCharacter(data.main_character);\n      console.log(data.hints[0].hint);\n      setHint(data.hints && data.hints.length > 0 ? data.hints[0].hint : null);\n      setHint2(data.hints && data.hints.length > 1 ? data.hints[1].hint : null);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = asnync => {\n    setTabPressed(false);\n    setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = asnync => {\n    setTabPressed(true);\n    setQuestion_Step(false);\n  };\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      setQuestion_Step(false);\n    }\n    if (e.key === \"Escape\") {\n      setQuestion_Step(false);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text_x,\n            answer: \"5자 이상으로 입력해주세요.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n            data: text_x\n          });\n          console.log(anotherResponse.data.response);\n          if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\") || anotherResponse.data.response.startsWith(\"Yes\")) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers(prev => prev + 1);\n\n              // setUpdateState(true);\n            }\n\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            const newQnas = [{\n              question: text_x,\n              answer: \"정답이 아닙니다.\"\n            }, ...qnas];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n        }\n      } else {\n        if (!question_step) {\n          setQuestion_Step(true);\n          setText_t(text);\n          setTimeout(() => setText(\"\"), 0);\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/getJosa/\", {\n            data: text_x\n          });\n          setQuestion_2step_Text(response.data.response);\n        } else {\n          setQuestion_Step(false);\n          const tempQnas = [{\n            question: question_2step_text + \" \" + text_x,\n            answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 23\n            }, this)\n          }, ...qnas];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n            data: question_2step_text + \" \" + text_x\n          });\n          let updatedQnas;\n          console.log(response.data.response);\n          let responseString = JSON.stringify(response.data.response);\n          if (responseString.includes(\"Yes\") || responseString.includes(\"yes\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"네.\"\n            } : qna);\n          } else if (responseString.includes(\"No\") || responseString.includes(\"no\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"아니오.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably not\") || responseString.includes(\"Probably not.\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"아마도 맞을 겁니다.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably right\") || responseString.includes(\"Probably right\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"아마도 아닐 겁니다.\"\n            } : qna);\n          } else {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"필요없는 정보입니다.\"\n            } : qna);\n          }\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question_box\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Question\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), author && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source\",\n            children: `출처 : ${author}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle_check_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quesiton_check_box\",\n              onClick: handleQuesionCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${!tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), \" 질문\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result_check_box\",\n              onClick: handleAnswerCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this), \" 정답\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"hint_button_box\",\n              onClick: openHintModal,\n              children: \"\\uD78C\\uD2B8 \\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: hintmodalIsOpen,\n              onRequestClose: closeHintModal,\n              overlayClassName: \"ModalOverlay\",\n              className: \"ModalContent\",\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hint-button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"hint_button\",\n                  onClick: () => setHintText(hint),\n                  children: hint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"hint_button\",\n                  onClick: () => setHintText2(hint2),\n                  children: hint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"hint_button_close\",\n                  onClick: closeHintModal,\n                  children: [\" \", \"\\uB2EB\\uAE30\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"qeustion_text\",\n            children: text_question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qeustion_text_box\",\n            children: [question_step && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"textbox_step\",\n              children: question_2step_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `textbox ${shake ? \"shake\" : \"\"}`,\n              value: text,\n              onChange: handleChange,\n              onKeyDown: handleKeyPress,\n              placeholder: !tabPressed ? question_step ? \"긍정문 질문을 입력하세요.\" : `ex) ${main_character}` : \"정답을 입력해주세요.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `send_button ${tabPressed ? \"tabPressed\" : \"\"}`,\n            onClick: handleSendClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SendButton\",\n              src: SendButton,\n              alt: \"SendButton\",\n              width: \"15\",\n              height: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              answer: isLoading && qna.question === text ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading\",\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 23\n              }, this) : qna.answer,\n              borderStrength: index === 0 ? \"2px\" : \"0px\",\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"giveup_button\",\n              onClick: openModal,\n              children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              overlayClassName: \"ModalOverlay\",\n              className: \"ModalContent\",\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\uC815\\uB9D0\\uB85C \\uD3EC\\uAE30\\uB97C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: closeModal,\n                  children: \"\\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleGiveUpClick,\n                  children: \"\\uD655\\uC778\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"F22F\",\n          src: F22FBeta,\n          alt: \"F22FBeta\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: \"Tab \\uD0A4\\uB97C \\uB20C\\uB7EC \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"YMgjb/zV+ArPHTxoln7Q61kbQtU=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","F22FBeta","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","hintmodalIsOpen","setHintModalIsOpen","text_t","setText_t","author","setAuthor","main_character","setMainCharacter","text_question","setText_Question","question_step","setQuestion_Step","givup","setGiveUp","question_2step_text","setQuestion_2step_Text","hintText","setHintText","hintText2","setHintText2","hint","setHint","hint2","setHint2","now","Date","currentDate","getFullYear","getMonth","getDate","lastTime","localStorage","getItem","lastDate","setItem","savedNickname","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","get","process","env","REACT_APP_API_URL","then","response","data","console","log","hints","length","catch","error","handleChange","e","target","value","handleQuesionCheckcclick","asnync","handleAnswerCheckcclick","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","text_x","setTimeout","newQnas","answer","anotherResponse","post","startsWith","prev","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","responseString","includes","map","qna","type","openModal","openHintModal","closeHintModal","div","initial","opacity","animate","exit","children","className","onClick","isOpen","onRequestClose","overlayClassName","contentLabel","onChange","onKeyDown","placeholder","src","alt","width","height","index","borderStrength","borderBottomStrength","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\n    \"어떤 대상에 대해 알고 싶으신가요?\"\n  );\n  const [question_step, setQuestion_Step] = useState(false);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"1단계 힌트\");\n  const [hintText2, setHintText2] = useState(\"2단계 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${\n        lastTime.getMonth() + 1\n      }-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n\n    setCorrectAnswers(savedCorrectAnswers);\n\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", { state: { userAnswer: \"\" } });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", { state: { userAnswer: text_t } });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n        setAuthor(data.author);\n        setMainCharacter(data.main_character);\n        console.log(data.hints[0].hint);\n        setHint(\n          data.hints && data.hints.length > 0 ? data.hints[0].hint : null\n        );\n        setHint2(\n          data.hints && data.hints.length > 1 ? data.hints[1].hint : null\n        );\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = (asnync) => {\n    setTabPressed(false);\n    setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = (asnync) => {\n    setTabPressed(true);\n    setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      setQuestion_Step(false);\n    }\n    if (e.key === \"Escape\") {\n      setQuestion_Step(false);\n    }\n  };\n\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text_x, answer: \"5자 이상으로 입력해주세요.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          const anotherResponse = await axios.post(\n            process.env.REACT_APP_API_URL + \"/submit/\",\n            {\n              data: text_x,\n            }\n          );\n          console.log(anotherResponse.data.response);\n          if (\n            anotherResponse.data.response.startsWith(\"네\") ||\n            anotherResponse.data.response.startsWith(\"예\") ||\n            anotherResponse.data.response.startsWith(\"맞습니다\") ||\n            anotherResponse.data.response.startsWith(\"Yes\")\n          ) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${\n              now.getMonth() + 1\n            }-${now.getDate()}`;\n\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (\n              lastGiveUpDate !== currentDate &&\n              lastCorrectDate !== currentDate\n            ) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers((prev) => prev + 1);\n\n              // setUpdateState(true);\n            }\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            const newQnas = [\n              { question: text_x, answer: \"정답이 아닙니다.\" },\n              ...qnas,\n            ];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n        }\n      } else {\n        if (!question_step) {\n          setQuestion_Step(true);\n          setText_t(text);\n          setTimeout(() => setText(\"\"), 0);\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/getJosa/\",\n            {\n              data: text_x,\n            }\n          );\n          setQuestion_2step_Text(response.data.response);\n        } else {\n          setQuestion_Step(false);\n          const tempQnas = [\n            {\n              question: question_2step_text + \" \" + text_x,\n              answer: <Loading />,\n            },\n            ...qnas,\n          ];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/question/\",\n            {\n              data: question_2step_text + \" \" + text_x,\n            }\n          );\n\n          let updatedQnas;\n          console.log(response.data.response);\n          let responseString = JSON.stringify(response.data.response);\n          if (\n            responseString.includes(\"Yes\") ||\n            responseString.includes(\"yes\")\n          ) {\n            // if (true) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"네.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"No\") ||\n            responseString.includes(\"no\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"아니오.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably not\") ||\n            responseString.includes(\"Probably not.\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"아마도 맞을 겁니다.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably right\") ||\n            responseString.includes(\"Probably right\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"아마도 아닐 겁니다.\",\n                  }\n                : qna\n            );\n          } else {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"필요없는 정보입니다.\",\n                  }\n                : qna\n            );\n          }\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"question_box\">\n              <span className=\"Question\">{question}</span>\n            </div>\n            {author && <span className=\"source\">{`출처 : ${author}`}</span>}\n            <div className=\"circle_check_box\">\n              <div\n                className=\"quesiton_check_box\"\n                onClick={handleQuesionCheckcclick}\n              >\n                <div\n                  className={`circle ${!tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 질문\"}\n              </div>\n              <div\n                className=\"result_check_box\"\n                onClick={handleAnswerCheckcclick}\n              >\n                <div\n                  className={`circle ${tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 정답\"}\n              </div>\n              <button className=\"hint_button_box\" onClick={openHintModal}>\n                힌트 보기\n              </button>\n              <Modal\n                isOpen={hintmodalIsOpen}\n                onRequestClose={closeHintModal}\n                overlayClassName=\"ModalOverlay\"\n                className=\"ModalContent\"\n                contentLabel=\"포기 확인\"\n              >\n                <div className=\"hint-button-container\">\n                  <button\n                    className=\"hint_button\"\n                    onClick={() => setHintText(hint)}\n                  >\n                    {hint}\n                  </button>\n                  <button\n                    className=\"hint_button\"\n                    onClick={() => setHintText2(hint2)}\n                  >\n                    {hint}\n                  </button>\n                  <button\n                    className=\"hint_button_close\"\n                    onClick={closeHintModal}\n                  >\n                    {\" \"}\n                    닫기{\" \"}\n                  </button>\n                </div>\n              </Modal>\n            </div>\n            <p className=\"qeustion_text\">{text_question}</p>\n\n            <div className=\"qeustion_text_box\">\n              {question_step && (\n                <span className=\"textbox_step\">{question_2step_text}</span>\n              )}\n\n              <input\n                className={`textbox ${shake ? \"shake\" : \"\"}`}\n                value={text}\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder={\n                  !tabPressed\n                    ? question_step\n                      ? \"긍정문 질문을 입력하세요.\"\n                      : `ex) ${main_character}`\n                    : \"정답을 입력해주세요.\"\n                }\n              />\n            </div>\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  answer={\n                    isLoading && qna.question === text ? (\n                      <span className=\"loading\">Loading</span>\n                    ) : (\n                      qna.answer\n                    )\n                  }\n                  borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n            <div>\n              <button className=\"giveup_button\" onClick={openModal}>\n                포기하기\n              </button>\n\n              <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                overlayClassName=\"ModalOverlay\"\n                className=\"ModalContent\"\n                contentLabel=\"포기 확인\"\n              >\n                <h2>정말로 포기를 하시겠습니까?</h2>\n                <div className=\"button-container\">\n                  <button onClick={closeModal}>취소</button>\n                  <button onClick={handleGiveUpClick}>확인</button>\n                </div>\n              </Modal>\n            </div>\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <img\n            className=\"F22F\"\n            src={F22FBeta}\n            alt=\"F22FBeta\"\n            onClick={handleLogoClick}\n          />\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              Tab 키를 눌러 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}