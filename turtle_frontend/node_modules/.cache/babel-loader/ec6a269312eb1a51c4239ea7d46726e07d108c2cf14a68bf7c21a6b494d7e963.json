{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", {\n        state: {\n          userAnswer: text\n        }\n      });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      const text_t = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n          data: text_t\n        });\n        console.log(anotherResponse.data.response);\n        if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\")) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers(prev => prev + 1);\n\n            // setUpdateState(true);\n          }\n\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text,\n            answer: \"정답이 아닙니다.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{\n          question: text,\n          answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 53\n          }, this)\n        }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n          data: text_t\n        });\n        const updatedQnas = tempQnas.map(qna => qna.question === text && qna.answer.type === Loading ? {\n          question: text,\n          answer: response.data.response\n        } : qna);\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question_box\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Question\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `textbox ${shake ? \"shake\" : \"\"}`,\n            value: text,\n            onChange: handleChange,\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `send_button ${tabPressed ? \"tabPressed\" : \"\"}`,\n            onClick: handleSendClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SendButton\",\n              src: SendButton,\n              alt: \"SendButton\",\n              width: \"15\",\n              height: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              answer: isLoading && qna.question === text ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading\",\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this) : qna.answer,\n              borderStrength: index === 0 ? \"2px\" : \"0px\",\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"giveup_button\",\n              onClick: openModal,\n              children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\uC815\\uB9D0\\uB85C \\uD3EC\\uAE30\\uB97C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleGiveUpClick,\n                children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: closeModal,\n                children: \"\\uB354\\uD574\\uBCF4\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"F22F\",\n          onClick: handleLogoClick,\n          children: \"F22F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: \"N\\uBC88\\uC9F8 \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"/QQBMgLCfiXMHlFBGFPlZ0odQwY=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","savedNickname","localStorage","getItem","now","Date","currentDate","getFullYear","getMonth","getDate","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","setItem","console","log","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","process","env","REACT_APP_API_URL","get","then","response","data","catch","error","handleChange","e","target","value","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","text_t","setTimeout","anotherResponse","post","startsWith","prev","newQnas","answer","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","map","qna","type","openModal","div","initial","opacity","animate","exit","children","className","onChange","onKeyDown","onClick","src","alt","width","height","index","borderStrength","borderBottomStrength","length","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", { state: { userAnswer: text } });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      const text_t = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(\n          process.env.REACT_APP_API_URL + \"/submit/\",\n          {\n            data: text_t,\n          }\n        );\n        console.log(anotherResponse.data.response);\n        if (\n          anotherResponse.data.response.startsWith(\"네\") ||\n          anotherResponse.data.response.startsWith(\"예\") ||\n          anotherResponse.data.response.startsWith(\"맞습니다\")\n        ) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${\n            now.getMonth() + 1\n          }-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (\n            lastGiveUpDate !== currentDate &&\n            lastCorrectDate !== currentDate\n          ) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers((prev) => prev + 1);\n\n            // setUpdateState(true);\n          }\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text, answer: \"정답이 아닙니다.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{ question: text, answer: <Loading /> }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(\n          process.env.REACT_APP_API_URL + \"/question/\",\n          {\n            data: text_t,\n          }\n        );\n        const updatedQnas = tempQnas.map((qna) =>\n          qna.question === text && qna.answer.type === Loading\n            ? { question: text, answer: response.data.response }\n            : qna\n        );\n\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"question_box\">\n              <span className=\"Question\">{question}</span>\n            </div>\n            <input\n              className={`textbox ${shake ? \"shake\" : \"\"}`}\n              value={text}\n              onChange={handleChange}\n              onKeyDown={handleKeyPress}\n            />\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  answer={\n                    isLoading && qna.question === text ? (\n                      <span className=\"loading\">Loading</span>\n                    ) : (\n                      qna.answer\n                    )\n                  }\n                  borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n            <div>\n              <button className=\"giveup_button\" onClick={openModal}>\n                포기하기\n              </button>\n              <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                contentLabel=\"포기 확인\"\n              >\n                <h2>정말로 포기를 하시겠습니까?</h2>\n                <button onClick={handleGiveUpClick}>포기하기</button>\n                <button onClick={closeModal}>더해보기</button>\n              </Modal>\n            </div>\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <button className=\"F22F\" onClick={handleLogoClick}>\n            F22F\n          </button>\n\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              N번째 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,YAAY;AACnB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,iBAAiB,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMqB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAM2C,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACjBH,WAAW,CAACG,aAAa,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN3C,SAAS,CAAC,MAAM;IACd;IACA,MAAM8C,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;;IAEnB;IACA,MAAMC,SAAS,GAAGR,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,MAAMQ,iBAAiB,GAAGC,MAAM,CAACV,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACtE,MAAMU,mBAAmB,GAAGD,MAAM,CAACV,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAE1E,MAAMW,gBAAgB,GAAGF,MAAM,CAACV,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IACpE,MAAMY,wBAAwB,GAAGH,MAAM,CACrCV,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAC5C,CAAC;;IAED;IACA,IAAIO,SAAS,KAAKJ,WAAW,EAAE;MAC7BtB,eAAe,CAAC2B,iBAAiB,GAAG,CAAC,CAAC;MACtCrB,sBAAsB,CAAC,CAAC,CAAC;MACzBY,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEV,WAAW,CAAC;IAC3C,CAAC,MAAM;MACL;MACAtB,eAAe,CAAC2B,iBAAiB,IAAI,CAAC,CAAC;MACvCrB,sBAAsB,CAACyB,wBAAwB,IAAI,CAAC,CAAC;IACvD;IACAE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,mBAAmB,CAAC;IAC1C3B,iBAAiB,CAAC2B,mBAAmB,CAAC;IACtCI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEjC,cAAc,CAAC;IACrCG,cAAc,CAAC0B,gBAAgB,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAxD,SAAS,CAAC,MAAM;IACd4C,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEjC,YAAY,CAAC;IAClDmB,YAAY,CAACc,OAAO,CAAC,aAAa,EAAE7B,WAAW,CAAC;IAChDe,YAAY,CAACc,OAAO,CAAC,gBAAgB,EAAE/B,cAAc,CAAC;IACtDiB,YAAY,CAACc,OAAO,CAAC,qBAAqB,EAAE3B,mBAAmB,CAAC;EAClE,CAAC,EAAE,CAACN,YAAY,EAAEE,cAAc,EAAEE,WAAW,EAAEE,mBAAmB,CAAC,CAAC;EAEpE,MAAM8B,QAAQ,GAAI7C,IAAI,IAAK;IACzB4B,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEI,IAAI,CAACC,SAAS,CAAC/C,IAAI,CAAC,CAAC;EACpD,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMgE,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACrB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAMO,SAAS,GAAGR,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9Cc,OAAO,CAACC,GAAG,CAACI,SAAS,CAAC;IACtB,MAAMlB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;IAEnB,IAAIa,SAAS,IAAIZ,SAAS,KAAKJ,WAAW,EAAE;MAC1C/B,OAAO,CAAC+C,SAAS,CAAC;IACpB,CAAC,MAAM;MACLpB,YAAY,CAACsB,UAAU,CAAC,MAAM,CAAC;MAC/BtB,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEV,WAAW,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAENhD,SAAS,CAAC,MAAM;IACd,IAAIiC,WAAW,EAAE;MACfb,QAAQ,CAAC,SAAS,EAAE;QAAE+C,KAAK,EAAE;UAAEC,UAAU,EAAEtD;QAAK;MAAE,CAAC,CAAC;MACpD;MACAoB,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACD,WAAW,EAAEnB,IAAI,CAAC,CAAC;EAEvBd,SAAS,CAAC,MAAM;IACd,MAAM8C,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;IACnBP,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEV,WAAW,CAAC;EAC3C,CAAC,EAAE,CAAChC,IAAI,CAAC,CAAC;EAEVhB,SAAS,CAAC,MAAM;IACd2D,OAAO,CAACC,GAAG,CAACS,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;IAC1CtE,KAAK,CACFuE,GAAG,CAACH,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,eAAe,CAAC,CACpDE,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1BxD,WAAW,CAACwD,IAAI,CAACzD,QAAQ,CAAC;IAC5B,CAAC,CAAC,CACD0D,KAAK,CAAEC,KAAK,IAAK;MAChBlB,OAAO,CAACkB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BhE,OAAO,CAACgE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC9D,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAM+D,cAAc,GAAIJ,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACK,GAAG,KAAK,OAAO,EAAE;MACrBL,CAAC,CAACM,cAAc,CAAC,CAAC;MAClBC,eAAe,CAAC,CAAC;IACnB;IACA,IAAIP,CAAC,CAACK,GAAG,KAAK,KAAK,EAAE;MACnBL,CAAC,CAACM,cAAc,CAAC,CAAC;MAClBjD,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B;EACF,CAAC;EACD,MAAMoD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCC,UAAU,CAAC,CAAC;IACZ,MAAMC,cAAc,GAAG7C,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC7D,MAAM6C,eAAe,GAAG9C,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC/D,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;IACnB;IACA,IAAIsC,cAAc,KAAKzC,WAAW,IAAI0C,eAAe,KAAK1C,WAAW,EAAE;MACrE;;MAEAJ,YAAY,CAACc,OAAO,CAAC,gBAAgB,EAAEV,WAAW,CAAC;;MAEnD;MACAlB,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;IACAK,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMoD,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIjD,YAAY,EAAE;IAClB;IACAC,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACF,MAAMqD,MAAM,GAAG7E,IAAI;MACnB8E,UAAU,CAAC,MAAM7E,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChC,IAAIoB,UAAU,KAAK,IAAI,EAAE;QACvB;QACA,MAAM0D,eAAe,GAAG,MAAM5F,KAAK,CAAC6F,IAAI,CACtCzB,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,UAAU,EAC1C;UACEI,IAAI,EAAEgB;QACR,CACF,CAAC;QACDhC,OAAO,CAACC,GAAG,CAACiC,eAAe,CAAClB,IAAI,CAACD,QAAQ,CAAC;QAC1C,IACEmB,eAAe,CAAClB,IAAI,CAACD,QAAQ,CAACqB,UAAU,CAAC,GAAG,CAAC,IAC7CF,eAAe,CAAClB,IAAI,CAACD,QAAQ,CAACqB,UAAU,CAAC,GAAG,CAAC,IAC7CF,eAAe,CAAClB,IAAI,CAACD,QAAQ,CAACqB,UAAU,CAAC,MAAM,CAAC,EAChD;UACA,MAAMjD,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;UACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;;UAEnB;UACA,MAAMuC,eAAe,GAAG9C,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;UAC/D,MAAM4C,cAAc,GAAG7C,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;UAC7Dc,OAAO,CAACC,GAAG,CAAC8B,eAAe,CAAC;UAC5B;UACA,IACED,cAAc,KAAKzC,WAAW,IAC9B0C,eAAe,KAAK1C,WAAW,EAC/B;YACA;YACAJ,YAAY,CAACc,OAAO,CAAC,iBAAiB,EAAEV,WAAW,CAAC;;YAEpD;YACApB,iBAAiB,CAAEoE,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;;YAErC;UACF;;UACA9D,cAAc,CAAC,IAAI,CAAC;QACtB,CAAC,MAAM;UACLZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;UAChB,MAAM2E,OAAO,GAAG,CACd;YAAE/E,QAAQ,EAAEJ,IAAI;YAAEoF,MAAM,EAAE;UAAY,CAAC,EACvC,GAAGlF,IAAI,CACR;UACDC,OAAO,CAACgF,OAAO,CAAC;UAChBpC,QAAQ,CAACoC,OAAO,CAAC;UACjBjE,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;UAC/C6D,UAAU,CAAC,MAAMtE,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;QACxC;MACF,CAAC,MAAM;QACL,MAAM6E,QAAQ,GAAG,CAAC;UAAEjF,QAAQ,EAAEJ,IAAI;UAAEoF,MAAM,eAAEvF,OAAA,CAACL,OAAO;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE,CAAC,EAAE,GAAGvF,IAAI,CAAC;QACnEC,OAAO,CAACkF,QAAQ,CAAC,CAAC,CAAC;;QAEnB,MAAMzB,QAAQ,GAAG,MAAMzE,KAAK,CAAC6F,IAAI,CAC/BzB,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,YAAY,EAC5C;UACEI,IAAI,EAAEgB;QACR,CACF,CAAC;QACD,MAAMa,WAAW,GAAGL,QAAQ,CAACM,GAAG,CAAEC,GAAG,IACnCA,GAAG,CAACxF,QAAQ,KAAKJ,IAAI,IAAI4F,GAAG,CAACR,MAAM,CAACS,IAAI,KAAKrG,OAAO,GAChD;UAAEY,QAAQ,EAAEJ,IAAI;UAAEoF,MAAM,EAAExB,QAAQ,CAACC,IAAI,CAACD;QAAS,CAAC,GAClDgC,GACN,CAAC;QAEDzF,OAAO,CAACuF,WAAW,CAAC,CAAC,CAAC;QACtB3C,QAAQ,CAAC2C,WAAW,CAAC;QACrBxE,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;MACnD;;MACAO,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdrD,YAAY,CAAC,KAAK,CAAC;MACnBc,eAAe,CAAC,KAAK,CAAC;MACtBqB,OAAO,CAACkB,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,SAAS+B,SAASA,CAAA,EAAG;IACnBlE,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,SAAS8C,UAAUA,CAAA,EAAG;IACpB9C,cAAc,CAAC,KAAK,CAAC;EACvB;EAEA,oBACE/B,OAAA,CAACJ,MAAM,CAACsG,GAAG;IACTC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACxBC,OAAO,EAAE;MAAED,OAAO,EAAE;IAAE,CAAE;IACxBE,IAAI,EAAE;MAAEF,OAAO,EAAE;IAAE,CAAE;IAAAG,QAAA,eAErBvG,OAAA;MAAKwG,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBvG,OAAA;QAAKwG,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClBvG,OAAA;UAAKwG,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACvBvG,OAAA;YAAKwG,SAAS,EAAC,cAAc;YAAAD,QAAA,eAC3BvG,OAAA;cAAMwG,SAAS,EAAC,UAAU;cAAAD,QAAA,EAAEhG;YAAQ;cAAAkF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC,eACN5F,OAAA;YACEwG,SAAS,EAAG,WAAU9F,KAAK,GAAG,OAAO,GAAG,EAAG,EAAE;YAC7C4D,KAAK,EAAEnE,IAAK;YACZsG,QAAQ,EAAEtC,YAAa;YACvBuC,SAAS,EAAElC;UAAe;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eAEF5F,OAAA;YACEwG,SAAS,EAAG,eAAchF,UAAU,GAAG,YAAY,GAAG,EAAG,EAAE;YAC3DmF,OAAO,EAAEhC,eAAgB;YAAA4B,QAAA,eAEzBvG,OAAA;cACEwG,SAAS,EAAC,YAAY;cACtBI,GAAG,EAAElH,UAAW;cAChBmH,GAAG,EAAC,YAAY;cAChBC,KAAK,EAAC,IAAI;cACVC,MAAM,EAAC;YAAI;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,EAERvF,IAAI,CAACyF,GAAG,CAAC,CAACC,GAAG,EAAEiB,KAAK,kBACnBhH,OAAA;YAAKwG,SAAS,EAAC,YAAY;YAAAD,QAAA,eACzBvG,OAAA,CAACT,GAAG;cACFgB,QAAQ,EAAEwF,GAAG,CAACxF,QAAS;cACvBgF,MAAM,EACJ3E,SAAS,IAAImF,GAAG,CAACxF,QAAQ,KAAKJ,IAAI,gBAChCH,OAAA;gBAAMwG,SAAS,EAAC,SAAS;gBAAAD,QAAA,EAAC;cAAO;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,GAExCG,GAAG,CAACR,MAEP;cACD0B,cAAc,EAAED,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,KAAM;cAC5CE,oBAAoB,EAClBF,KAAK,KAAK3G,IAAI,CAAC8G,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG;YACxC;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC,GAd6BoB,KAAK;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAejC,CACN,CAAC,eACF5F,OAAA;YAAAuG,QAAA,gBACEvG,OAAA;cAAQwG,SAAS,EAAC,eAAe;cAACG,OAAO,EAAEV,SAAU;cAAAM,QAAA,EAAC;YAEtD;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT5F,OAAA,CAACH,KAAK;cACJuH,MAAM,EAAEtF,WAAY;cACpBuF,cAAc,EAAExC,UAAW;cAC3ByC,YAAY,EAAC,2BAAO;cAAAf,QAAA,gBAEpBvG,OAAA;gBAAAuG,QAAA,EAAI;cAAe;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxB5F,OAAA;gBAAQ2G,OAAO,EAAE/B,iBAAkB;gBAAA2B,QAAA,EAAC;cAAI;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACjD5F,OAAA;gBAAQ2G,OAAO,EAAE9B,UAAW;gBAAA0B,QAAA,EAAC;cAAI;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5F,OAAA;UAAKwG,SAAS,EAAC,aAAa;UAAAD,QAAA,gBAC1BvG,OAAA;YAAAuG,QAAA,eACEvG,OAAA;cAAGwG,SAAS,EAAC,UAAU;cAAAD,QAAA,GAAE3E,QAAQ,EAAC,SAAE;YAAA;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACN5F,OAAA;YAAAuG,QAAA,eACEvG,OAAA;cACEwG,SAAS,EAAC,eAAe;cACzBI,GAAG,EAAEnH,OAAQ;cACboH,GAAG,EAAC,SAAS;cACbC,KAAK,EAAC,IAAI;cACVC,MAAM,EAAC;YAAI;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN5F,OAAA;UAAQwG,SAAS,EAAC,MAAM;UAACG,OAAO,EAAEpC,eAAgB;UAAAgC,QAAA,EAAC;QAEnD;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET5F,OAAA;UAAKwG,SAAS,EAAC,SAAS;UAAAD,QAAA,gBACtBvG,OAAA;YAAMwG,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAG9B;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP5F,OAAA;YAAMwG,SAAS,EAAC,eAAe;YAAAD,QAAA,EAAC;UAEhC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN5F,OAAA;UAAAuG,QAAA,eACEvG,OAAA,CAACF,iBAAiB;YAAC0G,SAAS,EAAC;UAAe;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB;AAAC1F,EAAA,CAzVuBD,OAAO;EAAA,QAIZT,WAAW;AAAA;AAAA+H,EAAA,GAJNtH,OAAO;AAAA,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}