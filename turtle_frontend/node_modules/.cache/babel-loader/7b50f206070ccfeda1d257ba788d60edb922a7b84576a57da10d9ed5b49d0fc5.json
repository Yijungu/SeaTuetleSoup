{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [text_question, setText_Question] = useState(\"어떤 대상에 대해 알고 싶으신가요?\");\n  const [question_step, setQuestion_Step] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${lastTime.getMonth() + 1}-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/explanation\", {\n        state: {\n          userAnswer: text_t\n        }\n      });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  // useEffect(() => {\n  //   const now = new Date();\n  //   const currentDate = `${now.getFullYear()}-${\n  //     now.getMonth() + 1\n  //   }-${now.getDate()}`;\n  //   localStorage.setItem(\"date\", currentDate);\n  // }, [qnas]);\n\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = asnync => {\n    setTabPressed(false);\n    setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = asnync => {\n    setTabPressed(true);\n    setQuestion_Step(false);\n  };\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      setQuestion_Step(false);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text_x,\n            answer: \"5자 이상으로 입력해주세요.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n            data: text_x\n          });\n          // console.log(anotherResponse.data.response);\n          if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\")) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers(prev => prev + 1);\n\n              // setUpdateState(true);\n            }\n\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            const newQnas = [{\n              question: text_x,\n              answer: \"정답이 아닙니다.\"\n            }, ...qnas];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n        }\n      } else {\n        if (!question_step) {\n          setQuestion_Step(true);\n          setText_t(text);\n          setTimeout(() => setText(\"\"), 0);\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/getJosa/\", {\n            data: text_x\n          });\n          setQuestion_2step_Text(response.data.response);\n        } else {\n          setQuestion_Step(false);\n          const tempQnas = [{\n            question: question_2step_text + \" \" + text_x,\n            answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 23\n            }, this)\n          }, ...qnas];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n            data: question_2step_text + \" \" + text_x + \"?\"\n          });\n          let updatedQnas;\n          if (response.data.response.startsWith(\"네\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: response.data.response\n            } : qna);\n          } else if (response.data.response.startsWith(\"아니오\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"아니오.\"\n            } : qna);\n          } else if (response.data.response.startsWith(\"모르\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"잘 모르겠습니다. 중요하지 않은 내용입니다.\"\n            } : qna);\n          } else {\n            updatedQnas = tempQnas.map(qna => qna.question === question_2step_text + \" \" + text_x && qna.answer.type === Loading ? {\n              question: question_2step_text + \" \" + text_x,\n              answer: \"잘 모르겠습니다. 중요하지 않은 내용입니다.\"\n            } : qna);\n          }\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question_box\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Question\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"source\",\n            children: \"출처 : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle_check_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quesiton_check_box\",\n              onClick: handleQuesionCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${!tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), \" 질문\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result_check_box\",\n              onClick: handleAnswerCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this), \" 정답\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"qeustion_text\",\n            children: text_question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qeustion_text_box\",\n            children: [question_step && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"textbox_step\",\n              children: question_2step_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `textbox ${shake ? \"shake\" : \"\"}`,\n              value: text,\n              onChange: handleChange,\n              onKeyDown: handleKeyPress,\n              placeholder: !tabPressed ? question_step ? \"질문을 입력하세요.\" : \"ex) 남자\" : \"정답을 입력해주세요.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `send_button ${tabPressed ? \"tabPressed\" : \"\"}`,\n            onClick: handleSendClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SendButton\",\n              src: SendButton,\n              alt: \"SendButton\",\n              width: \"15\",\n              height: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              answer: isLoading && qna.question === text ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading\",\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 23\n              }, this) : qna.answer,\n              borderStrength: index === 0 ? \"2px\" : \"0px\",\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"giveup_button\",\n              onClick: openModal,\n              children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              overlayClassName: \"ModalOverlay\",\n              className: \"ModalContent\",\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\uC815\\uB9D0\\uB85C \\uD3EC\\uAE30\\uB97C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: closeModal,\n                  children: \"\\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleGiveUpClick,\n                  children: \"\\uD655\\uC778\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"F22F\",\n          src: F22FBeta,\n          alt: \"F22FBeta\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: \"Tab \\uD0A4\\uB97C \\uB20C\\uB7EC N\\uBC88\\uC9F8 \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"gRpqmP6nJxGDAH9g5ZMVAzkVV3w=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","F22FBeta","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","text_t","setText_t","text_question","setText_Question","question_step","setQuestion_Step","question_2step_text","setQuestion_2step_Text","now","Date","currentDate","getFullYear","getMonth","getDate","lastTime","localStorage","getItem","lastDate","setItem","savedNickname","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","get","process","env","REACT_APP_API_URL","then","response","data","catch","error","console","handleChange","e","target","value","handleQuesionCheckcclick","asnync","handleAnswerCheckcclick","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","text_x","setTimeout","length","newQnas","answer","anotherResponse","post","startsWith","prev","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","map","qna","type","openModal","div","initial","opacity","animate","exit","children","className","onClick","onChange","onKeyDown","placeholder","src","alt","width","height","index","borderStrength","borderBottomStrength","isOpen","onRequestClose","overlayClassName","contentLabel","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [text_question, setText_Question] = useState(\n    \"어떤 대상에 대해 알고 싶으신가요?\"\n  );\n  const [question_step, setQuestion_Step] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${\n        lastTime.getMonth() + 1\n      }-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n\n    setCorrectAnswers(savedCorrectAnswers);\n\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/explanation\", { state: { userAnswer: text_t } });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  // useEffect(() => {\n  //   const now = new Date();\n  //   const currentDate = `${now.getFullYear()}-${\n  //     now.getMonth() + 1\n  //   }-${now.getDate()}`;\n  //   localStorage.setItem(\"date\", currentDate);\n  // }, [qnas]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = (asnync) => {\n    setTabPressed(false);\n    setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = (asnync) => {\n    setTabPressed(true);\n    setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      setQuestion_Step(false);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text_x, answer: \"5자 이상으로 입력해주세요.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        } else {\n          const anotherResponse = await axios.post(\n            process.env.REACT_APP_API_URL + \"/submit/\",\n            {\n              data: text_x,\n            }\n          );\n          // console.log(anotherResponse.data.response);\n          if (\n            anotherResponse.data.response.startsWith(\"네\") ||\n            anotherResponse.data.response.startsWith(\"예\") ||\n            anotherResponse.data.response.startsWith(\"맞습니다\")\n          ) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${\n              now.getMonth() + 1\n            }-${now.getDate()}`;\n\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (\n              lastGiveUpDate !== currentDate &&\n              lastCorrectDate !== currentDate\n            ) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers((prev) => prev + 1);\n\n              // setUpdateState(true);\n            }\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            const newQnas = [\n              { question: text_x, answer: \"정답이 아닙니다.\" },\n              ...qnas,\n            ];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n        }\n      } else {\n        if (!question_step) {\n          setQuestion_Step(true);\n          setText_t(text);\n          setTimeout(() => setText(\"\"), 0);\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/getJosa/\",\n            {\n              data: text_x,\n            }\n          );\n          setQuestion_2step_Text(response.data.response);\n        } else {\n          setQuestion_Step(false);\n          const tempQnas = [\n            {\n              question: question_2step_text + \" \" + text_x,\n              answer: <Loading />,\n            },\n            ...qnas,\n          ];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/question/\",\n            {\n              data: question_2step_text + \" \" + text_x + \"?\",\n            }\n          );\n\n          let updatedQnas;\n          if (response.data.response.startsWith(\"네\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: response.data.response,\n                  }\n                : qna\n            );\n          } else if (response.data.response.startsWith(\"아니오\")) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"아니오.\",\n                  }\n                : qna\n            );\n          } else if (response.data.response.startsWith(\"모르\")) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"잘 모르겠습니다. 중요하지 않은 내용입니다.\",\n                  }\n                : qna\n            );\n          } else {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === question_2step_text + \" \" + text_x &&\n              qna.answer.type === Loading\n                ? {\n                    question: question_2step_text + \" \" + text_x,\n                    answer: \"잘 모르겠습니다. 중요하지 않은 내용입니다.\",\n                  }\n                : qna\n            );\n          }\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"question_box\">\n              <span className=\"Question\">{question}</span>\n            </div>\n            <p className=\"source\">{\"출처 : \"}</p>\n            <div className=\"circle_check_box\">\n              <div\n                className=\"quesiton_check_box\"\n                onClick={handleQuesionCheckcclick}\n              >\n                <div\n                  className={`circle ${!tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 질문\"}\n              </div>\n              <div\n                className=\"result_check_box\"\n                onClick={handleAnswerCheckcclick}\n              >\n                <div\n                  className={`circle ${tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 정답\"}\n              </div>\n            </div>\n            <p className=\"qeustion_text\">{text_question}</p>\n\n            <div className=\"qeustion_text_box\">\n              {question_step && (\n                <span className=\"textbox_step\">{question_2step_text}</span>\n              )}\n\n              <input\n                className={`textbox ${shake ? \"shake\" : \"\"}`}\n                value={text}\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder={\n                  !tabPressed\n                    ? question_step\n                      ? \"질문을 입력하세요.\"\n                      : \"ex) 남자\"\n                    : \"정답을 입력해주세요.\"\n                }\n              />\n            </div>\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  answer={\n                    isLoading && qna.question === text ? (\n                      <span className=\"loading\">Loading</span>\n                    ) : (\n                      qna.answer\n                    )\n                  }\n                  borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n            <div>\n              <button className=\"giveup_button\" onClick={openModal}>\n                포기하기\n              </button>\n\n              <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                overlayClassName=\"ModalOverlay\"\n                className=\"ModalContent\"\n                contentLabel=\"포기 확인\"\n              >\n                <h2>정말로 포기를 하시겠습니까?</h2>\n                <div className=\"button-container\">\n                  <button onClick={closeModal}>취소</button>\n                  <button onClick={handleGiveUpClick}>확인</button>\n                </div>\n              </Modal>\n            </div>\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <img\n            className=\"F22F\"\n            src={F22FBeta}\n            alt=\"F22FBeta\"\n            onClick={handleLogoClick}\n          />\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              Tab 키를 눌러 N번째 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}