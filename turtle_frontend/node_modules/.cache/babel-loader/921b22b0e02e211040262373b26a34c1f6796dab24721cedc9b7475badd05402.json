{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", {\n        state: {\n          userAnswer: text\n        }\n      });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    setText(\"포기할게요\");\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      const text_t = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n          data: text_t\n        });\n        console.log(anotherResponse.data.response);\n        if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\")) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers(prev => prev + 1);\n\n            // setUpdateState(true);\n          }\n\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text,\n            answer: \"정답이 아닙니다.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{\n          question: text,\n          answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 53\n          }, this)\n        }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n          data: text_t\n        });\n        const updatedQnas = tempQnas.map(qna => qna.question === text && qna.answer.type === Loading ? {\n          question: text,\n          answer: response.data.response\n        } : qna);\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question_box\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Question\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `textbox ${shake ? \"shake\" : \"\"}`,\n            value: text,\n            onChange: handleChange,\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `send_button ${tabPressed ? \"tabPressed\" : \"\"}`,\n            onClick: handleSendClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SendButton\",\n              src: SendButton,\n              alt: \"SendButton\",\n              width: \"15\",\n              height: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              answer: isLoading && qna.question === text ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading\",\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 23\n              }, this) : qna.answer,\n              borderStrength: index === 0 ? \"2px\" : \"0px\",\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"giveup_button\",\n            onClick: handleGiveUpClick,\n            children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"F22F\",\n          children: \"F22F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: \"N\\uBC88\\uC9F8 \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_179\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"uZbEAFG2zeUgK3Cwc006SePCKXo=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","useNavigate","Profile","SendButton","Loading","motion","ScrollToTopButton","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","savedNickname","localStorage","getItem","now","Date","currentDate","getFullYear","getMonth","getDate","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","setItem","console","log","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","process","env","REACT_APP_API_URL","get","then","response","data","catch","error","handleChange","e","target","value","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","lastGiveUpDate","lastCorrectDate","text_t","setTimeout","anotherResponse","post","startsWith","prev","newQnas","answer","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","map","qna","type","div","initial","opacity","animate","exit","children","className","onChange","onKeyDown","onClick","src","alt","width","height","index","borderStrength","borderBottomStrength","length","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", { state: { userAnswer: text } });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    setText(\"포기할게요\");\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      const text_t = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(\n          process.env.REACT_APP_API_URL + \"/submit/\",\n          {\n            data: text_t,\n          }\n        );\n        console.log(anotherResponse.data.response);\n        if (\n          anotherResponse.data.response.startsWith(\"네\") ||\n          anotherResponse.data.response.startsWith(\"예\") ||\n          anotherResponse.data.response.startsWith(\"맞습니다\")\n        ) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${\n            now.getMonth() + 1\n          }-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (\n            lastGiveUpDate !== currentDate &&\n            lastCorrectDate !== currentDate\n          ) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers((prev) => prev + 1);\n\n            // setUpdateState(true);\n          }\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text, answer: \"정답이 아닙니다.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{ question: text, answer: <Loading /> }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(\n          process.env.REACT_APP_API_URL + \"/question/\",\n          {\n            data: text_t,\n          }\n        );\n        const updatedQnas = tempQnas.map((qna) =>\n          qna.question === text && qna.answer.type === Loading\n            ? { question: text, answer: response.data.response }\n            : qna\n        );\n\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"question_box\">\n              <span className=\"Question\">{question}</span>\n            </div>\n            <input\n              className={`textbox ${shake ? \"shake\" : \"\"}`}\n              value={text}\n              onChange={handleChange}\n              onKeyDown={handleKeyPress}\n            />\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  answer={\n                    isLoading && qna.question === text ? (\n                      <span className=\"loading\">Loading</span>\n                    ) : (\n                      qna.answer\n                    )\n                  }\n                  borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n            <button className=\"giveup_button\" onClick={handleGiveUpClick}>\n              포기하기\n            </button>\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <button className=\"F22F\">F22F</button>\n\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              N번째 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div className=\"e218_179\"></div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}