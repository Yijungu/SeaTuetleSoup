{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport ButtonWithTip from \"../../component/tiptoolbutton\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\"어떤 대상에 대해 알고 싶으신가요?\");\n  const [question_step, setQuestion_Step] = useState(true);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"힌트 A: 기본적인 힌트\");\n  const [hintText2, setHintText2] = useState(\"힌트 B: 결정적인 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  const [background_text, setBackGroudText] = useState(\"정답을 입력하세요.\");\n  const [background_question_text, setBackgroundQuestionText] = useState(\"주어를 넣어 질문을 입력하세요.\");\n  const [answerloding_text, setAnswerLodingText] = useState(\"정답을 확인중입니다.\");\n  const [position, setPosition] = useState({\n    x: 5,\n    y: 0\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [n, setN] = useState(0);\n  const [loadingQuestions, setLoadingQuestions] = useState({});\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getNnumber/\").then(response => {\n      const data = response.data;\n      setN(data.n);\n    });\n  }, []);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${lastTime.getMonth() + 1}-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(qnas);\n  // }, [qnas]);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: \"\"\n          }\n        });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: text_t\n          }\n        });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n      setAuthor(data.author);\n      setMainCharacter(data.main_character);\n      setHint(data.hints && data.hints.length > 0 ? data.hints[0].hint : null);\n      setHint2(data.hints && data.hints.length > 1 ? data.hints[1].hint : null);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = asnync => {\n    setTabPressed(false);\n    setTimeout(() => setPosition({\n      x: 8,\n      y: 0\n    }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n\n  const handleAnswerCheckcclick = asnync => {\n    setTabPressed(true);\n    setTimeout(() => setPosition({\n      x: 35,\n      y: 0\n    }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      if (position.x == 35) {\n        setTimeout(() => setPosition({\n          x: 8,\n          y: 0\n        }));\n        updateColor();\n      } else {\n        setTimeout(() => setPosition({\n          x: 35,\n          y: 0\n        }));\n        updateColor();\n      }\n      // setQuestion_Step(false);\n    }\n\n    if (e.key === \"Escape\") {\n      // setQuestion_Step(false);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setBackGroudText(\" \");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setBackGroudText(\"정답을 입력하세요.\"), 600);\n        } else {\n          setBackGroudText(\"\");\n          const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n            data: text_x\n          });\n          console.log(anotherResponse.data.response);\n          if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\") || anotherResponse.data.response.startsWith(\"Yes\")) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers(prev => prev + 1);\n\n              // setUpdateState(true);\n            }\n\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n            const newQnas = [{\n              question: text_x,\n              aiQuestion: anotherResponse.data.ai_question,\n              aiQuestionKr: anotherResponse.data.ai_question_kr,\n              answerSubmit: true,\n              answer: \"정답이 아닙니다.\"\n            }, ...savedQnas];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n          setBackGroudText(\"정답을 입력하세요.\");\n        }\n      } else {\n        if (text_x.length <= 5) {\n          setBackgroundQuestionText(\"\");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setBackgroundQuestionText(\"주어를 넣어 질문을 입력하세요\"), 600);\n        } else {\n          // let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n          const tempQnas = [{\n            question: text_x,\n            aiQuestion: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 27\n            }, this),\n            answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 23\n            }, this),\n            aiQuestionKr: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this),\n            answerSubmit: false,\n            isDelete: false\n          }, ...qnas];\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n          setLoadingQuestions({\n            ...loadingQuestions,\n            [text_x]: true\n          });\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n            data: text_x\n          });\n          let updatedQnas;\n          // console.log(response.data.ai_question);\n\n          let responseString = JSON.stringify(response.data.response);\n          console.log(responseString);\n          if (responseString.includes(\"Yes\") || responseString.includes(\"yes\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && loadingQuestions[text_x] ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"네.\"\n            } : qna);\n          } else if (responseString.includes(\"No\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && loadingQuestions[text_x] ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"아니오.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably not\") || responseString.includes(\"probably not\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && loadingQuestions[text_x] ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"아마도 아닐 겁니다.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably\") || responseString.includes(\"probably\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && loadingQuestions[text_x] ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"아마도 맞을 겁니다.\"\n            } : qna);\n          } else {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && loadingQuestions[text_x] ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"중요하지 않은 정보입니다.\"\n            } : qna);\n          }\n          setLoadingQuestions({\n            ...loadingQuestions,\n            [text_x]: false\n          });\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  const trackPosition = (e, ui) => {\n    // Calculate the new color based on newX\n    // Here you may need to adapt the calculation based on your actual min and max x values\n\n    // Update position\n    setPosition({\n      x: ui.x,\n      y: ui.y\n    });\n  };\n  const updateColor = () => {\n    const newColor = !tabPressed ? \"#5374e8\" : \"#5DB075\";\n\n    // Set the new background color to the button\n    document.querySelector(\".slider\").style.border = \"1px solid \" + newColor;\n    document.querySelector(\".slider-button\").style.background = newColor;\n  };\n  const endDrag = () => {\n    if (position.x < 21) {\n      setPosition({\n        x: 8,\n        y: 0\n      });\n      setTabPressed(false);\n      updateColor();\n    } else {\n      setPosition({\n        x: 35,\n        y: 0\n      });\n      setTabPressed(true);\n      updateColor();\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem_main_box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question_box\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"Question\",\n                children: question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), author && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source\",\n            children: `출처 : ${author}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle_check_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quesiton_check_box\",\n              onClick: handleQuesionCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${!tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this), \" 질문\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result_check_box\",\n              onClick: handleAnswerCheckcclick,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `circle ${tabPressed ? \"checked\" : \"unchecked\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 17\n              }, this), \" 정답\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint_giveup_button_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"hint_button_box\",\n              onClick: openHintModal,\n              children: \"\\uD78C\\uD2B8 \\uBCF4\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: hintmodalIsOpen,\n              onRequestClose: closeHintModal,\n              overlayClassName: \"ModalOverlay\",\n              className: \"ModalContent\",\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  position: \"absolute\",\n                  right: \"3px\",\n                  top: \"3px\",\n                  outline: \"none\",\n                  border: \"0px\",\n                  backgroundColor: \"#ffffff\"\n                },\n                onClick: closeHintModal,\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"15px\",\n                  // marginBottom: \"30px\",\n                  letterSpacing: \"-0.1px\"\n                },\n                children: \"\\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC \\uD78C\\uD2B8\\uB97C \\uD655\\uC778\\uD574\\uBCF4\\uC138\\uC694.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  borderTop: \"1px solid black\"\n                },\n                className: \"hint-button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginTop: \"20px\",\n                    borderRadius: \"4px\",\n                    border: \"1px solid #2d2d2d\",\n                    backgroundColor: \"#ffffff\",\n                    padding: \"7px\"\n                  },\n                  className: \"hint_button\",\n                  onClick: () => setHintText(hint),\n                  children: hintText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: \"4px\",\n                    border: \"1px solid #2d2d2d\",\n                    backgroundColor: \"#ffffff\",\n                    padding: \"7px\"\n                  },\n                  className: \"hint_button\",\n                  onClick: () => setHintText2(hint2),\n                  children: hintText2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"giveup_button\",\n              onClick: openModal,\n              children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              overlayClassName: \"ModalOverlay\",\n              className: \"ModalContent\",\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"15px\",\n                  marginBottom: \"30px\",\n                  letterSpacing: \"-0.1px\"\n                },\n                children: \"\\uC815\\uB9D0 \\uD3EC\\uAE30\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: \"4px\",\n                    border: \"1px solid #2d2d2d\",\n                    backgroundColor: \"#ffffff\",\n                    marginLeft: \"30px\",\n                    padding: \"0px\"\n                  },\n                  onClick: closeModal,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      marginTop: \"5px\",\n                      marginBottom: \"5px\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\"\n                    },\n                    children: \"\\uCDE8\\uC18C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    borderRadius: \"4px\",\n                    border: \"1px solid #2d2d2d\",\n                    backgroundColor: \"#3E5FD1\",\n                    marginRight: \"30px\",\n                    padding: \"0px\"\n                  },\n                  onClick: handleGiveUpClick,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"#ffffff\",\n                      marginTop: \"5px\",\n                      marginBottom: \"5px\",\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\"\n                    },\n                    children: \"\\uD655\\uC778\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qeustion_text_box\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `textbox ${shake ? \"shake\" : \"\"}`,\n              value: text,\n              onChange: handleChange,\n              onKeyDown: handleKeyPress,\n              placeholder: !tabPressed ? question_step ? `${background_question_text}` : `ex) ${main_character}` : `${background_text}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), background_text === \"\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                position: \"absolute\"\n              },\n              children: answerloding_text.split(\"\").map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  animationDelay: `${(i - 1) * 100}ms`,\n                  left: i > 2 ? `${33 + (i - 3) * 13}px` : `${i * 13}px`\n                },\n                className: \"wave\",\n                children: char\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this), (background_question_text === \"\" || background_text === \" \") && /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"shake-text\",\n              children: \"5\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `slider`,\n              children: /*#__PURE__*/_jsxDEV(Draggable, {\n                axis: \"x\",\n                bounds: {\n                  left: 8,\n                  right: 35,\n                  top: 0,\n                  bottom: 0\n                },\n                position: position,\n                onDrag: trackPosition,\n                onStop: endDrag,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slider-button\",\n                  onClick: handleSendClick,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"SendButton\",\n                    src: SendButton,\n                    alt: \"SendButton\",\n                    width: \"10\",\n                    height: \"15\",\n                    style: {\n                      top: \"3px\",\n                      cursor: \"move\",\n                      transition: \"left 0.3s ease-out\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 717,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => !qna.isDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              aiQuestion: qna.aiQuestion,\n              aiQuestionKr: qna.aiQuestionKr,\n              answerSubmit: qna.answerSubmit,\n              index: index,\n              answer: qna.answer,\n              opened: index === 0 ? true : false,\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\",\n              updateQnas: indexToDelete => {\n                setQnas(qnas.map((qna, index) => index === indexToDelete ? {\n                  ...qna,\n                  isDelete: true\n                } : qna));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"F22F\",\n          src: F22FBeta,\n          alt: \"F22FBeta\",\n          onClick: handleLogoClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: [\"Tab \\uD0A4\\uB97C \\uB20C\\uB7EC \", n, \"\\uBC88\\uC9F8 \\uBB38\\uC81C\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonWithTip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 511,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"TC9HG8bqQjpBCg7+cflCGRD0gg4=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","F22FBeta","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","ButtonWithTip","Draggable","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","hintmodalIsOpen","setHintModalIsOpen","text_t","setText_t","author","setAuthor","main_character","setMainCharacter","text_question","setText_Question","question_step","setQuestion_Step","givup","setGiveUp","question_2step_text","setQuestion_2step_Text","hintText","setHintText","hintText2","setHintText2","hint","setHint","hint2","setHint2","background_text","setBackGroudText","background_question_text","setBackgroundQuestionText","answerloding_text","setAnswerLodingText","position","setPosition","x","y","isActive","setIsActive","n","setN","loadingQuestions","setLoadingQuestions","get","process","env","REACT_APP_API_URL","then","response","data","now","Date","currentDate","getFullYear","getMonth","getDate","lastTime","localStorage","getItem","lastDate","setItem","savedNickname","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","hints","length","catch","error","console","handleChange","e","target","value","handleQuesionCheckcclick","asnync","setTimeout","updateColor","handleAnswerCheckcclick","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","text_x","anotherResponse","post","log","startsWith","prev","newQnas","aiQuestion","ai_question","aiQuestionKr","ai_question_kr","answerSubmit","answer","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","isDelete","updatedQnas","responseString","includes","map","qna","trackPosition","ui","newColor","document","querySelector","style","border","background","endDrag","openModal","openHintModal","closeHintModal","div","initial","opacity","animate","exit","children","className","onClick","isOpen","onRequestClose","overlayClassName","contentLabel","right","top","outline","backgroundColor","fontSize","letterSpacing","borderTop","marginTop","borderRadius","padding","marginBottom","marginLeft","marginRight","color","onChange","onKeyDown","placeholder","split","char","i","animationDelay","left","axis","bounds","bottom","onDrag","onStop","src","alt","width","height","cursor","transition","index","opened","borderBottomStrength","updateQnas","indexToDelete","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport ButtonWithTip from \"../../component/tiptoolbutton\";\nimport Draggable from \"react-draggable\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\n    \"어떤 대상에 대해 알고 싶으신가요?\"\n  );\n  const [question_step, setQuestion_Step] = useState(true);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"힌트 A: 기본적인 힌트\");\n  const [hintText2, setHintText2] = useState(\"힌트 B: 결정적인 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  const [background_text, setBackGroudText] = useState(\"정답을 입력하세요.\");\n  const [background_question_text, setBackgroundQuestionText] =\n    useState(\"주어를 넣어 질문을 입력하세요.\");\n  const [answerloding_text, setAnswerLodingText] =\n    useState(\"정답을 확인중입니다.\");\n  const [position, setPosition] = useState({ x: 5, y: 0 });\n  const [isActive, setIsActive] = useState(false);\n  const [n, setN] = useState(0);\n  const [loadingQuestions, setLoadingQuestions] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getNnumber/\")\n      .then((response) => {\n        const data = response.data;\n        setN(data.n);\n      });\n  }, []);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${\n        lastTime.getMonth() + 1\n      }-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n\n    setCorrectAnswers(savedCorrectAnswers);\n\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(qnas);\n  // }, [qnas]);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", { state: { userAnswer: \"\" } });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", { state: { userAnswer: text_t } });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n        setAuthor(data.author);\n        setMainCharacter(data.main_character);\n        setHint(\n          data.hints && data.hints.length > 0 ? data.hints[0].hint : null\n        );\n        setHint2(\n          data.hints && data.hints.length > 1 ? data.hints[1].hint : null\n        );\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = (asnync) => {\n    setTabPressed(false);\n    setTimeout(() => setPosition({ x: 8, y: 0 }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = (asnync) => {\n    setTabPressed(true);\n    setTimeout(() => setPosition({ x: 35, y: 0 }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      if (position.x == 35) {\n        setTimeout(() => setPosition({ x: 8, y: 0 }));\n        updateColor();\n      } else {\n        setTimeout(() => setPosition({ x: 35, y: 0 }));\n        updateColor();\n      }\n      // setQuestion_Step(false);\n    }\n    if (e.key === \"Escape\") {\n      // setQuestion_Step(false);\n    }\n  };\n\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setBackGroudText(\" \");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setBackGroudText(\"정답을 입력하세요.\"), 600);\n        } else {\n          setBackGroudText(\"\");\n          const anotherResponse = await axios.post(\n            process.env.REACT_APP_API_URL + \"/submit/\",\n            {\n              data: text_x,\n            }\n          );\n          console.log(anotherResponse.data.response);\n          if (\n            anotherResponse.data.response.startsWith(\"네\") ||\n            anotherResponse.data.response.startsWith(\"예\") ||\n            anotherResponse.data.response.startsWith(\"맞습니다\") ||\n            anotherResponse.data.response.startsWith(\"Yes\")\n          ) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${\n              now.getMonth() + 1\n            }-${now.getDate()}`;\n\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (\n              lastGiveUpDate !== currentDate &&\n              lastCorrectDate !== currentDate\n            ) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers((prev) => prev + 1);\n\n              // setUpdateState(true);\n            }\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n            const newQnas = [\n              {\n                question: text_x,\n                aiQuestion: anotherResponse.data.ai_question,\n                aiQuestionKr: anotherResponse.data.ai_question_kr,\n                answerSubmit: true,\n                answer: \"정답이 아닙니다.\",\n              },\n              ...savedQnas,\n            ];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n          setBackGroudText(\"정답을 입력하세요.\");\n        }\n      } else {\n        if (text_x.length <= 5) {\n          setBackgroundQuestionText(\"\");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(\n            () => setBackgroundQuestionText(\"주어를 넣어 질문을 입력하세요\"),\n            600\n          );\n        } else {\n          // let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n          const tempQnas = [\n            {\n              question: text_x,\n              aiQuestion: <Loading />,\n              answer: <Loading />,\n              aiQuestionKr: <Loading />,\n              answerSubmit: false,\n              isDelete: false,\n            },\n            ...qnas,\n          ];\n\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n          setLoadingQuestions({ ...loadingQuestions, [text_x]: true });\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/question/\",\n            {\n              data: text_x,\n            }\n          );\n          let updatedQnas;\n          // console.log(response.data.ai_question);\n\n          let responseString = JSON.stringify(response.data.response);\n          console.log(responseString);\n          if (\n            responseString.includes(\"Yes\") ||\n            responseString.includes(\"yes\")\n          ) {\n            // if (true) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && loadingQuestions[text_x]\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"네.\",\n                  }\n                : qna\n            );\n          } else if (responseString.includes(\"No\")) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && loadingQuestions[text_x]\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"아니오.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably not\") ||\n            responseString.includes(\"probably not\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && loadingQuestions[text_x]\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"아마도 아닐 겁니다.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably\") ||\n            responseString.includes(\"probably\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && loadingQuestions[text_x]\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"아마도 맞을 겁니다.\",\n                  }\n                : qna\n            );\n          } else {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && loadingQuestions[text_x]\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"중요하지 않은 정보입니다.\",\n                  }\n                : qna\n            );\n          }\n          setLoadingQuestions({ ...loadingQuestions, [text_x]: false });\n          setQnas(updatedQnas); // 응답으로 교체\n          saveQnas(updatedQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        }\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  const trackPosition = (e, ui) => {\n    // Calculate the new color based on newX\n    // Here you may need to adapt the calculation based on your actual min and max x values\n\n    // Update position\n    setPosition({ x: ui.x, y: ui.y });\n  };\n\n  const updateColor = () => {\n    const newColor = !tabPressed ? \"#5374e8\" : \"#5DB075\";\n\n    // Set the new background color to the button\n    document.querySelector(\".slider\").style.border = \"1px solid \" + newColor;\n    document.querySelector(\".slider-button\").style.background = newColor;\n  };\n\n  const endDrag = () => {\n    if (position.x < 21) {\n      setPosition({ x: 8, y: 0 });\n      setTabPressed(false);\n      updateColor();\n    } else {\n      setPosition({ x: 35, y: 0 });\n      setTabPressed(true);\n      updateColor();\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"problem_main_box\">\n              <div className=\"question_box\">\n                <span className=\"Question\">{question}</span>\n              </div>\n            </div>\n            {author && <span className=\"source\">{`출처 : ${author}`}</span>}\n            <div className=\"circle_check_box\">\n              <div\n                className=\"quesiton_check_box\"\n                onClick={handleQuesionCheckcclick}\n              >\n                <div\n                  className={`circle ${!tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 질문\"}\n              </div>\n              <div\n                className=\"result_check_box\"\n                onClick={handleAnswerCheckcclick}\n              >\n                <div\n                  className={`circle ${tabPressed ? \"checked\" : \"unchecked\"}`}\n                ></div>\n                {\" 정답\"}\n              </div>\n            </div>\n            <div className=\"hint_giveup_button_box\">\n              <button className=\"hint_button_box\" onClick={openHintModal}>\n                힌트 보기\n              </button>\n              <Modal\n                isOpen={hintmodalIsOpen}\n                onRequestClose={closeHintModal}\n                overlayClassName=\"ModalOverlay\"\n                className=\"ModalContent\"\n                contentLabel=\"포기 확인\"\n              >\n                <button\n                  style={{\n                    position: \"absolute\",\n                    right: \"3px\",\n                    top: \"3px\",\n                    outline: \"none\",\n                    border: \"0px\",\n                    backgroundColor: \"#ffffff\",\n                  }}\n                  onClick={closeHintModal}\n                >\n                  x\n                </button>\n                <p\n                  style={{\n                    fontSize: \"15px\",\n                    // marginBottom: \"30px\",\n                    letterSpacing: \"-0.1px\",\n                  }}\n                >\n                  버튼을 눌러 힌트를 확인해보세요.\n                </p>\n                <div\n                  style={{ borderTop: \"1px solid black\" }}\n                  className=\"hint-button-container\"\n                >\n                  <button\n                    style={{\n                      marginTop: \"20px\",\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      padding: \"7px\",\n                    }}\n                    className=\"hint_button\"\n                    onClick={() => setHintText(hint)}\n                  >\n                    {hintText}\n                  </button>\n                  <button\n                    style={{\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      padding: \"7px\",\n                    }}\n                    className=\"hint_button\"\n                    onClick={() => setHintText2(hint2)}\n                  >\n                    {hintText2}\n                  </button>\n                </div>\n              </Modal>\n              <button className=\"giveup_button\" onClick={openModal}>\n                포기하기\n              </button>\n\n              <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                overlayClassName=\"ModalOverlay\"\n                className=\"ModalContent\"\n                contentLabel=\"포기 확인\"\n              >\n                <p\n                  style={{\n                    fontSize: \"15px\",\n                    marginBottom: \"30px\",\n                    letterSpacing: \"-0.1px\",\n                  }}\n                >\n                  정말 포기하시겠습니까?\n                </p>\n                <div className=\"button-container\">\n                  <button\n                    style={{\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      marginLeft: \"30px\",\n                      padding: \"0px\",\n                    }}\n                    onClick={closeModal}\n                  >\n                    <p\n                      style={{\n                        marginTop: \"5px\",\n                        marginBottom: \"5px\",\n                        marginLeft: \"10px\",\n                        marginRight: \"10px\",\n                      }}\n                    >\n                      취소\n                    </p>\n                  </button>\n                  <button\n                    style={{\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#3E5FD1\",\n                      marginRight: \"30px\",\n                      padding: \"0px\",\n                    }}\n                    onClick={handleGiveUpClick}\n                  >\n                    <p\n                      style={{\n                        color: \"#ffffff\",\n                        marginTop: \"5px\",\n                        marginBottom: \"5px\",\n                        marginLeft: \"10px\",\n                        marginRight: \"10px\",\n                      }}\n                    >\n                      확인\n                    </p>\n                  </button>\n                </div>\n              </Modal>\n            </div>\n            <div className=\"qeustion_text_box\">\n              <input\n                className={`textbox ${shake ? \"shake\" : \"\"}`}\n                value={text}\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder={\n                  !tabPressed\n                    ? question_step\n                      ? `${background_question_text}`\n                      : `ex) ${main_character}`\n                    : `${background_text}`\n                }\n              />\n              {background_text === \"\" && (\n                <h1 style={{ position: \"absolute\" }}>\n                  {answerloding_text.split(\"\").map((char, i) => (\n                    <span\n                      style={{\n                        animationDelay: `${(i - 1) * 100}ms`,\n                        left: i > 2 ? `${33 + (i - 3) * 13}px` : `${i * 13}px`,\n                      }}\n                      className=\"wave\"\n                    >\n                      {char}\n                    </span>\n                  ))}\n                </h1>\n              )}\n              {(background_question_text === \"\" || background_text === \" \") && (\n                <h1 className=\"shake-text\">5자 이상 입력해주세요.</h1>\n              )}\n              <div className={`slider`}>\n                <Draggable\n                  axis=\"x\"\n                  bounds={{ left: 8, right: 35, top: 0, bottom: 0 }}\n                  position={position}\n                  onDrag={trackPosition}\n                  onStop={endDrag}\n                >\n                  <div className=\"slider-button\" onClick={handleSendClick}>\n                    <img\n                      className=\"SendButton\"\n                      src={SendButton}\n                      alt=\"SendButton\"\n                      width=\"10\"\n                      height=\"15\"\n                      style={{\n                        top: \"3px\",\n                        cursor: \"move\",\n                        transition: \"left 0.3s ease-out\",\n                      }}\n                    />\n                  </div>\n                </Draggable>\n              </div>\n            </div>\n\n            {qnas.map(\n              (qna, index) =>\n                !qna.isDelete && (\n                  <div className=\"QAresponse\" key={index}>\n                    <QnA\n                      question={qna.question}\n                      aiQuestion={qna.aiQuestion}\n                      aiQuestionKr={qna.aiQuestionKr}\n                      answerSubmit={qna.answerSubmit}\n                      index={index}\n                      answer={qna.answer}\n                      opened={index === 0 ? true : false}\n                      borderBottomStrength={\n                        index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                      }\n                      updateQnas={(indexToDelete) => {\n                        setQnas(\n                          qnas.map((qna, index) =>\n                            index === indexToDelete\n                              ? { ...qna, isDelete: true }\n                              : qna\n                          )\n                        );\n                      }}\n                    />\n                  </div>\n                )\n            )}\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <img\n            className=\"F22F\"\n            src={F22FBeta}\n            alt=\"F22FBeta\"\n            onClick={handleLogoClick}\n          />\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              Tab 키를 눌러 {n}번째 문제의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ButtonWithTip />\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMwB,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACmC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6C,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+C,eAAe,EAAEC,kBAAkB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiD,MAAM,EAAEC,SAAS,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmD,MAAM,EAAEC,SAAS,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqD,cAAc,EAAEC,gBAAgB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACuD,aAAa,EAAEC,gBAAgB,CAAC,GAAGxD,QAAQ,CAChD,qBACF,CAAC;EACD,MAAM,CAACyD,aAAa,EAAEC,gBAAgB,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2D,KAAK,EAAEC,SAAS,CAAC,GAAG5D,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM,CAAC6D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC+D,QAAQ,EAAEC,WAAW,CAAC,GAAGhE,QAAQ,CAAC,eAAe,CAAC;EACzD,MAAM,CAACiE,SAAS,EAAEC,YAAY,CAAC,GAAGlE,QAAQ,CAAC,eAAe,CAAC;EAC3D,MAAM,CAACmE,IAAI,EAAEC,OAAO,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqE,KAAK,EAAEC,QAAQ,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuE,eAAe,EAAEC,gBAAgB,CAAC,GAAGxE,QAAQ,CAAC,YAAY,CAAC;EAClE,MAAM,CAACyE,wBAAwB,EAAEC,yBAAyB,CAAC,GACzD1E,QAAQ,CAAC,mBAAmB,CAAC;EAC/B,MAAM,CAAC2E,iBAAiB,EAAEC,mBAAmB,CAAC,GAC5C5E,QAAQ,CAAC,aAAa,CAAC;EACzB,MAAM,CAAC6E,QAAQ,EAAEC,WAAW,CAAC,GAAG9E,QAAQ,CAAC;IAAE+E,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmF,CAAC,EAAEC,IAAI,CAAC,GAAGpF,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAM,CAACqF,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFqF,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,cAAc,CAAC,CACnDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1BT,IAAI,CAACS,IAAI,CAACV,CAAC,CAAC;IACd,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNlF,SAAS,CAAC,MAAM;IACd,MAAM6F,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;IACnB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAChD,IAAIF,QAAQ,EAAE;MACZA,QAAQ,GAAG,IAAIL,IAAI,CAACK,QAAQ,CAAC;MAC7B,MAAMG,QAAQ,GAAI,GAAEH,QAAQ,CAACH,WAAW,CAAC,CAAE,IACzCG,QAAQ,CAACF,QAAQ,CAAC,CAAC,GAAG,CACvB,IAAGE,QAAQ,CAACD,OAAO,CAAC,CAAE,EAAC;MACxB,IAAII,QAAQ,KAAKP,WAAW,EAAE;QAC5BK,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEV,GAAG,CAAC;QACtCO,YAAY,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;MACrC;IACF,CAAC,MAAM;MACLH,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEV,GAAG,CAAC;MACtCO,YAAY,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAENvG,SAAS,CAAC,MAAM;IACd,MAAMwG,aAAa,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIG,aAAa,EAAE;MACjB7D,WAAW,CAAC6D,aAAa,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAENxG,SAAS,CAAC,MAAM;IACd;IACA,MAAM6F,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;;IAEnB;IACA,MAAMO,SAAS,GAAGL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,MAAMK,iBAAiB,GAAGC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACtE,MAAMO,mBAAmB,GAAGD,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAE1E,MAAMQ,gBAAgB,GAAGF,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IACpE,MAAMS,wBAAwB,GAAGH,MAAM,CACrCP,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAC5C,CAAC;;IAED;IACA,IAAII,SAAS,KAAKV,WAAW,EAAE;MAC7BlE,eAAe,CAAC6E,iBAAiB,GAAG,CAAC,CAAC;MACtCvE,sBAAsB,CAAC,CAAC,CAAC;MACzB;IACF,CAAC,MAAM;MACL;MACAN,eAAe,CAAC6E,iBAAiB,IAAI,CAAC,CAAC;MACvCvE,sBAAsB,CAAC2E,wBAAwB,IAAI,CAAC,CAAC;IACvD;IAEA/E,iBAAiB,CAAC6E,mBAAmB,CAAC;IAEtC3E,cAAc,CAAC4E,gBAAgB,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;;EAEA;EACA7G,SAAS,CAAC,MAAM;IACdoG,YAAY,CAACG,OAAO,CAAC,cAAc,EAAE3E,YAAY,CAAC;IAClDwE,YAAY,CAACG,OAAO,CAAC,aAAa,EAAEvE,WAAW,CAAC;IAChDoE,YAAY,CAACG,OAAO,CAAC,gBAAgB,EAAEzE,cAAc,CAAC;IACtDsE,YAAY,CAACG,OAAO,CAAC,qBAAqB,EAAErE,mBAAmB,CAAC;EAClE,CAAC,EAAE,CAACN,YAAY,EAAEE,cAAc,EAAEE,WAAW,EAAEE,mBAAmB,CAAC,CAAC;EAEpE,MAAM6E,QAAQ,GAAI5F,IAAI,IAAK;IACzBiF,YAAY,CAACG,OAAO,CAAC,MAAM,EAAES,IAAI,CAACC,SAAS,CAAC9F,IAAI,CAAC,CAAC;EACpD,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,MAAMkH,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACf,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1D,MAAMI,SAAS,GAAGL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE9C,MAAMR,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;IAEnB,IAAIgB,SAAS,IAAIT,SAAS,KAAKV,WAAW,EAAE;MAC1C3E,OAAO,CAAC8F,SAAS,CAAC;IACpB,CAAC,MAAM;MACLd,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;MAC/BhB,YAAY,CAACG,OAAO,CAAC,MAAM,EAAER,WAAW,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN/F,SAAS,CAAC,MAAM;IACd,IAAIoC,WAAW,EAAE;MACf,IAAIsB,KAAK,EAAE;QACTnC,QAAQ,CAAC,cAAc,EAAE;UAAE8F,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAG;QAAE,CAAC,CAAC;QACvDjF,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC,MAAM;QACLd,QAAQ,CAAC,cAAc,EAAE;UAAE8F,KAAK,EAAE;YAAEC,UAAU,EAAEtE;UAAO;QAAE,CAAC,CAAC;QAC3D;QACAX,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;EACF,CAAC,EAAE,CAACD,WAAW,EAAEnB,IAAI,CAAC,CAAC;EAEvBjB,SAAS,CAAC,MAAM;IACdC,KAAK,CACFqF,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,eAAe,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAC1BtE,WAAW,CAACsE,IAAI,CAACvE,QAAQ,CAAC;MAC1B8B,SAAS,CAACyC,IAAI,CAAC1C,MAAM,CAAC;MACtBG,gBAAgB,CAACuC,IAAI,CAACxC,cAAc,CAAC;MACrCe,OAAO,CACLyB,IAAI,CAAC2B,KAAK,IAAI3B,IAAI,CAAC2B,KAAK,CAACC,MAAM,GAAG,CAAC,GAAG5B,IAAI,CAAC2B,KAAK,CAAC,CAAC,CAAC,CAACrD,IAAI,GAAG,IAC7D,CAAC;MACDG,QAAQ,CACNuB,IAAI,CAAC2B,KAAK,IAAI3B,IAAI,CAAC2B,KAAK,CAACC,MAAM,GAAG,CAAC,GAAG5B,IAAI,CAAC2B,KAAK,CAAC,CAAC,CAAC,CAACrD,IAAI,GAAG,IAC7D,CAAC;IACH,CAAC,CAAC,CACDuD,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN1H,SAAS,CAAC,MAAM;IACd,IAAIsC,UAAU,EAAE;MACdiB,gBAAgB,CAAC,YAAY,CAAC;IAChC,CAAC,MAAM;MACL,IAAIC,aAAa,EAAE;QACjBD,gBAAgB,CAAC,aAAa,CAAC;MACjC,CAAC,MAAM;QACLA,gBAAgB,CAAC,qBAAqB,CAAC;MACzC;IACF;EACF,CAAC,EAAE,CAACjB,UAAU,EAAEkB,aAAa,CAAC,CAAC;EAE/B,MAAMoE,YAAY,GAAIC,CAAC,IAAK;IAC1B3G,OAAO,CAAC2G,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EACD,MAAMC,wBAAwB,GAAIC,MAAM,IAAK;IAC3C1F,aAAa,CAAC,KAAK,CAAC;IACpB2F,UAAU,CAAC,MAAMrD,WAAW,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC,CAAC;IAC7CoD,WAAW,CAAC,CAAC;IACb;EACF,CAAC;;EACD,MAAMC,uBAAuB,GAAIH,MAAM,IAAK;IAC1C1F,aAAa,CAAC,IAAI,CAAC;IACnB2F,UAAU,CAAC,MAAMrD,WAAW,CAAC;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC,CAAC;IAC9CoD,WAAW,CAAC,CAAC;IACb;EACF,CAAC;;EAED,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC9G,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAM+G,cAAc,GAAIT,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACU,GAAG,KAAK,OAAO,EAAE;MACrBV,CAAC,CAACW,cAAc,CAAC,CAAC;MAClBC,eAAe,CAAC,CAAC;IACnB;IACA,IAAIZ,CAAC,CAACU,GAAG,KAAK,KAAK,EAAE;MACnBV,CAAC,CAACW,cAAc,CAAC,CAAC;MAClBjG,aAAa,CAAC,CAACD,UAAU,CAAC;MAC1B,IAAIsC,QAAQ,CAACE,CAAC,IAAI,EAAE,EAAE;QACpBoD,UAAU,CAAC,MAAMrD,WAAW,CAAC;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC,CAAC;QAC7CoD,WAAW,CAAC,CAAC;MACf,CAAC,MAAM;QACLD,UAAU,CAAC,MAAMrD,WAAW,CAAC;UAAEC,CAAC,EAAE,EAAE;UAAEC,CAAC,EAAE;QAAE,CAAC,CAAC,CAAC;QAC9CoD,WAAW,CAAC,CAAC;MACf;MACA;IACF;;IACA,IAAIN,CAAC,CAACU,GAAG,KAAK,QAAQ,EAAE;MACtB;IAAA;EAEJ,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCC,UAAU,CAAC,CAAC;IACZ,MAAMC,cAAc,GAAGxC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC7D,MAAMwC,eAAe,GAAGzC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC/D,MAAMR,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;IACnBE,YAAY,CAACG,OAAO,CAAC,SAAS,EAAEV,GAAG,CAAC;IACpC;IACA,IAAI+C,cAAc,KAAK7C,WAAW,IAAI8C,eAAe,KAAK9C,WAAW,EAAE;MACrE;;MAEAK,YAAY,CAACG,OAAO,CAAC,gBAAgB,EAAER,WAAW,CAAC;;MAEnD;MACA9D,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC;IACA2B,SAAS,CAAC,IAAI,CAAC;IACftB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMoG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIjG,YAAY,EAAE;IAClB;IACAC,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACFQ,SAAS,CAAChC,IAAI,CAAC;MACf,MAAM6H,MAAM,GAAG7H,IAAI;MACnBiH,UAAU,CAAC,MAAMhH,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAChC;MACA,IAAIoB,UAAU,KAAK,IAAI,EAAE;QACvB;QACA,IAAIwG,MAAM,CAACtB,MAAM,IAAI,CAAC,EAAE;UACtBjD,gBAAgB,CAAC,GAAG,CAAC;UACrBpC,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;UAC/CgG,UAAU,CAAC,MAAM3D,gBAAgB,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC;QACvD,CAAC,MAAM;UACLA,gBAAgB,CAAC,EAAE,CAAC;UACpB,MAAMwE,eAAe,GAAG,MAAM9I,KAAK,CAAC+I,IAAI,CACtCzD,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,UAAU,EAC1C;YACEG,IAAI,EAAEkD;UACR,CACF,CAAC;UACDnB,OAAO,CAACsB,GAAG,CAACF,eAAe,CAACnD,IAAI,CAACD,QAAQ,CAAC;UAC1C,IACEoD,eAAe,CAACnD,IAAI,CAACD,QAAQ,CAACuD,UAAU,CAAC,GAAG,CAAC,IAC7CH,eAAe,CAACnD,IAAI,CAACD,QAAQ,CAACuD,UAAU,CAAC,GAAG,CAAC,IAC7CH,eAAe,CAACnD,IAAI,CAACD,QAAQ,CAACuD,UAAU,CAAC,MAAM,CAAC,IAChDH,eAAe,CAACnD,IAAI,CAACD,QAAQ,CAACuD,UAAU,CAAC,KAAK,CAAC,EAC/C;YACA,MAAMrD,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;YACtB,MAAMC,WAAW,GAAI,GAAEF,GAAG,CAACG,WAAW,CAAC,CAAE,IACvCH,GAAG,CAACI,QAAQ,CAAC,CAAC,GAAG,CAClB,IAAGJ,GAAG,CAACK,OAAO,CAAC,CAAE,EAAC;YAEnBE,YAAY,CAACG,OAAO,CAAC,SAAS,EAAEV,GAAG,CAAC;YACpC;YACA,MAAMgD,eAAe,GAAGzC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;YAC/D,MAAMuC,cAAc,GAAGxC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;;YAE7D;YACA,IACEuC,cAAc,KAAK7C,WAAW,IAC9B8C,eAAe,KAAK9C,WAAW,EAC/B;cACA;cACAK,YAAY,CAACG,OAAO,CAAC,iBAAiB,EAAER,WAAW,CAAC;;cAEpD;cACAhE,iBAAiB,CAAEoH,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;;cAErC;YACF;;YACA9G,cAAc,CAAC,IAAI,CAAC;UACtB,CAAC,MAAM;YACLZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAChB,IAAIyF,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACf,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxD,MAAM+C,OAAO,GAAG,CACd;cACE/H,QAAQ,EAAEyH,MAAM;cAChBO,UAAU,EAAEN,eAAe,CAACnD,IAAI,CAAC0D,WAAW;cAC5CC,YAAY,EAAER,eAAe,CAACnD,IAAI,CAAC4D,cAAc;cACjDC,YAAY,EAAE,IAAI;cAClBC,MAAM,EAAE;YACV,CAAC,EACD,GAAGxC,SAAS,CACb;YACD9F,OAAO,CAACgI,OAAO,CAAC;YAChBrC,QAAQ,CAACqC,OAAO,CAAC;YACjBjH,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;YAC/CgG,UAAU,CAAC,MAAMzG,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;UACxC;UACA8C,gBAAgB,CAAC,YAAY,CAAC;QAChC;MACF,CAAC,MAAM;QACL,IAAIuE,MAAM,CAACtB,MAAM,IAAI,CAAC,EAAE;UACtB/C,yBAAyB,CAAC,EAAE,CAAC;UAC7BtC,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;UAC/CgG,UAAU,CACR,MAAMzD,yBAAyB,CAAC,kBAAkB,CAAC,EACnD,GACF,CAAC;QACH,CAAC,MAAM;UACL;UACA,MAAMkF,QAAQ,GAAG,CACf;YACEtI,QAAQ,EAAEyH,MAAM;YAChBO,UAAU,eAAEvI,OAAA,CAACP,OAAO;cAAAqJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;YACvBL,MAAM,eAAE5I,OAAA,CAACP,OAAO;cAAAqJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;YACnBR,YAAY,eAAEzI,OAAA,CAACP,OAAO;cAAAqJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;YACzBN,YAAY,EAAE,KAAK;YACnBO,QAAQ,EAAE;UACZ,CAAC,EACD,GAAG7I,IAAI,CACR;UAEDC,OAAO,CAACuI,QAAQ,CAAC,CAAC,CAAC;UACnBtE,mBAAmB,CAAC;YAAE,GAAGD,gBAAgB;YAAE,CAAC0D,MAAM,GAAG;UAAK,CAAC,CAAC;UAC5D,MAAMnD,QAAQ,GAAG,MAAM1F,KAAK,CAAC+I,IAAI,CAC/BzD,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,YAAY,EAC5C;YACEG,IAAI,EAAEkD;UACR,CACF,CAAC;UACD,IAAImB,WAAW;UACf;;UAEA,IAAIC,cAAc,GAAGlD,IAAI,CAACC,SAAS,CAACtB,QAAQ,CAACC,IAAI,CAACD,QAAQ,CAAC;UAC3DgC,OAAO,CAACsB,GAAG,CAACiB,cAAc,CAAC;UAC3B,IACEA,cAAc,CAACC,QAAQ,CAAC,KAAK,CAAC,IAC9BD,cAAc,CAACC,QAAQ,CAAC,KAAK,CAAC,EAC9B;YACA;YACAF,WAAW,GAAGN,QAAQ,CAACS,GAAG,CAAEC,GAAG,IAC7BA,GAAG,CAAChJ,QAAQ,KAAKyH,MAAM,IAAI1D,gBAAgB,CAAC0D,MAAM,CAAC,GAC/C;cACEzH,QAAQ,EAAEyH,MAAM;cAChBO,UAAU,EAAE1D,QAAQ,CAACC,IAAI,CAAC0D,WAAW;cACrCC,YAAY,EAAE5D,QAAQ,CAACC,IAAI,CAAC4D,cAAc;cAC1CC,YAAY,EAAE,KAAK;cACnBO,QAAQ,EAAE,KAAK;cACfN,MAAM,EAAE;YACV,CAAC,GACDW,GACN,CAAC;UACH,CAAC,MAAM,IAAIH,cAAc,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACxCF,WAAW,GAAGN,QAAQ,CAACS,GAAG,CAAEC,GAAG,IAC7BA,GAAG,CAAChJ,QAAQ,KAAKyH,MAAM,IAAI1D,gBAAgB,CAAC0D,MAAM,CAAC,GAC/C;cACEzH,QAAQ,EAAEyH,MAAM;cAChBO,UAAU,EAAE1D,QAAQ,CAACC,IAAI,CAAC0D,WAAW;cACrCC,YAAY,EAAE5D,QAAQ,CAACC,IAAI,CAAC4D,cAAc;cAC1CC,YAAY,EAAE,KAAK;cACnBO,QAAQ,EAAE,KAAK;cACfN,MAAM,EAAE;YACV,CAAC,GACDW,GACN,CAAC;UACH,CAAC,MAAM,IACLH,cAAc,CAACC,QAAQ,CAAC,cAAc,CAAC,IACvCD,cAAc,CAACC,QAAQ,CAAC,cAAc,CAAC,EACvC;YACAF,WAAW,GAAGN,QAAQ,CAACS,GAAG,CAAEC,GAAG,IAC7BA,GAAG,CAAChJ,QAAQ,KAAKyH,MAAM,IAAI1D,gBAAgB,CAAC0D,MAAM,CAAC,GAC/C;cACEzH,QAAQ,EAAEyH,MAAM;cAChBO,UAAU,EAAE1D,QAAQ,CAACC,IAAI,CAAC0D,WAAW;cACrCC,YAAY,EAAE5D,QAAQ,CAACC,IAAI,CAAC4D,cAAc;cAC1CC,YAAY,EAAE,KAAK;cACnBO,QAAQ,EAAE,KAAK;cACfN,MAAM,EAAE;YACV,CAAC,GACDW,GACN,CAAC;UACH,CAAC,MAAM,IACLH,cAAc,CAACC,QAAQ,CAAC,UAAU,CAAC,IACnCD,cAAc,CAACC,QAAQ,CAAC,UAAU,CAAC,EACnC;YACAF,WAAW,GAAGN,QAAQ,CAACS,GAAG,CAAEC,GAAG,IAC7BA,GAAG,CAAChJ,QAAQ,KAAKyH,MAAM,IAAI1D,gBAAgB,CAAC0D,MAAM,CAAC,GAC/C;cACEzH,QAAQ,EAAEyH,MAAM;cAChBO,UAAU,EAAE1D,QAAQ,CAACC,IAAI,CAAC0D,WAAW;cACrCC,YAAY,EAAE5D,QAAQ,CAACC,IAAI,CAAC4D,cAAc;cAC1CC,YAAY,EAAE,KAAK;cACnBO,QAAQ,EAAE,KAAK;cACfN,MAAM,EAAE;YACV,CAAC,GACDW,GACN,CAAC;UACH,CAAC,MAAM;YACLJ,WAAW,GAAGN,QAAQ,CAACS,GAAG,CAAEC,GAAG,IAC7BA,GAAG,CAAChJ,QAAQ,KAAKyH,MAAM,IAAI1D,gBAAgB,CAAC0D,MAAM,CAAC,GAC/C;cACEzH,QAAQ,EAAEyH,MAAM;cAChBO,UAAU,EAAE1D,QAAQ,CAACC,IAAI,CAAC0D,WAAW;cACrCC,YAAY,EAAE5D,QAAQ,CAACC,IAAI,CAAC4D,cAAc;cAC1CC,YAAY,EAAE,KAAK;cACnBO,QAAQ,EAAE,KAAK;cACfN,MAAM,EAAE;YACV,CAAC,GACDW,GACN,CAAC;UACH;UACAhF,mBAAmB,CAAC;YAAE,GAAGD,gBAAgB;YAAE,CAAC0D,MAAM,GAAG;UAAM,CAAC,CAAC;UAC7D1H,OAAO,CAAC6I,WAAW,CAAC,CAAC,CAAC;UACtBlD,QAAQ,CAACkD,WAAW,CAAC;UACrB9H,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;QACnD;MACF;;MACAO,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOiF,KAAK,EAAE;MACd/F,YAAY,CAAC,KAAK,CAAC;MACnBc,eAAe,CAAC,KAAK,CAAC;MACtBkF,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAM4C,aAAa,GAAGA,CAACzC,CAAC,EAAE0C,EAAE,KAAK;IAC/B;IACA;;IAEA;IACA1F,WAAW,CAAC;MAAEC,CAAC,EAAEyF,EAAE,CAACzF,CAAC;MAAEC,CAAC,EAAEwF,EAAE,CAACxF;IAAE,CAAC,CAAC;EACnC,CAAC;EAED,MAAMoD,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMqC,QAAQ,GAAG,CAAClI,UAAU,GAAG,SAAS,GAAG,SAAS;;IAEpD;IACAmI,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,MAAM,GAAG,YAAY,GAAGJ,QAAQ;IACxEC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAACE,UAAU,GAAGL,QAAQ;EACtE,CAAC;EAED,MAAMM,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIlG,QAAQ,CAACE,CAAC,GAAG,EAAE,EAAE;MACnBD,WAAW,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAC;MAC3BxC,aAAa,CAAC,KAAK,CAAC;MACpB4F,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLtD,WAAW,CAAC;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAC;MAC5BxC,aAAa,CAAC,IAAI,CAAC;MACnB4F,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,SAAS4C,SAASA,CAAA,EAAG;IACnBlI,cAAc,CAAC,IAAI,CAAC;EACtB;EAEA,SAAS8F,UAAUA,CAAA,EAAG;IACpB9F,cAAc,CAAC,KAAK,CAAC;EACvB;EAEA,SAASmI,aAAaA,CAAA,EAAG;IACvBjI,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,SAASkI,cAAcA,CAAA,EAAG;IACxBlI,kBAAkB,CAAC,KAAK,CAAC;EAC3B;EAEA,oBACEjC,OAAA,CAACN,MAAM,CAAC0K,GAAG;IACTC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;IACxBC,OAAO,EAAE;MAAED,OAAO,EAAE;IAAE,CAAE;IACxBE,IAAI,EAAE;MAAEF,OAAO,EAAE;IAAE,CAAE;IAAAG,QAAA,eAErBzK,OAAA;MAAK0K,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBzK,OAAA;QAAK0K,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClBzK,OAAA;UAAK0K,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACvBzK,OAAA;YAAK0K,SAAS,EAAC,kBAAkB;YAAAD,QAAA,eAC/BzK,OAAA;cAAK0K,SAAS,EAAC,cAAc;cAAAD,QAAA,eAC3BzK,OAAA;gBAAM0K,SAAS,EAAC,UAAU;gBAAAD,QAAA,EAAElK;cAAQ;gBAAAuI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACL7G,MAAM,iBAAIpC,OAAA;YAAM0K,SAAS,EAAC,QAAQ;YAAAD,QAAA,EAAG,QAAOrI,MAAO;UAAC;YAAA0G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7DjJ,OAAA;YAAK0K,SAAS,EAAC,kBAAkB;YAAAD,QAAA,gBAC/BzK,OAAA;cACE0K,SAAS,EAAC,oBAAoB;cAC9BC,OAAO,EAAEzD,wBAAyB;cAAAuD,QAAA,gBAElCzK,OAAA;gBACE0K,SAAS,EAAG,UAAS,CAAClJ,UAAU,GAAG,SAAS,GAAG,WAAY;cAAE;gBAAAsH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD,CAAC,EACN,KAAK;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNjJ,OAAA;cACE0K,SAAS,EAAC,kBAAkB;cAC5BC,OAAO,EAAErD,uBAAwB;cAAAmD,QAAA,gBAEjCzK,OAAA;gBACE0K,SAAS,EAAG,UAASlJ,UAAU,GAAG,SAAS,GAAG,WAAY;cAAE;gBAAAsH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC,EACN,KAAK;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNjJ,OAAA;YAAK0K,SAAS,EAAC,wBAAwB;YAAAD,QAAA,gBACrCzK,OAAA;cAAQ0K,SAAS,EAAC,iBAAiB;cAACC,OAAO,EAAET,aAAc;cAAAO,QAAA,EAAC;YAE5D;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTjJ,OAAA,CAACL,KAAK;cACJiL,MAAM,EAAE5I,eAAgB;cACxB6I,cAAc,EAAEV,cAAe;cAC/BW,gBAAgB,EAAC,cAAc;cAC/BJ,SAAS,EAAC,cAAc;cACxBK,YAAY,EAAC,2BAAO;cAAAN,QAAA,gBAEpBzK,OAAA;gBACE6J,KAAK,EAAE;kBACL/F,QAAQ,EAAE,UAAU;kBACpBkH,KAAK,EAAE,KAAK;kBACZC,GAAG,EAAE,KAAK;kBACVC,OAAO,EAAE,MAAM;kBACfpB,MAAM,EAAE,KAAK;kBACbqB,eAAe,EAAE;gBACnB,CAAE;gBACFR,OAAO,EAAER,cAAe;gBAAAM,QAAA,EACzB;cAED;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTjJ,OAAA;gBACE6J,KAAK,EAAE;kBACLuB,QAAQ,EAAE,MAAM;kBAChB;kBACAC,aAAa,EAAE;gBACjB,CAAE;gBAAAZ,QAAA,EACH;cAED;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJjJ,OAAA;gBACE6J,KAAK,EAAE;kBAAEyB,SAAS,EAAE;gBAAkB,CAAE;gBACxCZ,SAAS,EAAC,uBAAuB;gBAAAD,QAAA,gBAEjCzK,OAAA;kBACE6J,KAAK,EAAE;oBACL0B,SAAS,EAAE,MAAM;oBACjBC,YAAY,EAAE,KAAK;oBACnB1B,MAAM,EAAE,mBAAmB;oBAC3BqB,eAAe,EAAE,SAAS;oBAC1BM,OAAO,EAAE;kBACX,CAAE;kBACFf,SAAS,EAAC,aAAa;kBACvBC,OAAO,EAAEA,CAAA,KAAM1H,WAAW,CAACG,IAAI,CAAE;kBAAAqH,QAAA,EAEhCzH;gBAAQ;kBAAA8F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACTjJ,OAAA;kBACE6J,KAAK,EAAE;oBACL2B,YAAY,EAAE,KAAK;oBACnB1B,MAAM,EAAE,mBAAmB;oBAC3BqB,eAAe,EAAE,SAAS;oBAC1BM,OAAO,EAAE;kBACX,CAAE;kBACFf,SAAS,EAAC,aAAa;kBACvBC,OAAO,EAAEA,CAAA,KAAMxH,YAAY,CAACG,KAAK,CAAE;kBAAAmH,QAAA,EAElCvH;gBAAS;kBAAA4F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACRjJ,OAAA;cAAQ0K,SAAS,EAAC,eAAe;cAACC,OAAO,EAAEV,SAAU;cAAAQ,QAAA,EAAC;YAEtD;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAETjJ,OAAA,CAACL,KAAK;cACJiL,MAAM,EAAE9I,WAAY;cACpB+I,cAAc,EAAEhD,UAAW;cAC3BiD,gBAAgB,EAAC,cAAc;cAC/BJ,SAAS,EAAC,cAAc;cACxBK,YAAY,EAAC,2BAAO;cAAAN,QAAA,gBAEpBzK,OAAA;gBACE6J,KAAK,EAAE;kBACLuB,QAAQ,EAAE,MAAM;kBAChBM,YAAY,EAAE,MAAM;kBACpBL,aAAa,EAAE;gBACjB,CAAE;gBAAAZ,QAAA,EACH;cAED;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACJjJ,OAAA;gBAAK0K,SAAS,EAAC,kBAAkB;gBAAAD,QAAA,gBAC/BzK,OAAA;kBACE6J,KAAK,EAAE;oBACL2B,YAAY,EAAE,KAAK;oBACnB1B,MAAM,EAAE,mBAAmB;oBAC3BqB,eAAe,EAAE,SAAS;oBAC1BQ,UAAU,EAAE,MAAM;oBAClBF,OAAO,EAAE;kBACX,CAAE;kBACFd,OAAO,EAAE9C,UAAW;kBAAA4C,QAAA,eAEpBzK,OAAA;oBACE6J,KAAK,EAAE;sBACL0B,SAAS,EAAE,KAAK;sBAChBG,YAAY,EAAE,KAAK;sBACnBC,UAAU,EAAE,MAAM;sBAClBC,WAAW,EAAE;oBACf,CAAE;oBAAAnB,QAAA,EACH;kBAED;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,eACTjJ,OAAA;kBACE6J,KAAK,EAAE;oBACL2B,YAAY,EAAE,KAAK;oBACnB1B,MAAM,EAAE,mBAAmB;oBAC3BqB,eAAe,EAAE,SAAS;oBAC1BS,WAAW,EAAE,MAAM;oBACnBH,OAAO,EAAE;kBACX,CAAE;kBACFd,OAAO,EAAE/C,iBAAkB;kBAAA6C,QAAA,eAE3BzK,OAAA;oBACE6J,KAAK,EAAE;sBACLgC,KAAK,EAAE,SAAS;sBAChBN,SAAS,EAAE,KAAK;sBAChBG,YAAY,EAAE,KAAK;sBACnBC,UAAU,EAAE,MAAM;sBAClBC,WAAW,EAAE;oBACf,CAAE;oBAAAnB,QAAA,EACH;kBAED;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNjJ,OAAA;YAAK0K,SAAS,EAAC,mBAAmB;YAAAD,QAAA,gBAChCzK,OAAA;cACE0K,SAAS,EAAG,WAAUhK,KAAK,GAAG,OAAO,GAAG,EAAG,EAAE;cAC7CuG,KAAK,EAAE9G,IAAK;cACZ2L,QAAQ,EAAEhF,YAAa;cACvBiF,SAAS,EAAEvE,cAAe;cAC1BwE,WAAW,EACT,CAACxK,UAAU,GACPkB,aAAa,GACV,GAAEgB,wBAAyB,EAAC,GAC5B,OAAMpB,cAAe,EAAC,GACxB,GAAEkB,eAAgB;YACxB;cAAAsF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,EACDzF,eAAe,KAAK,EAAE,iBACrBxD,OAAA;cAAI6J,KAAK,EAAE;gBAAE/F,QAAQ,EAAE;cAAW,CAAE;cAAA2G,QAAA,EACjC7G,iBAAiB,CAACqI,KAAK,CAAC,EAAE,CAAC,CAAC3C,GAAG,CAAC,CAAC4C,IAAI,EAAEC,CAAC,kBACvCnM,OAAA;gBACE6J,KAAK,EAAE;kBACLuC,cAAc,EAAG,GAAE,CAACD,CAAC,GAAG,CAAC,IAAI,GAAI,IAAG;kBACpCE,IAAI,EAAEF,CAAC,GAAG,CAAC,GAAI,GAAE,EAAE,GAAG,CAACA,CAAC,GAAG,CAAC,IAAI,EAAG,IAAG,GAAI,GAAEA,CAAC,GAAG,EAAG;gBACrD,CAAE;gBACFzB,SAAS,EAAC,MAAM;gBAAAD,QAAA,EAEfyB;cAAI;gBAAApD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CACL,EACA,CAACvF,wBAAwB,KAAK,EAAE,IAAIF,eAAe,KAAK,GAAG,kBAC1DxD,OAAA;cAAI0K,SAAS,EAAC,YAAY;cAAAD,QAAA,EAAC;YAAa;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAC7C,eACDjJ,OAAA;cAAK0K,SAAS,EAAG,QAAQ;cAAAD,QAAA,eACvBzK,OAAA,CAACF,SAAS;gBACRwM,IAAI,EAAC,GAAG;gBACRC,MAAM,EAAE;kBAAEF,IAAI,EAAE,CAAC;kBAAErB,KAAK,EAAE,EAAE;kBAAEC,GAAG,EAAE,CAAC;kBAAEuB,MAAM,EAAE;gBAAE,CAAE;gBAClD1I,QAAQ,EAAEA,QAAS;gBACnB2I,MAAM,EAAEjD,aAAc;gBACtBkD,MAAM,EAAE1C,OAAQ;gBAAAS,QAAA,eAEhBzK,OAAA;kBAAK0K,SAAS,EAAC,eAAe;kBAACC,OAAO,EAAEhD,eAAgB;kBAAA8C,QAAA,eACtDzK,OAAA;oBACE0K,SAAS,EAAC,YAAY;oBACtBiC,GAAG,EAAEnN,UAAW;oBAChBoN,GAAG,EAAC,YAAY;oBAChBC,KAAK,EAAC,IAAI;oBACVC,MAAM,EAAC,IAAI;oBACXjD,KAAK,EAAE;sBACLoB,GAAG,EAAE,KAAK;sBACV8B,MAAM,EAAE,MAAM;sBACdC,UAAU,EAAE;oBACd;kBAAE;oBAAAlE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEL5I,IAAI,CAACiJ,GAAG,CACP,CAACC,GAAG,EAAE0D,KAAK,KACT,CAAC1D,GAAG,CAACL,QAAQ,iBACXlJ,OAAA;YAAK0K,SAAS,EAAC,YAAY;YAAAD,QAAA,eACzBzK,OAAA,CAACZ,GAAG;cACFmB,QAAQ,EAAEgJ,GAAG,CAAChJ,QAAS;cACvBgI,UAAU,EAAEgB,GAAG,CAAChB,UAAW;cAC3BE,YAAY,EAAEc,GAAG,CAACd,YAAa;cAC/BE,YAAY,EAAEY,GAAG,CAACZ,YAAa;cAC/BsE,KAAK,EAAEA,KAAM;cACbrE,MAAM,EAAEW,GAAG,CAACX,MAAO;cACnBsE,MAAM,EAAED,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,KAAM;cACnCE,oBAAoB,EAClBF,KAAK,KAAK5M,IAAI,CAACqG,MAAM,GAAG,CAAC,GAAG,QAAQ,GAAG,KACxC;cACD0G,UAAU,EAAGC,aAAa,IAAK;gBAC7B/M,OAAO,CACLD,IAAI,CAACiJ,GAAG,CAAC,CAACC,GAAG,EAAE0D,KAAK,KAClBA,KAAK,KAAKI,aAAa,GACnB;kBAAE,GAAG9D,GAAG;kBAAEL,QAAQ,EAAE;gBAAK,CAAC,GAC1BK,GACN,CACF,CAAC;cACH;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GArB6BgE,KAAK;YAAAnE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBjC,CAEX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENjJ,OAAA;UAAK0K,SAAS,EAAC,aAAa;UAAAD,QAAA,gBAC1BzK,OAAA;YAAAyK,QAAA,eACEzK,OAAA;cAAG0K,SAAS,EAAC,UAAU;cAAAD,QAAA,GAAE7I,QAAQ,EAAC,SAAE;YAAA;cAAAkH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC,eACNjJ,OAAA;YAAAyK,QAAA,eACEzK,OAAA;cACE0K,SAAS,EAAC,eAAe;cACzBiC,GAAG,EAAEpN,OAAQ;cACbqN,GAAG,EAAC,SAAS;cACbC,KAAK,EAAC,IAAI;cACVC,MAAM,EAAC;YAAI;cAAAhE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENjJ,OAAA;UACE0K,SAAS,EAAC,MAAM;UAChBiC,GAAG,EAAEtN,QAAS;UACduN,GAAG,EAAC,UAAU;UACdjC,OAAO,EAAEpD;QAAgB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFjJ,OAAA;UAAK0K,SAAS,EAAC,SAAS;UAAAD,QAAA,gBACtBzK,OAAA;YAAM0K,SAAS,EAAC,aAAa;YAAAD,QAAA,EAAC;UAG9B;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPjJ,OAAA;YAAM0K,SAAS,EAAC,eAAe;YAAAD,QAAA,GAAC,gCACpB,EAACrG,CAAC,EAAC,oFACf;UAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNjJ,OAAA;UAAAyK,QAAA,eACEzK,OAAA,CAACH,aAAa;YAAAiJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACNjJ,OAAA;UAAAyK,QAAA,eACEzK,OAAA,CAACJ,iBAAiB;YAAC8K,SAAS,EAAC;UAAe;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB;AAAC/I,EAAA,CApxBuBD,OAAO;EAAA,QAIZX,WAAW;AAAA;AAAAgO,EAAA,GAJNrN,OAAO;AAAA,IAAAqN,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}