{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers || 0);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", {\n        state: {\n          userAnswer: text\n        }\n      });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n  };\n  const handleSendClick = async () => {\n    try {\n      if (text.startsWith(\"정답\")) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(\"http://localhost:8000/submit/\", {\n          data: text\n        });\n        console.log(anotherResponse.data.response);\n        if (anotherResponse.data.response.startsWith(\"네\")) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (lastCorrectDate !== currentDate) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers(prev => prev + 1);\n            setUpdateState(true);\n          }\n          navigate(\"/thanks\", {\n            state: {\n              userAnswer: text\n            }\n          });\n        } else {\n          setText(\"\");\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text,\n            answer: \"정답이 아닙니다.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{\n          question: text,\n          answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 53\n          }, this)\n        }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(\"http://localhost:8000/question/\", {\n          text\n        });\n        const updatedQnas = tempQnas.map(qna => qna.question === text && qna.answer.type === Loading ? {\n          question: text,\n          answer: response.data.response\n        } : qna);\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        setText(\"\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"e218_192\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question_box\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Question\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `textbox ${shake ? \"shake\" : \"\"}`,\n          value: text,\n          onChange: handleChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `send_button`,\n          onClick: handleSendClick,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"SendButton\",\n            src: SendButton,\n            alt: \"SendButton\",\n            width: \"15\",\n            height: \"18\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"QAresponse\",\n          children: /*#__PURE__*/_jsxDEV(QnA, {\n            question: qna.question,\n            answer: isLoading && qna.question === text ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading\",\n              children: \"Loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this) : qna.answer,\n            borderStrength: index === 0 ? \"2px\" : \"0px\",\n            borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"e28_163\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e111_301\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nickname\",\n            children: \"thisis2jun9 \\uB2D8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"e125_157\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"About\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"QnA\",\n          children: \"QnA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Log\",\n          children: \"Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"F22F\",\n        children: \"F22F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"e168_70\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description_2\",\n          children: \"N\\uBC88\\uC9F8 \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"e218_179\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n          className: \"scroll_to_top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"tye5VDgJGTTj2bUmtcCJa0oZzhc=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","useNavigate","Profile","SendButton","Loading","motion","ScrollToTopButton","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","now","Date","currentDate","getFullYear","getMonth","getDate","savedDate","localStorage","getItem","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","setItem","saveQnas","JSON","stringify","savedQnas","parse","console","log","removeItem","state","userAnswer","get","then","response","data","catch","error","handleChange","e","target","value","handleKeyPress","key","preventDefault","handleSendClick","startsWith","anotherResponse","post","lastCorrectDate","prev","newQnas","answer","setTimeout","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","map","qna","type","div","initial","opacity","animate","exit","children","className","onChange","onKeyPress","onClick","src","alt","width","height","index","borderStrength","borderBottomStrength","length","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers || 0);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", { state: { userAnswer: text } });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8000/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n  };\n\n  const handleSendClick = async () => {\n    try {\n      if (text.startsWith(\"정답\")) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(\n          \"http://localhost:8000/submit/\",\n          {\n            data: text,\n          }\n        );\n        console.log(anotherResponse.data.response);\n        if (anotherResponse.data.response.startsWith(\"네\")) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${\n            now.getMonth() + 1\n          }-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (lastCorrectDate !== currentDate) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers((prev) => prev + 1);\n\n            setUpdateState(true);\n          }\n          navigate(\"/thanks\", { state: { userAnswer: text } });\n        } else {\n          setText(\"\");\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text, answer: \"정답이 아닙니다.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{ question: text, answer: <Loading /> }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(\"http://localhost:8000/question/\", {\n          text,\n        });\n\n        const updatedQnas = tempQnas.map((qna) =>\n          qna.question === text && qna.answer.type === Loading\n            ? { question: text, answer: response.data.response }\n            : qna\n        );\n\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n        setText(\"\");\n      }\n    } catch (error) {\n      setIsLoading(false);\n      console.error(error);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"all\">\n        <div className=\"e218_192\">\n          <div className=\"question_box\">\n            <span className=\"Question\">{question}</span>\n          </div>\n          <input\n            className={`textbox ${shake ? \"shake\" : \"\"}`}\n            value={text}\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n          />\n\n          <button className={`send_button`} onClick={handleSendClick}>\n            <img\n              className=\"SendButton\"\n              src={SendButton}\n              alt=\"SendButton\"\n              width=\"15\"\n              height=\"18\"\n            />\n          </button>\n\n          {qnas.map((qna, index) => (\n            <div className=\"QAresponse\" key={index}>\n              <QnA\n                question={qna.question}\n                answer={\n                  isLoading && qna.question === text ? (\n                    <span className=\"loading\">Loading</span>\n                  ) : (\n                    qna.answer\n                  )\n                }\n                borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                borderBottomStrength={\n                  index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                }\n              />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"e28_163\">\n          <div className=\"e111_301\">\n            <span className=\"nickname\">thisis2jun9 님</span>\n            <div className=\"e125_157\">\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n          <p className=\"About\">About</p>\n          <p className=\"QnA\">QnA</p>\n          <p className=\"Log\">Log</p>\n        </div>\n        <span className=\"F22F\">F22F</span>\n        <div className=\"e168_70\">\n          <span className=\"description\">\n            텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의 답을\n            받을 수 있습니다.\n          </span>\n          <span className=\"description_2\">\n            N번째 바다거북수프의 정답을 맞혀보세요.\n          </span>\n        </div>\n        <div className=\"e218_179\"></div>\n        <div>\n          {/* 페이지의 다른 요소들... */}\n          <ScrollToTopButton className=\"scroll_to_top\" />\n        </div>\n      </div>\n      {/* 컴포넌트 내용 */}\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}