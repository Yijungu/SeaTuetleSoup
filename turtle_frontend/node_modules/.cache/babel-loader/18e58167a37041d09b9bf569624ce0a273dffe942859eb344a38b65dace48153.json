{"ast":null,"code":"var _jsxFileName = \"/app/src/component/qna.js\",\n  _s = $RefreshSig$();\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport AiIcon from \"../images/AiIcon.png\"; // 이미지 import\nimport UserIcon from \"../images/UserIcon.png\"; // 이미지 import\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport DetailOpenButton from \"../images/DetailOpenButton.png\"; // 이미지 import\nimport DetailCloseButton from \"../images/DetailCloseButton.png\";\nimport RerollButton from \"../images/RerollButton.png\";\nimport axios from \"axios\";\nimport Loading from \"./loading\";\nimport RecollQuestion from \"../images/RecollQuestion.png\";\nimport AiQuestionTag from \"../images/AiQuestionTag.png\";\nimport GreenGraph from \"../images/GreenGraph.png\";\nimport YellowGraph from \"../images/YellowGraph.png\";\nimport RedGraph from \"../images/RedGraph.png\";\nimport GreenMassege from \"../images/GreenMassege.png\";\nimport YellowMassege from \"../images/YellowMassege.png\";\nimport RedMassegeYou from \"../images/RedMassegeYou.png\";\nimport RedMassegeWhat from \"../images/RedMassegeWhat.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnA = _ref => {\n  _s();\n  let {\n    question,\n    answer,\n    aiQuestion,\n    aiQuestionKr,\n    opened,\n    index,\n    answerSubmit,\n    borderBottomStrength,\n    updateQnas,\n    problemCheck\n  } = _ref;\n  const navigate = useNavigate();\n  const [boxes, setBoxes] = useState(opened);\n  const [rerollQuestion, setRerollQuestion] = useState(aiQuestion);\n  const [rerollQuestionKr, setRerollQuestionKr] = useState(aiQuestionKr);\n  const [rerolledAnswer, setRerolledAnswer] = useState(answer);\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const [isAnswerLoading, setIsAnswerLoading] = useState(false);\n  const [isAnswerSubmit, setIsAnswerSubmit] = useState(answerSubmit);\n  const [isDelete, setIsDelete] = useState(false);\n  const [isDeleteVisible, setIsDeleteVisible] = useState(false);\n  const [isProblemCheck, setIsProblemCheck] = useState(problemCheck);\n  const [isHovered, setIsHovered] = useState(false);\n  useEffect(() => {\n    setIsProblemCheck(problemCheck);\n  }, [problemCheck]);\n  useEffect(() => {\n    setBoxes(opened);\n  }, [opened]);\n  useEffect(() => {\n    setRerolledAnswer(answer);\n  }, [answer]);\n  useEffect(() => {\n    setRerollQuestion(aiQuestion);\n  }, [aiQuestion]);\n  useEffect(() => {\n    setRerollQuestionKr(aiQuestionKr);\n  }, [aiQuestionKr]);\n  useEffect(() => {\n    setIsAnswerSubmit(answerSubmit);\n  }, [answerSubmit]);\n  const rerollResponse = async () => {\n    console.log(isProblemCheck);\n    setIsAiLoading(true);\n    try {\n      const response = await axios.post(process.env.REACT_APP_API_URL + \"/changeQuestion/\", {\n        data: question\n      });\n      // console.log(response.data.response_kr);\n      if (response.data) {\n        let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n        savedQnas[index].aiQuestion = response.data.response;\n        localStorage.setItem(\"qnas\", JSON.stringify(savedQnas));\n        setRerollQuestion(response.data.response);\n        setRerollQuestionKr(response.data.response_kr);\n      } else {\n        console.error(\"No data in response\");\n      }\n    } catch (error) {\n      console.error(\"Error rerolling response: \", error);\n    }\n    setIsAiLoading(false);\n  };\n  const rerollQuestionFuntion = async () => {\n    setIsAnswerLoading(true);\n    if (!isAnswerSubmit) {\n      try {\n        const response = await axios.post(process.env.REACT_APP_API_URL + \"/questionEn/\", {\n          data: rerollQuestion\n        });\n        console.log(response.data.response);\n        let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n        let responseString = JSON.stringify(response.data.response);\n        if (responseString.includes(\"Yes\") || responseString.includes(\"yes\")) {\n          savedQnas[index].answer = \"네.\";\n          setRerolledAnswer(\"네.\");\n        } else if (responseString.includes(\"No\")) {\n          savedQnas[index].answer = \"아니오.\";\n          setRerolledAnswer(\"아니오.\");\n        } else if (responseString.includes(\"Probably not\") || responseString.includes(\"probably not\")) {\n          savedQnas[index].answer = \"아마 아닐 겁니다.\";\n          setRerolledAnswer(\"아마 아닐 겁니다.\");\n        } else if (responseString.includes(\"Probably\") || responseString.includes(\"probably\")) {\n          savedQnas[index].answer = \"아마 맞을 겁니다.\";\n          setRerolledAnswer(\"아마 맞을 겁니다.\");\n        } else {\n          savedQnas[index].answer = \"필요없는 정보입니다.\";\n          setRerolledAnswer(\"중요하지 않은 정보입니다.\");\n        }\n        localStorage.setItem(\"qnas\", JSON.stringify(savedQnas));\n      } catch (error) {\n        console.error(\"Error rerolling response: \", error);\n      }\n    } else {\n      let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n      const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n        data: rerollQuestion\n      });\n      console.log(anotherResponse.data.response);\n      if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\") || anotherResponse.data.response.startsWith(\"Yes\")) {\n        const now = new Date();\n        const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n        localStorage.setItem(\"endTime\", now);\n        // 마지막으로 정답을 맞춘 날짜를 불러오기\n        const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n        const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n        // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n        if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n          // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n          localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n          // 정답 횟수를 증가\n          const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n          localStorage.setItem(\"correctAnswers\", savedCorrectAnswers + 1);\n\n          // setUpdateState(true);\n        }\n\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: \"\"\n          }\n        });\n      } else {\n        savedQnas[index].answer = \"정답이 아닙니다.\";\n        localStorage.setItem(\"qnas\", JSON.stringify(savedQnas));\n      }\n    }\n    setIsAnswerLoading(false);\n  };\n  const handleDeleteClick = () => {\n    setIsDelete(true); // 이 컴포넌트의 삭제 상태를 업데이트\n    updateQnas(index); // 상위 컴포넌트의 qnas 상태를 업데이트\n  };\n\n  const handleMouseOver = () => {\n    setIsDeleteVisible(true);\n  };\n  const handleMouseOut = () => {\n    setIsDeleteVisible(false);\n  };\n\n  // if (isDelete) {\n  //   return;\n  // } else {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      position: \"relative\",\n      left: \"2px\",\n      flexDirection: \"column\",\n      width: \"813px\",\n      overflow: \"visible\"\n    },\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: \"0px\",\n        alignItems: \"center\",\n        backgroundColor: \"#F3F3F3\",\n        width: \"815px\",\n        minheight: \"100px\",\n        overflowWrap: \"break-word\",\n        wordBreak: \"keep-all\",\n        borderTop: \"0.01px solid black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: UserIcon,\n        alt: \"SeaTurtle\",\n        width: \"26\",\n        height: \"27\",\n        style: {\n          padding: \"12.5px\",\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n          transform: \"rotate(11deg)\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: boxes ? DetailCloseButton : DetailOpenButton,\n        width: \"20\",\n        height: \"20\",\n        style: {\n          display: \"flex\",\n          position: \"absolute\",\n          left: \"770px\"\n        },\n        onClick: () => setBoxes(!boxes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), boxes && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          gap: \"0px\",\n          alignItems: \"center\",\n          backgroundColor: \"#FAFAFA\",\n          width: \"815px\",\n          minheight: \"100px\",\n          overflowWrap: \"break-word\",\n          wordBreak: \"keep-all\",\n          borderTop: \"0.01px solid black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: AiQuestionTag,\n          alt: \"SeaTurtle\",\n          width: \"17\",\n          height: \"17\",\n          style: {\n            position: \"relative\",\n            top: \"-3px\",\n            left: \"40px\",\n            padding: \"12.5px\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), isAiLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingLeft: \"70px\",\n            paddingright: \"300px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            position: \"relative\",\n            left: \"25px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingLeft: \"0px\",\n            fontSize: \"14px\",\n            color: \"#454545\",\n            width: \"620px\"\n          },\n          children: rerollQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: RerollButton,\n          width: \"15w\",\n          height: \"15\",\n          style: {\n            display: \"flex\",\n            position: \"absolute\",\n            top: \"65px\",\n            left: \"730px\"\n          },\n          onClick: rerollResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: RecollQuestion,\n          width: \"20w\",\n          height: \"20\",\n          style: {\n            display: \"flex\",\n            position: \"absolute\",\n            top: \"63px\",\n            left: \"768px\"\n          },\n          onClick: rerollQuestionFuntion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          gap: \"0px\",\n          alignItems: \"center\",\n          backgroundColor: \"#FAFAFA\",\n          width: \"815px\",\n          minheight: \"100px\",\n          overflowWrap: \"break-word\",\n          wordBreak: \"keep-all\"\n          // borderTop: \"0.01px solid black\",\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: AiQuestionTag,\n          alt: \"SeaTurtle\",\n          width: \"17\",\n          height: \"17\",\n          style: {\n            position: \"relative\",\n            top: \"-3px\",\n            left: \"40px\",\n            padding: \"12.5px\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), isAiLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingLeft: \"70px\",\n            paddingright: \"300px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            position: \"relative\",\n            left: \"25px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            paddingLeft: \"0px\",\n            fontSize: \"14px\",\n            color: \"#454545\",\n            width: \"620px\"\n          },\n          children: rerollQuestionKr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isProblemCheck == \"noproblem\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: GreenGraph,\n            alt: \"GreenGraph\",\n            width: \"20\",\n            height: \"20\",\n            onMouseEnter: () => setIsHovered(true) // 마우스가 올라가면 isHovered를 true로 설정\n            ,\n            onMouseLeave: () => setIsHovered(false) // 마우스가 내려가면 isHovered를 false로 설정\n            ,\n            style: {\n              position: \"relative\",\n              top: \"-3px\",\n              left: \"65px\",\n              padding: \"12.5px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this), isProblemCheck == \"not\" && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: YellowGraph,\n            alt: \"YellowGraph\",\n            width: \"20\",\n            height: \"20\",\n            onMouseEnter: () => setIsHovered(true) // 마우스가 올라가면 isHovered를 true로 설정\n            ,\n            onMouseLeave: () => setIsHovered(false) // 마우스가 내려가면 isHovered를 false로 설정\n            ,\n            style: {\n              position: \"relative\",\n              top: \"-3px\",\n              left: \"65px\",\n              padding: \"12.5px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this), (isProblemCheck == \"you\" || isProblemCheck == \"what\") && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: RedGraph,\n            alt: \"RedGraph\",\n            width: \"20\",\n            height: \"20\",\n            onMouseEnter: () => setIsHovered(true) // 마우스가 올라가면 isHovered를 true로 설정\n            ,\n            onMouseLeave: () => setIsHovered(false) // 마우스가 내려가면 isHovered를 false로 설정\n            ,\n            style: {\n              position: \"relative\",\n              top: \"-3px\",\n              left: \"65px\",\n              padding: \"12.5px\",\n              marginLeft: \"10px\",\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              right: \"13px\"\n            },\n            children: [isHovered == true && isProblemCheck == \"noproblem\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: GreenMassege,\n              alt: \"GreenMassege\",\n              width: \"400\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this), isHovered == true && isProblemCheck == \"not\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: YellowMassege,\n              alt: \"YellowMassege\",\n              width: \"400\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this), isHovered == true && isProblemCheck == \"you\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: RedMassegeYou,\n              alt: \"RedGraph\",\n              width: \"400\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this), isHovered == true && isProblemCheck == \"what\" && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: RedMassegeWhat,\n              alt: \"RedGraph\",\n              width: \"400\",\n              height: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: \"0px\",\n        alignItems: \"center\",\n        backgroundColor: \"white\",\n        width: \"815px\",\n        minheight: \"100px\",\n        borderTop: \"0.01px solid black\",\n        overflowWrap: \"break-word\",\n        wordBreak: \"keep-all\",\n        borderBottom: `${borderBottomStrength} solid black`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: AiIcon,\n        alt: \"AI\",\n        width: \"25\",\n        height: \"25\",\n        style: {\n          padding: \"12.5px\",\n          marginLeft: \"10px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: isAnswerLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: rerolledAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"30px\",\n        height: \"30px\",\n        left: \"830px\"\n      },\n      onMouseOver: handleMouseOver,\n      onMouseOut: handleMouseOut,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          border: \"0.1px solid #121212\",\n          borderRadius: \"5px\",\n          backgroundColor: \"#ffffff\",\n          opacity: isDeleteVisible ? 1 : 0,\n          transition: \"opacity 0.3s\",\n          pointerEvents: isDeleteVisible ? \"auto\" : \"none\"\n        },\n        onClick: handleDeleteClick,\n        children: [\" \", \"\\u3161\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n  // }\n};\n_s(QnA, \"rARn5jQQu2wr1dBVW+Te4gzNRHk=\", false, function () {\n  return [useNavigate];\n});\n_c = QnA;\nexport default QnA;\nvar _c;\n$RefreshReg$(_c, \"QnA\");","map":{"version":3,"names":["Box","Typography","AiIcon","UserIcon","useNavigate","React","useState","useEffect","DetailOpenButton","DetailCloseButton","RerollButton","axios","Loading","RecollQuestion","AiQuestionTag","GreenGraph","YellowGraph","RedGraph","GreenMassege","YellowMassege","RedMassegeYou","RedMassegeWhat","jsxDEV","_jsxDEV","QnA","_ref","_s","question","answer","aiQuestion","aiQuestionKr","opened","index","answerSubmit","borderBottomStrength","updateQnas","problemCheck","navigate","boxes","setBoxes","rerollQuestion","setRerollQuestion","rerollQuestionKr","setRerollQuestionKr","rerolledAnswer","setRerolledAnswer","isAiLoading","setIsAiLoading","isAnswerLoading","setIsAnswerLoading","isAnswerSubmit","setIsAnswerSubmit","isDelete","setIsDelete","isDeleteVisible","setIsDeleteVisible","isProblemCheck","setIsProblemCheck","isHovered","setIsHovered","rerollResponse","console","log","response","post","process","env","REACT_APP_API_URL","data","savedQnas","JSON","parse","localStorage","getItem","setItem","stringify","response_kr","error","rerollQuestionFuntion","responseString","includes","anotherResponse","startsWith","now","Date","currentDate","getFullYear","getMonth","getDate","lastCorrectDate","lastGiveUpDate","savedCorrectAnswers","Number","state","userAnswer","handleDeleteClick","handleMouseOver","handleMouseOut","sx","display","position","left","flexDirection","width","overflow","onMouseOver","onMouseOut","children","gap","alignItems","backgroundColor","minheight","overflowWrap","wordBreak","borderTop","src","alt","height","style","padding","marginLeft","marginRight","transform","fileName","_jsxFileName","lineNumber","columnNumber","onClick","top","paddingTop","paddingBottom","paddingLeft","paddingright","fontSize","color","onMouseEnter","onMouseLeave","right","borderBottom","border","borderRadius","opacity","transition","pointerEvents","_c","$RefreshReg$"],"sources":["/app/src/component/qna.js"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport AiIcon from \"../images/AiIcon.png\"; // 이미지 import\nimport UserIcon from \"../images/UserIcon.png\"; // 이미지 import\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport DetailOpenButton from \"../images/DetailOpenButton.png\"; // 이미지 import\nimport DetailCloseButton from \"../images/DetailCloseButton.png\";\nimport RerollButton from \"../images/RerollButton.png\";\nimport axios from \"axios\";\nimport Loading from \"./loading\";\nimport RecollQuestion from \"../images/RecollQuestion.png\";\nimport AiQuestionTag from \"../images/AiQuestionTag.png\";\nimport GreenGraph from \"../images/GreenGraph.png\";\nimport YellowGraph from \"../images/YellowGraph.png\";\nimport RedGraph from \"../images/RedGraph.png\";\nimport GreenMassege from \"../images/GreenMassege.png\";\nimport YellowMassege from \"../images/YellowMassege.png\";\nimport RedMassegeYou from \"../images/RedMassegeYou.png\";\nimport RedMassegeWhat from \"../images/RedMassegeWhat.png\";\n\nconst QnA = ({\n  question,\n  answer,\n  aiQuestion,\n  aiQuestionKr,\n  opened,\n  index,\n  answerSubmit,\n  borderBottomStrength,\n  updateQnas,\n  problemCheck,\n}) => {\n  const navigate = useNavigate();\n  const [boxes, setBoxes] = useState(opened);\n  const [rerollQuestion, setRerollQuestion] = useState(aiQuestion);\n  const [rerollQuestionKr, setRerollQuestionKr] = useState(aiQuestionKr);\n  const [rerolledAnswer, setRerolledAnswer] = useState(answer);\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const [isAnswerLoading, setIsAnswerLoading] = useState(false);\n  const [isAnswerSubmit, setIsAnswerSubmit] = useState(answerSubmit);\n  const [isDelete, setIsDelete] = useState(false);\n  const [isDeleteVisible, setIsDeleteVisible] = useState(false);\n  const [isProblemCheck, setIsProblemCheck] = useState(problemCheck);\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    setIsProblemCheck(problemCheck);\n  }, [problemCheck]);\n\n  useEffect(() => {\n    setBoxes(opened);\n  }, [opened]);\n\n  useEffect(() => {\n    setRerolledAnswer(answer);\n  }, [answer]);\n\n  useEffect(() => {\n    setRerollQuestion(aiQuestion);\n  }, [aiQuestion]);\n\n  useEffect(() => {\n    setRerollQuestionKr(aiQuestionKr);\n  }, [aiQuestionKr]);\n\n  useEffect(() => {\n    setIsAnswerSubmit(answerSubmit);\n  }, [answerSubmit]);\n\n  const rerollResponse = async () => {\n    console.log(isProblemCheck);\n    setIsAiLoading(true);\n    try {\n      const response = await axios.post(\n        process.env.REACT_APP_API_URL + \"/changeQuestion/\",\n        {\n          data: question,\n        }\n      );\n      // console.log(response.data.response_kr);\n      if (response.data) {\n        let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n        savedQnas[index].aiQuestion = response.data.response;\n        localStorage.setItem(\"qnas\", JSON.stringify(savedQnas));\n        setRerollQuestion(response.data.response);\n        setRerollQuestionKr(response.data.response_kr);\n      } else {\n        console.error(\"No data in response\");\n      }\n    } catch (error) {\n      console.error(\"Error rerolling response: \", error);\n    }\n    setIsAiLoading(false);\n  };\n\n  const rerollQuestionFuntion = async () => {\n    setIsAnswerLoading(true);\n    if (!isAnswerSubmit) {\n      try {\n        const response = await axios.post(\n          process.env.REACT_APP_API_URL + \"/questionEn/\",\n          {\n            data: rerollQuestion,\n          }\n        );\n        console.log(response.data.response);\n        let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n        let responseString = JSON.stringify(response.data.response);\n        if (responseString.includes(\"Yes\") || responseString.includes(\"yes\")) {\n          savedQnas[index].answer = \"네.\";\n          setRerolledAnswer(\"네.\");\n        } else if (responseString.includes(\"No\")) {\n          savedQnas[index].answer = \"아니오.\";\n          setRerolledAnswer(\"아니오.\");\n        } else if (\n          responseString.includes(\"Probably not\") ||\n          responseString.includes(\"probably not\")\n        ) {\n          savedQnas[index].answer = \"아마 아닐 겁니다.\";\n          setRerolledAnswer(\"아마 아닐 겁니다.\");\n        } else if (\n          responseString.includes(\"Probably\") ||\n          responseString.includes(\"probably\")\n        ) {\n          savedQnas[index].answer = \"아마 맞을 겁니다.\";\n          setRerolledAnswer(\"아마 맞을 겁니다.\");\n        } else {\n          savedQnas[index].answer = \"필요없는 정보입니다.\";\n          setRerolledAnswer(\"중요하지 않은 정보입니다.\");\n        }\n        localStorage.setItem(\"qnas\", JSON.stringify(savedQnas));\n      } catch (error) {\n        console.error(\"Error rerolling response: \", error);\n      }\n    } else {\n      let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n      const anotherResponse = await axios.post(\n        process.env.REACT_APP_API_URL + \"/submit/\",\n        {\n          data: rerollQuestion,\n        }\n      );\n      console.log(anotherResponse.data.response);\n      if (\n        anotherResponse.data.response.startsWith(\"네\") ||\n        anotherResponse.data.response.startsWith(\"예\") ||\n        anotherResponse.data.response.startsWith(\"맞습니다\") ||\n        anotherResponse.data.response.startsWith(\"Yes\")\n      ) {\n        const now = new Date();\n        const currentDate = `${now.getFullYear()}-${\n          now.getMonth() + 1\n        }-${now.getDate()}`;\n\n        localStorage.setItem(\"endTime\", now);\n        // 마지막으로 정답을 맞춘 날짜를 불러오기\n        const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n        const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n        // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n        if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n          // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n          localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n          // 정답 횟수를 증가\n          const savedCorrectAnswers = Number(\n            localStorage.getItem(\"correctAnswers\")\n          );\n          localStorage.setItem(\"correctAnswers\", savedCorrectAnswers + 1);\n\n          // setUpdateState(true);\n        }\n        navigate(\"/explanation\", { state: { userAnswer: \"\" } });\n      } else {\n        savedQnas[index].answer = \"정답이 아닙니다.\";\n        localStorage.setItem(\"qnas\", JSON.stringify(savedQnas));\n      }\n    }\n    setIsAnswerLoading(false);\n  };\n\n  const handleDeleteClick = () => {\n    setIsDelete(true); // 이 컴포넌트의 삭제 상태를 업데이트\n    updateQnas(index); // 상위 컴포넌트의 qnas 상태를 업데이트\n  };\n\n  const handleMouseOver = () => {\n    setIsDeleteVisible(true);\n  };\n\n  const handleMouseOut = () => {\n    setIsDeleteVisible(false);\n  };\n\n  // if (isDelete) {\n  //   return;\n  // } else {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        position: \"relative\",\n        left: \"2px\",\n        flexDirection: \"column\",\n        width: \"813px\",\n        overflow: \"visible\",\n      }}\n      onMouseOver={handleMouseOver}\n      onMouseOut={handleMouseOut}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: \"0px\",\n          alignItems: \"center\",\n          backgroundColor: \"#F3F3F3\",\n          width: \"815px\",\n          minheight: \"100px\",\n          overflowWrap: \"break-word\",\n          wordBreak: \"keep-all\",\n          borderTop: \"0.01px solid black\",\n        }}\n      >\n        <img\n          src={UserIcon}\n          alt=\"SeaTurtle\"\n          width=\"26\"\n          height=\"27\"\n          style={{\n            padding: \"12.5px\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\",\n            transform: \"rotate(11deg)\",\n          }}\n        />\n\n        <Typography>{question}</Typography>\n\n        <img\n          src={boxes ? DetailCloseButton : DetailOpenButton}\n          width=\"20\"\n          height=\"20\"\n          style={{\n            display: \"flex\",\n            position: \"absolute\",\n            left: \"770px\",\n          }}\n          onClick={() => setBoxes(!boxes)}\n        ></img>\n      </Box>\n      {boxes && (\n        <div>\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: \"0px\",\n              alignItems: \"center\",\n              backgroundColor: \"#FAFAFA\",\n              width: \"815px\",\n              minheight: \"100px\",\n              overflowWrap: \"break-word\",\n              wordBreak: \"keep-all\",\n              borderTop: \"0.01px solid black\",\n            }}\n          >\n            <img\n              src={AiQuestionTag}\n              alt=\"SeaTurtle\"\n              width=\"17\"\n              height=\"17\"\n              style={{\n                position: \"relative\",\n                top: \"-3px\",\n                left: \"40px\",\n                padding: \"12.5px\",\n                marginLeft: \"10px\",\n                marginRight: \"10px\",\n              }}\n            />\n            {isAiLoading ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  paddingTop: \"10px\",\n                  paddingBottom: \"10px\",\n                  paddingLeft: \"70px\",\n                  paddingright: \"300px\",\n                }}\n              >\n                <div>\n                  <Loading />\n                </div>\n              </div>\n            ) : (\n              <Typography\n                style={{\n                  position: \"relative\",\n                  left: \"25px\",\n                  paddingTop: \"10px\",\n                  paddingBottom: \"10px\",\n                  paddingLeft: \"0px\",\n                  fontSize: \"14px\",\n                  color: \"#454545\",\n                  width: \"620px\",\n                }}\n              >\n                {rerollQuestion}\n              </Typography>\n            )}\n            <img\n              src={RerollButton}\n              width=\"15w\"\n              height=\"15\"\n              style={{\n                display: \"flex\",\n                position: \"absolute\",\n                top: \"65px\",\n                left: \"730px\",\n              }}\n              onClick={rerollResponse}\n            ></img>\n            <img\n              src={RecollQuestion}\n              width=\"20w\"\n              height=\"20\"\n              style={{\n                display: \"flex\",\n                position: \"absolute\",\n                top: \"63px\",\n                left: \"768px\",\n              }}\n              onClick={rerollQuestionFuntion}\n            ></img>\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: \"0px\",\n              alignItems: \"center\",\n              backgroundColor: \"#FAFAFA\",\n              width: \"815px\",\n              minheight: \"100px\",\n              overflowWrap: \"break-word\",\n              wordBreak: \"keep-all\",\n              // borderTop: \"0.01px solid black\",\n            }}\n          >\n            <img\n              src={AiQuestionTag}\n              alt=\"SeaTurtle\"\n              width=\"17\"\n              height=\"17\"\n              style={{\n                position: \"relative\",\n                top: \"-3px\",\n                left: \"40px\",\n                padding: \"12.5px\",\n                marginLeft: \"10px\",\n                marginRight: \"10px\",\n              }}\n            />\n            {isAiLoading ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  paddingTop: \"10px\",\n                  paddingBottom: \"10px\",\n                  paddingLeft: \"70px\",\n                  paddingright: \"300px\",\n                }}\n              >\n                <div>\n                  <Loading />\n                </div>\n              </div>\n            ) : (\n              <Typography\n                style={{\n                  position: \"relative\",\n                  left: \"25px\",\n                  paddingTop: \"10px\",\n                  paddingBottom: \"10px\",\n                  paddingLeft: \"0px\",\n                  fontSize: \"14px\",\n                  color: \"#454545\",\n                  width: \"620px\",\n                }}\n              >\n                {rerollQuestionKr}\n              </Typography>\n            )}\n            <div>\n              {isProblemCheck == \"noproblem\" && (\n                <img\n                  src={GreenGraph}\n                  alt=\"GreenGraph\"\n                  width=\"20\"\n                  height=\"20\"\n                  onMouseEnter={() => setIsHovered(true)} // 마우스가 올라가면 isHovered를 true로 설정\n                  onMouseLeave={() => setIsHovered(false)} // 마우스가 내려가면 isHovered를 false로 설정\n                  style={{\n                    position: \"relative\",\n                    top: \"-3px\",\n                    left: \"65px\",\n                    padding: \"12.5px\",\n                    marginLeft: \"10px\",\n                    marginRight: \"10px\",\n                  }}\n                />\n              )}\n              {isProblemCheck == \"not\" && (\n                <img\n                  src={YellowGraph}\n                  alt=\"YellowGraph\"\n                  width=\"20\"\n                  height=\"20\"\n                  onMouseEnter={() => setIsHovered(true)} // 마우스가 올라가면 isHovered를 true로 설정\n                  onMouseLeave={() => setIsHovered(false)} // 마우스가 내려가면 isHovered를 false로 설정\n                  style={{\n                    position: \"relative\",\n                    top: \"-3px\",\n                    left: \"65px\",\n                    padding: \"12.5px\",\n                    marginLeft: \"10px\",\n                    marginRight: \"10px\",\n                  }}\n                />\n              )}\n              {(isProblemCheck == \"you\" || isProblemCheck == \"what\") && (\n                <img\n                  src={RedGraph}\n                  alt=\"RedGraph\"\n                  width=\"20\"\n                  height=\"20\"\n                  onMouseEnter={() => setIsHovered(true)} // 마우스가 올라가면 isHovered를 true로 설정\n                  onMouseLeave={() => setIsHovered(false)} // 마우스가 내려가면 isHovered를 false로 설정\n                  style={{\n                    position: \"relative\",\n                    top: \"-3px\",\n                    left: \"65px\",\n                    padding: \"12.5px\",\n                    marginLeft: \"10px\",\n                    marginRight: \"10px\",\n                  }}\n                />\n              )}\n\n              <div\n                style={{\n                  position: \"absolute\",\n                  right: \"13px\",\n                }}\n              >\n                {isHovered == true && isProblemCheck == \"noproblem\" && (\n                  <img\n                    src={GreenMassege}\n                    alt=\"GreenMassege\"\n                    width=\"400\"\n                    height=\"200\"\n                  />\n                )}\n                {isHovered == true && isProblemCheck == \"not\" && (\n                  <img\n                    src={YellowMassege}\n                    alt=\"YellowMassege\"\n                    width=\"400\"\n                    height=\"200\"\n                  />\n                )}\n                {isHovered == true && isProblemCheck == \"you\" && (\n                  <img\n                    src={RedMassegeYou}\n                    alt=\"RedGraph\"\n                    width=\"400\"\n                    height=\"200\"\n                  />\n                )}\n                {isHovered == true && isProblemCheck == \"what\" && (\n                  <img\n                    src={RedMassegeWhat}\n                    alt=\"RedGraph\"\n                    width=\"400\"\n                    height=\"200\"\n                  />\n                )}\n              </div>\n            </div>\n          </Box>\n        </div>\n      )}\n\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: \"0px\",\n          alignItems: \"center\",\n          backgroundColor: \"white\",\n          width: \"815px\",\n          minheight: \"100px\",\n\n          borderTop: \"0.01px solid black\",\n          overflowWrap: \"break-word\",\n          wordBreak: \"keep-all\",\n          borderBottom: `${borderBottomStrength} solid black`,\n        }}\n      >\n        <img\n          src={AiIcon}\n          alt=\"AI\"\n          width=\"25\"\n          height=\"25\"\n          style={{\n            padding: \"12.5px\",\n            marginLeft: \"10px\",\n            marginRight: \"10px\",\n          }}\n        />\n        <Typography>\n          {isAnswerLoading ? (\n            <Loading />\n          ) : (\n            <Typography>{rerolledAnswer}</Typography>\n          )}\n        </Typography>\n      </Box>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"30px\",\n          height: \"30px\",\n          left: \"830px\",\n        }}\n        onMouseOver={handleMouseOver}\n        onMouseOut={handleMouseOut}\n      >\n        <button\n          style={{\n            position: \"absolute\",\n            border: \"0.1px solid #121212\",\n            borderRadius: \"5px\",\n            backgroundColor: \"#ffffff\",\n            opacity: isDeleteVisible ? 1 : 0,\n            transition: \"opacity 0.3s\",\n            pointerEvents: isDeleteVisible ? \"auto\" : \"none\",\n          }}\n          onClick={handleDeleteClick}\n        >\n          {\" \"}\n          ㅡ{\" \"}\n        </button>\n      </div>\n    </Box>\n  );\n  // }\n};\n\nexport default QnA;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}