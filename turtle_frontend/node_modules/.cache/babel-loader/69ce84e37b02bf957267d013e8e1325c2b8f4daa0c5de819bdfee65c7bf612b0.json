{"ast":null,"code":"var _jsxFileName = \"/app/src/page/mobileProblem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna_m\";\nimport \"./mb_page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport ButtonWithTip from \"../../component/tiptoolbutton\";\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\"어떤 대상에 대해 알고 싶으신가요?\");\n  const [question_step, setQuestion_Step] = useState(true);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"힌트 A: 기본적인 힌트\");\n  const [hintText2, setHintText2] = useState(\"힌트 B: 결정적인 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  const [background_text, setBackGroudText] = useState(\"정답을 입력하세요.\");\n  const [background_question_text, setBackgroundQuestionText] = useState(\"주어를 넣어 질문을 입력하세요.\");\n  const [answerloding_text, setAnswerLodingText] = useState(\"정답을 확인중입니다.\");\n  const [position, setPosition] = useState({\n    x: 5,\n    y: 0\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [n, setN] = useState(0);\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getNnumber/\").then(response => {\n      const data = response.data;\n      setN(data.n);\n    });\n  }, []);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${lastTime.getMonth() + 1}-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    setCorrectAnswers(savedCorrectAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(qnas);\n  // }, [qnas]);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: \"\"\n          }\n        });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", {\n          state: {\n            userAnswer: text_t\n          }\n        });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n      setAuthor(data.author);\n      setMainCharacter(data.main_character);\n      setHint(data.hints && data.hints.length > 0 ? data.hints[0].hint : null);\n      setHint2(data.hints && data.hints.length > 1 ? data.hints[1].hint : null);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = asnync => {\n    setTabPressed(false);\n    setTimeout(() => setPosition({\n      x: 8,\n      y: 0\n    }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n\n  const handleAnswerCheckcclick = asnync => {\n    setTabPressed(true);\n    setTimeout(() => setPosition({\n      x: 35,\n      y: 0\n    }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      if (position.x == 35) {\n        setTimeout(() => setPosition({\n          x: 8,\n          y: 0\n        }));\n        updateColor();\n      } else {\n        setTimeout(() => setPosition({\n          x: 35,\n          y: 0\n        }));\n        updateColor();\n      }\n      // setQuestion_Step(false);\n    }\n\n    if (e.key === \"Escape\") {\n      // setQuestion_Step(false);\n    }\n  };\n  const handleCheck = () => {\n    setTabPressed(!tabPressed);\n    if (position.x == 35) {\n      setTimeout(() => setPosition({\n        x: 8,\n        y: 0\n      }));\n      updateColor();\n    } else {\n      setTimeout(() => setPosition({\n        x: 35,\n        y: 0\n      }));\n      updateColor();\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setBackGroudText(\" \");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setBackGroudText(\"정답을 입력하세요.\"), 600);\n        } else {\n          setBackGroudText(\"\");\n          const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n            data: text_x\n          });\n          // console.log(anotherResponse.data.response);\n          if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\") || anotherResponse.data.response.startsWith(\"Yes\")) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers(prev => prev + 1);\n\n              // setUpdateState(true);\n            }\n\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n            const newQnas = [{\n              question: text_x,\n              aiQuestion: anotherResponse.data.ai_question,\n              aiQuestionKr: anotherResponse.data.ai_question_kr,\n              answerSubmit: true,\n              answer: \"정답이 아닙니다.\"\n            }, ...savedQnas];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n          setBackGroudText(\"정답을 입력하세요.\");\n        }\n      } else {\n        if (text_x.length <= 5) {\n          setBackgroundQuestionText(\"\");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setBackgroundQuestionText(\"주어를 넣어 질문을 입력하세요\"), 600);\n        } else {\n          // let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n          const tempQnas = [{\n            question: text_x,\n            aiQuestion: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 27\n            }, this),\n            answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 23\n            }, this),\n            aiQuestionKr: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this),\n            answerSubmit: false,\n            isDelete: false,\n            index: totalQuestionsAsked\n          }, ...qnas];\n          let total = totalQuestionsAsked;\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n          const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n            data: text_x\n          });\n          let updatedQnas;\n          // console.log(response.data.ai_question);\n\n          let responseString = JSON.stringify(response.data.response);\n          console.log(responseString);\n          if (responseString.includes(\"Yes\") || responseString.includes(\"네\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.index === total ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"네.\"\n            } : qna);\n          } else if (responseString.includes(\"아니오\") || responseString.includes(\"No\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.index === total ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"아니오.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably no\") || responseString.includes(\"아마도 아닐 겁니다.\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.index === total ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"아마도 아닐 겁니다.\"\n            } : qna);\n          } else if (responseString.includes(\"Probably\") || responseString.includes(\"아마도 그럴겁니다\")) {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.index === total ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"아마도 맞을 겁니다.\"\n            } : qna);\n          } else {\n            updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.index === total ? {\n              question: text_x,\n              aiQuestion: response.data.ai_question,\n              aiQuestionKr: response.data.ai_question_kr,\n              answerSubmit: false,\n              isDelete: false,\n              answer: \"중요하지 않은 정보입니다.\"\n            } : qna);\n          }\n          // 모든 질문이 로딩이 완료되었는지 확인\n          const allLoaded = updatedQnas.every(qna => qna.aiQuestion !== Loading && qna.answer !== Loading);\n\n          // 로딩 중인 항목이 없을 경우에만 저장\n          if (allLoaded) {\n            setQnas(updatedQnas); // 응답으로 교체\n            saveQnas(updatedQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          } // localStorage에 저장\n        }\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  const trackPosition = (e, ui) => {\n    // Calculate the new color based on newX\n    // Here you may need to adapt the calculation based on your actual min and max x values\n\n    // Update position\n    setPosition({\n      x: ui.x,\n      y: ui.y\n    });\n  };\n  const updateColor = () => {\n    const newColor = !tabPressed ? \"#5374e8\" : \"#5DB075\";\n\n    // Set the new background color to the button\n    document.querySelector(\".slider_m\").style.border = \"1px solid \" + newColor;\n    document.querySelector(\".slider-button_m\").style.background = newColor;\n  };\n  const endDrag = () => {\n    if (position.x < 21) {\n      setPosition({\n        x: 4,\n        y: 0\n      });\n      setTabPressed(false);\n      updateColor();\n    } else {\n      setPosition({\n        x: 35,\n        y: 0\n      });\n      setTabPressed(true);\n      updateColor();\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n  function nl2br(str) {\n    return str.split(\"\\n\").map((line, index, array) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [line, index === array.length - 1 ? null : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true));\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_problem_m\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all_m\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"up_bar_m\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"F22F_main_m\",\n            src: F22FBeta,\n            alt: \"F22FBeta\",\n            onClick: handleLogoClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nickname_profile_main_m\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo_main_m\",\n              src: Profile,\n              alt: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname_m\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem_box_m\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_m\",\n            children: [\"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), \"Tab \\uD0A4\\uB97C \\uB20C\\uB7EC \", n, \"\\uBC88\\uC9F8 \\uBB38\\uC81C\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem_main_box_m\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question_box_m\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"Question_m\",\n                children: nl2br(question)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this), author && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"source_m\",\n            children: `출처 : ${author}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"check_click_box_m\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"circle_check_box_m\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `slider_m`,\n                onClick: handleCheck,\n                children: /*#__PURE__*/_jsxDEV(Draggable, {\n                  axis: \"x\",\n                  bounds: {\n                    left: 8,\n                    right: 35,\n                    top: 0,\n                    bottom: 0\n                  },\n                  position: position,\n                  로ㅑㅜㅅ: true,\n                  onDrag: trackPosition,\n                  onStop: endDrag,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"slider-button_m\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hint_giveup_button_box_m\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hint_button_box_m\",\n                onClick: openHintModal,\n                children: \"Hint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                isOpen: hintmodalIsOpen,\n                onRequestClose: closeHintModal,\n                overlayClassName: \"ModalOverlay_m\",\n                className: \"ModalContent_m\",\n                contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    position: \"absolute\",\n                    right: \"3px\",\n                    top: \"3px\",\n                    outline: \"none\",\n                    border: \"0px\",\n                    backgroundColor: \"#ffffff\"\n                  },\n                  onClick: closeHintModal,\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"15px\",\n                    // marginBottom: \"30px\",\n                    letterSpacing: \"-0.1px\"\n                  },\n                  children: \"\\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC \\uD78C\\uD2B8\\uB97C \\uD655\\uC778\\uD574\\uBCF4\\uC138\\uC694.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    borderTop: \"1px solid black\"\n                  },\n                  className: \"hint-button-container_m\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      marginTop: \"20px\",\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      padding: \"7px\"\n                    },\n                    className: \"hint_button_m\",\n                    onClick: () => setHintText(hint),\n                    children: hintText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 630,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      padding: \"7px\"\n                    },\n                    className: \"hint_button_m\",\n                    onClick: () => setHintText2(hint2),\n                    children: hintText2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"giveup_button_m\",\n                onClick: openModal,\n                children: \"Give up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                isOpen: modalIsOpen,\n                onRequestClose: closeModal,\n                overlayClassName: \"ModalOverlay_m\",\n                className: \"ModalContent_m\",\n                contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"15px\",\n                    marginBottom: \"30px\",\n                    letterSpacing: \"-0.1px\"\n                  },\n                  children: \"\\uC815\\uB9D0 \\uD3EC\\uAE30\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"button-container_m\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#ffffff\",\n                      marginLeft: \"30px\",\n                      padding: \"0px\"\n                    },\n                    onClick: closeModal,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        marginTop: \"5px\",\n                        marginBottom: \"5px\",\n                        marginLeft: \"10px\",\n                        marginRight: \"10px\"\n                      },\n                      children: \"\\uCDE8\\uC18C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    style: {\n                      borderRadius: \"4px\",\n                      border: \"1px solid #2d2d2d\",\n                      backgroundColor: \"#3E5FD1\",\n                      marginRight: \"30px\",\n                      padding: \"0px\"\n                    },\n                    onClick: handleGiveUpClick,\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: \"#ffffff\",\n                        marginTop: \"5px\",\n                        marginBottom: \"5px\",\n                        marginLeft: \"10px\",\n                        marginRight: \"10px\"\n                      },\n                      children: \"\\uD655\\uC778\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 709,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qeustion_text_box_m\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `textbox_m ${shake ? \"shake\" : \"\"}`,\n              value: text,\n              onChange: handleChange,\n              onKeyDown: handleKeyPress,\n              placeholder: !tabPressed ? question_step ? `${background_question_text}` : `ex) ${main_character}` : `${background_text}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), background_text === \"\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n              style: {\n                position: \"absolute\"\n              },\n              children: answerloding_text.split(\"\").map((char, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  animationDelay: `${(i - 1) * 100}ms`,\n                  left: i > 2 ? `${33 + (i - 3) * 13}px` : `${i * 13}px`\n                },\n                className: \"wave_m\",\n                children: char\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), (background_question_text === \"\" || background_text === \" \") && /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"shake-text_m\",\n              children: \"5\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slider_box\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"send_button_m\",\n                onClick: handleSendClick,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"SendButton_m\",\n                  src: SendButton,\n                  alt: \"SendButton\",\n                  width: \"10\",\n                  height: \"15\",\n                  style: {\n                    top: \"3px\",\n                    cursor: \"move\",\n                    transition: \"left 0.3s ease-out\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => !qna.isDelete && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse_m\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              aiQuestion: qna.aiQuestion,\n              aiQuestionKr: qna.aiQuestionKr,\n              answerSubmit: qna.answerSubmit,\n              index: index,\n              answer: qna.answer,\n              opened: index === 0 ? true : false,\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\",\n              updateQnas: indexToDelete => {\n                setQnas(qnas.map((qna, index) => index === indexToDelete ? {\n                  ...qna,\n                  isDelete: true\n                } : qna));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonWithTip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top_m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"uj1FOLCMlyhpYl1jF2hTlY2pXYw=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","F22FBeta","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","ButtonWithTip","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","hintmodalIsOpen","setHintModalIsOpen","text_t","setText_t","author","setAuthor","main_character","setMainCharacter","text_question","setText_Question","question_step","setQuestion_Step","givup","setGiveUp","question_2step_text","setQuestion_2step_Text","hintText","setHintText","hintText2","setHintText2","hint","setHint","hint2","setHint2","background_text","setBackGroudText","background_question_text","setBackgroundQuestionText","answerloding_text","setAnswerLodingText","position","setPosition","x","y","isActive","setIsActive","n","setN","get","process","env","REACT_APP_API_URL","then","response","data","now","Date","currentDate","getFullYear","getMonth","getDate","lastTime","localStorage","getItem","lastDate","setItem","savedNickname","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","hints","length","catch","error","console","handleChange","e","target","value","handleQuesionCheckcclick","asnync","setTimeout","updateColor","handleAnswerCheckcclick","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleCheck","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","text_x","anotherResponse","post","startsWith","prev","newQnas","aiQuestion","ai_question","aiQuestionKr","ai_question_kr","answerSubmit","answer","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","isDelete","index","total","updatedQnas","responseString","log","includes","map","qna","allLoaded","every","trackPosition","ui","newColor","document","querySelector","style","border","background","endDrag","openModal","openHintModal","closeHintModal","nl2br","str","split","line","array","children","div","initial","opacity","animate","exit","className","src","alt","onClick","axis","bounds","left","right","top","bottom","로ㅑㅜㅅ","onDrag","onStop","isOpen","onRequestClose","overlayClassName","contentLabel","outline","backgroundColor","fontSize","letterSpacing","borderTop","marginTop","borderRadius","padding","marginBottom","marginLeft","marginRight","color","onChange","onKeyDown","placeholder","char","i","animationDelay","width","height","cursor","transition","opened","borderBottomStrength","updateQnas","indexToDelete","_c","$RefreshReg$"],"sources":["/app/src/page/mobileProblem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna_m\";\nimport \"./mb_page.css\";\nimport F22FBeta from \"../../images/F22FBeta.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport ButtonWithTip from \"../../component/tiptoolbutton\";\nimport Draggable from \"react-draggable\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [hintmodalIsOpen, setHintModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [main_character, setMainCharacter] = useState(\"\");\n  const [text_question, setText_Question] = useState(\n    \"어떤 대상에 대해 알고 싶으신가요?\"\n  );\n  const [question_step, setQuestion_Step] = useState(true);\n  const [givup, setGiveUp] = useState(false);\n  const [question_2step_text, setQuestion_2step_Text] = useState(\"\");\n  const [hintText, setHintText] = useState(\"힌트 A: 기본적인 힌트\");\n  const [hintText2, setHintText2] = useState(\"힌트 B: 결정적인 힌트\");\n  const [hint, setHint] = useState(\"없음\");\n  const [hint2, setHint2] = useState(\"없음\");\n  const [background_text, setBackGroudText] = useState(\"정답을 입력하세요.\");\n  const [background_question_text, setBackgroundQuestionText] =\n    useState(\"주어를 넣어 질문을 입력하세요.\");\n  const [answerloding_text, setAnswerLodingText] =\n    useState(\"정답을 확인중입니다.\");\n  const [position, setPosition] = useState({ x: 5, y: 0 });\n  const [isActive, setIsActive] = useState(false);\n  const [n, setN] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getNnumber/\")\n      .then((response) => {\n        const data = response.data;\n        setN(data.n);\n      });\n  }, []);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${\n        lastTime.getMonth() + 1\n      }-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      // localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n\n    setCorrectAnswers(savedCorrectAnswers);\n\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(qnas);\n  // }, [qnas]);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      if (givup) {\n        navigate(\"/explanation\", { state: { userAnswer: \"\" } });\n        setUpdateState(false);\n      } else {\n        navigate(\"/explanation\", { state: { userAnswer: text_t } });\n        // 상태 업데이트 완료 표시\n        setUpdateState(false);\n      }\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n        setAuthor(data.author);\n        setMainCharacter(data.main_character);\n        setHint(\n          data.hints && data.hints.length > 0 ? data.hints[0].hint : null\n        );\n        setHint2(\n          data.hints && data.hints.length > 1 ? data.hints[1].hint : null\n        );\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (tabPressed) {\n      setText_Question(\"정답을 말해주세요.\");\n    } else {\n      if (question_step) {\n        setText_Question(\"질문을 완성해주세요.\");\n      } else {\n        setText_Question(\"어떤 대상에 대해 알고 싶으신가요?\");\n      }\n    }\n  }, [tabPressed, question_step]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  const handleQuesionCheckcclick = (asnync) => {\n    setTabPressed(false);\n    setTimeout(() => setPosition({ x: 8, y: 0 }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n  const handleAnswerCheckcclick = (asnync) => {\n    setTabPressed(true);\n    setTimeout(() => setPosition({ x: 35, y: 0 }));\n    updateColor();\n    // setQuestion_Step(false);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n      if (position.x == 35) {\n        setTimeout(() => setPosition({ x: 8, y: 0 }));\n        updateColor();\n      } else {\n        setTimeout(() => setPosition({ x: 35, y: 0 }));\n        updateColor();\n      }\n      // setQuestion_Step(false);\n    }\n    if (e.key === \"Escape\") {\n      // setQuestion_Step(false);\n    }\n  };\n\n  const handleCheck = () => {\n    setTabPressed(!tabPressed);\n    if (position.x == 35) {\n      setTimeout(() => setPosition({ x: 8, y: 0 }));\n      updateColor();\n    } else {\n      setTimeout(() => setPosition({ x: 35, y: 0 }));\n      updateColor();\n    }\n  };\n\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setGiveUp(true);\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text;\n      setTimeout(() => setText(\"\"), 0);\n      // console.log(process.env.REACT_APP_API_URL + \"/submit/\");\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 5) {\n          setBackGroudText(\" \");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setBackGroudText(\"정답을 입력하세요.\"), 600);\n        } else {\n          setBackGroudText(\"\");\n          const anotherResponse = await axios.post(\n            process.env.REACT_APP_API_URL + \"/submit/\",\n            {\n              data: text_x,\n            }\n          );\n          // console.log(anotherResponse.data.response);\n          if (\n            anotherResponse.data.response.startsWith(\"네\") ||\n            anotherResponse.data.response.startsWith(\"예\") ||\n            anotherResponse.data.response.startsWith(\"맞습니다\") ||\n            anotherResponse.data.response.startsWith(\"Yes\")\n          ) {\n            const now = new Date();\n            const currentDate = `${now.getFullYear()}-${\n              now.getMonth() + 1\n            }-${now.getDate()}`;\n\n            localStorage.setItem(\"endTime\", now);\n            // 마지막으로 정답을 맞춘 날짜를 불러오기\n            const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n            const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n\n            // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n            if (\n              lastGiveUpDate !== currentDate &&\n              lastCorrectDate !== currentDate\n            ) {\n              // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n              localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n              // 정답 횟수를 증가\n              setCorrectAnswers((prev) => prev + 1);\n\n              // setUpdateState(true);\n            }\n            setUpdateState(true);\n          } else {\n            setShake(true); // 실패 시 shake 상태를 true로 변경\n            let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n            const newQnas = [\n              {\n                question: text_x,\n                aiQuestion: anotherResponse.data.ai_question,\n                aiQuestionKr: anotherResponse.data.ai_question_kr,\n                answerSubmit: true,\n                answer: \"정답이 아닙니다.\",\n              },\n              ...savedQnas,\n            ];\n            setQnas(newQnas);\n            saveQnas(newQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n            setTimeout(() => setShake(false), 500);\n          }\n          setBackGroudText(\"정답을 입력하세요.\");\n        }\n      } else {\n        if (text_x.length <= 5) {\n          setBackgroundQuestionText(\"\");\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(\n            () => setBackgroundQuestionText(\"주어를 넣어 질문을 입력하세요\"),\n            600\n          );\n        } else {\n          // let savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n          const tempQnas = [\n            {\n              question: text_x,\n              aiQuestion: <Loading />,\n              answer: <Loading />,\n              aiQuestionKr: <Loading />,\n              answerSubmit: false,\n              isDelete: false,\n              index: totalQuestionsAsked,\n            },\n            ...qnas,\n          ];\n          let total = totalQuestionsAsked;\n          setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n          const response = await axios.post(\n            process.env.REACT_APP_API_URL + \"/question/\",\n            {\n              data: text_x,\n            }\n          );\n          let updatedQnas;\n          // console.log(response.data.ai_question);\n\n          let responseString = JSON.stringify(response.data.response);\n          console.log(responseString);\n          if (responseString.includes(\"Yes\") || responseString.includes(\"네\")) {\n            // if (true) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && qna.index === total\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"네.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"아니오\") ||\n            responseString.includes(\"No\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && qna.index === total\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"아니오.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably no\") ||\n            responseString.includes(\"아마도 아닐 겁니다.\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && qna.index === total\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"아마도 아닐 겁니다.\",\n                  }\n                : qna\n            );\n          } else if (\n            responseString.includes(\"Probably\") ||\n            responseString.includes(\"아마도 그럴겁니다\")\n          ) {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && qna.index === total\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"아마도 맞을 겁니다.\",\n                  }\n                : qna\n            );\n          } else {\n            updatedQnas = tempQnas.map((qna) =>\n              qna.question === text_x && qna.index === total\n                ? {\n                    question: text_x,\n                    aiQuestion: response.data.ai_question,\n                    aiQuestionKr: response.data.ai_question_kr,\n                    answerSubmit: false,\n                    isDelete: false,\n                    answer: \"중요하지 않은 정보입니다.\",\n                  }\n                : qna\n            );\n          }\n          // 모든 질문이 로딩이 완료되었는지 확인\n          const allLoaded = updatedQnas.every(\n            (qna) => qna.aiQuestion !== Loading && qna.answer !== Loading\n          );\n\n          // 로딩 중인 항목이 없을 경우에만 저장\n          if (allLoaded) {\n            setQnas(updatedQnas); // 응답으로 교체\n            saveQnas(updatedQnas);\n            setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          } // localStorage에 저장\n        }\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  const trackPosition = (e, ui) => {\n    // Calculate the new color based on newX\n    // Here you may need to adapt the calculation based on your actual min and max x values\n\n    // Update position\n    setPosition({ x: ui.x, y: ui.y });\n  };\n\n  const updateColor = () => {\n    const newColor = !tabPressed ? \"#5374e8\" : \"#5DB075\";\n\n    // Set the new background color to the button\n    document.querySelector(\".slider_m\").style.border = \"1px solid \" + newColor;\n    document.querySelector(\".slider-button_m\").style.background = newColor;\n  };\n\n  const endDrag = () => {\n    if (position.x < 21) {\n      setPosition({ x: 4, y: 0 });\n      setTabPressed(false);\n      updateColor();\n    } else {\n      setPosition({ x: 35, y: 0 });\n      setTabPressed(true);\n      updateColor();\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  function openHintModal() {\n    setHintModalIsOpen(true);\n  }\n\n  function closeHintModal() {\n    setHintModalIsOpen(false);\n  }\n\n  function nl2br(str) {\n    return str.split(\"\\n\").map((line, index, array) => (\n      <>\n        {line}\n        {index === array.length - 1 ? null : <br />}\n      </>\n    ));\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container_problem_m\">\n        <div className=\"all_m\">\n          <div className=\"up_bar_m\">\n            <img\n              className=\"F22F_main_m\"\n              src={F22FBeta}\n              alt=\"F22FBeta\"\n              onClick={handleLogoClick}\n            />\n\n            <div className=\"nickname_profile_main_m\">\n              <img\n                className=\"profile_photo_main_m\"\n                src={Profile}\n                alt=\"Profile\"\n              />\n\n              <p className=\"nickname_m\">{nickname} 님</p>\n            </div>\n          </div>\n\n          <div className=\"problem_box_m\">\n            <span className=\"description_m\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n              <br />\n              Tab 키를 눌러 {n}번째 문제의 정답을 맞혀보세요.\n            </span>\n\n            <div className=\"problem_main_box_m\">\n              <div className=\"question_box_m\">\n                <span className=\"Question_m\">{nl2br(question)}</span>\n              </div>\n            </div>\n            {author && <span className=\"source_m\">{`출처 : ${author}`}</span>}\n            <div className=\"check_click_box_m\">\n              <div className=\"circle_check_box_m\">\n                <div className={`slider_m`} onClick={handleCheck}>\n                  <Draggable\n                    axis=\"x\"\n                    bounds={{ left: 8, right: 35, top: 0, bottom: 0 }}\n                    position={position}\n                    로ㅑㅜㅅ\n                    onDrag={trackPosition}\n                    onStop={endDrag}\n                  >\n                    <div className=\"slider-button_m\"></div>\n                  </Draggable>\n                </div>\n              </div>\n              <div className=\"hint_giveup_button_box_m\">\n                <button className=\"hint_button_box_m\" onClick={openHintModal}>\n                  Hint\n                </button>\n                <Modal\n                  isOpen={hintmodalIsOpen}\n                  onRequestClose={closeHintModal}\n                  overlayClassName=\"ModalOverlay_m\"\n                  className=\"ModalContent_m\"\n                  contentLabel=\"포기 확인\"\n                >\n                  <button\n                    style={{\n                      position: \"absolute\",\n                      right: \"3px\",\n                      top: \"3px\",\n                      outline: \"none\",\n                      border: \"0px\",\n                      backgroundColor: \"#ffffff\",\n                    }}\n                    onClick={closeHintModal}\n                  >\n                    x\n                  </button>\n                  <p\n                    style={{\n                      fontSize: \"15px\",\n                      // marginBottom: \"30px\",\n                      letterSpacing: \"-0.1px\",\n                    }}\n                  >\n                    버튼을 눌러 힌트를 확인해보세요.\n                  </p>\n                  <div\n                    style={{ borderTop: \"1px solid black\" }}\n                    className=\"hint-button-container_m\"\n                  >\n                    <button\n                      style={{\n                        marginTop: \"20px\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #2d2d2d\",\n                        backgroundColor: \"#ffffff\",\n                        padding: \"7px\",\n                      }}\n                      className=\"hint_button_m\"\n                      onClick={() => setHintText(hint)}\n                    >\n                      {hintText}\n                    </button>\n                    <button\n                      style={{\n                        borderRadius: \"4px\",\n                        border: \"1px solid #2d2d2d\",\n                        backgroundColor: \"#ffffff\",\n                        padding: \"7px\",\n                      }}\n                      className=\"hint_button_m\"\n                      onClick={() => setHintText2(hint2)}\n                    >\n                      {hintText2}\n                    </button>\n                  </div>\n                </Modal>\n                <button className=\"giveup_button_m\" onClick={openModal}>\n                  Give up\n                </button>\n\n                <Modal\n                  isOpen={modalIsOpen}\n                  onRequestClose={closeModal}\n                  overlayClassName=\"ModalOverlay_m\"\n                  className=\"ModalContent_m\"\n                  contentLabel=\"포기 확인\"\n                >\n                  <p\n                    style={{\n                      fontSize: \"15px\",\n                      marginBottom: \"30px\",\n                      letterSpacing: \"-0.1px\",\n                    }}\n                  >\n                    정말 포기하시겠습니까?\n                  </p>\n                  <div className=\"button-container_m\">\n                    <button\n                      style={{\n                        borderRadius: \"4px\",\n                        border: \"1px solid #2d2d2d\",\n                        backgroundColor: \"#ffffff\",\n                        marginLeft: \"30px\",\n                        padding: \"0px\",\n                      }}\n                      onClick={closeModal}\n                    >\n                      <p\n                        style={{\n                          marginTop: \"5px\",\n                          marginBottom: \"5px\",\n                          marginLeft: \"10px\",\n                          marginRight: \"10px\",\n                        }}\n                      >\n                        취소\n                      </p>\n                    </button>\n                    <button\n                      style={{\n                        borderRadius: \"4px\",\n                        border: \"1px solid #2d2d2d\",\n                        backgroundColor: \"#3E5FD1\",\n                        marginRight: \"30px\",\n                        padding: \"0px\",\n                      }}\n                      onClick={handleGiveUpClick}\n                    >\n                      <p\n                        style={{\n                          color: \"#ffffff\",\n                          marginTop: \"5px\",\n                          marginBottom: \"5px\",\n                          marginLeft: \"10px\",\n                          marginRight: \"10px\",\n                        }}\n                      >\n                        확인\n                      </p>\n                    </button>\n                  </div>\n                </Modal>\n              </div>\n            </div>\n            <div className=\"qeustion_text_box_m\">\n              <input\n                className={`textbox_m ${shake ? \"shake\" : \"\"}`}\n                value={text}\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder={\n                  !tabPressed\n                    ? question_step\n                      ? `${background_question_text}`\n                      : `ex) ${main_character}`\n                    : `${background_text}`\n                }\n              />\n              {background_text === \"\" && (\n                <h1 style={{ position: \"absolute\" }}>\n                  {answerloding_text.split(\"\").map((char, i) => (\n                    <span\n                      style={{\n                        animationDelay: `${(i - 1) * 100}ms`,\n                        left: i > 2 ? `${33 + (i - 3) * 13}px` : `${i * 13}px`,\n                      }}\n                      className=\"wave_m\"\n                    >\n                      {char}\n                    </span>\n                  ))}\n                </h1>\n              )}\n              {(background_question_text === \"\" || background_text === \" \") && (\n                <h1 className=\"shake-text_m\">5자 이상 입력해주세요.</h1>\n              )}\n              <div className=\"slider_box\">\n                <div className=\"send_button_m\" onClick={handleSendClick}>\n                  <img\n                    className=\"SendButton_m\"\n                    src={SendButton}\n                    alt=\"SendButton\"\n                    width=\"10\"\n                    height=\"15\"\n                    style={{\n                      top: \"3px\",\n                      cursor: \"move\",\n                      transition: \"left 0.3s ease-out\",\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n            {qnas.map(\n              (qna, index) =>\n                !qna.isDelete && (\n                  <div className=\"QAresponse_m\" key={index}>\n                    <QnA\n                      question={qna.question}\n                      aiQuestion={qna.aiQuestion}\n                      aiQuestionKr={qna.aiQuestionKr}\n                      answerSubmit={qna.answerSubmit}\n                      index={index}\n                      answer={qna.answer}\n                      opened={index === 0 ? true : false}\n                      borderBottomStrength={\n                        index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                      }\n                      updateQnas={(indexToDelete) => {\n                        setQnas(\n                          qnas.map((qna, index) =>\n                            index === indexToDelete\n                              ? { ...qna, isDelete: true }\n                              : qna\n                          )\n                        );\n                      }}\n                    />\n                  </div>\n                )\n            )}\n          </div>\n\n          <div>\n            <ButtonWithTip />\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top_m\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}