{"ast":null,"code":"var _jsxFileName = \"/app/src/page/problem/page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Problem() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${lastTime.getMonth() + 1}-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(localStorage.getItem(\"totalQuestionsAsked\"));\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n  const saveQnas = qnas => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", {\n        state: {\n          userAnswer: text_t\n        }\n      });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios.get(process.env.REACT_APP_API_URL + \"/getQuestion/\").then(response => {\n      const data = response.data;\n      setQuestion(data.question);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, []);\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    const subjectMarkers = [\"은\", \"는\", \"이\", \"가\"];\n    let hasSubject = subjectMarkers.some(marker => text.includes(marker));\n    if (!hasSubject) {\n      setShake(true); // 실패 시 shake 상태를 true로 변경\n      const newQnas = [{\n        question: text,\n        answer: \"주어를 입력해주세요.\"\n      }, ...qnas];\n      setQnas(newQnas);\n      saveQnas(newQnas);\n      setTotalQuestionsAsked(totalQuestionsAsked + 1);\n      setTimeout(() => setShake(false), 500);\n      setTimeout(() => setText(\"\"), 0);\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text + \"?\";\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 10) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text_x,\n            answer: \"10자 이상으로 입력해주세요.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n          return;\n        }\n        console.log(text_x);\n        const anotherResponse = await axios.post(process.env.REACT_APP_API_URL + \"/submit/\", {\n          data: text_x\n        });\n        console.log(anotherResponse.data.response);\n        if (anotherResponse.data.response.startsWith(\"네\") || anotherResponse.data.response.startsWith(\"예\") || anotherResponse.data.response.startsWith(\"맞습니다\")) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`;\n          localStorage.setItem(\"endTime\", now);\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers(prev => prev + 1);\n\n            // setUpdateState(true);\n          }\n\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [{\n            question: text_x,\n            answer: \"정답이 아닙니다.\"\n          }, ...qnas];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{\n          question: text_x,\n          answer: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 55\n          }, this)\n        }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n        console.log(text_x);\n        const response = await axios.post(process.env.REACT_APP_API_URL + \"/question/\", {\n          data: text_x\n        });\n        // console(response.data.response);\n        let updatedQnas;\n        if (response.data.response.startsWith(\"네\") || response.data.response.startsWith(\"예\") || response.data.response.startsWith(\"맞습니다\") || response.data.response.startsWith(\"아니오\") || response.data.response.startsWith(\"아닙니다\") || response.data.response.startsWith(\"모르겠습니다\") || response.data.response.startsWith(\"모릅니다\")) {\n          updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.answer.type === Loading ? {\n            question: text_x,\n            answer: response.data.response\n          } : qna);\n        } else {\n          updatedQnas = tempQnas.map(qna => qna.question === text_x && qna.answer.type === Loading ? {\n            question: text_x,\n            answer: \"예, 아니오로 대답할 수 있는 질문을 해주세요.\"\n          } : qna);\n        }\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n  function openModal() {\n    setModalIsOpen(true);\n  }\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e218_192\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question_box\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"Question\",\n              children: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `textbox ${shake ? \"shake\" : \"\"}`,\n            value: text,\n            onChange: handleChange,\n            onKeyDown: handleKeyPress,\n            placeholder: \"\\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `send_button ${tabPressed ? \"tabPressed\" : \"\"}`,\n            onClick: handleSendClick,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"SendButton\",\n              src: SendButton,\n              alt: \"SendButton\",\n              width: \"15\",\n              height: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), qnas.map((qna, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QAresponse\",\n            children: /*#__PURE__*/_jsxDEV(QnA, {\n              question: qna.question,\n              answer: isLoading && qna.question === text ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading\",\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this) : qna.answer,\n              borderStrength: index === 0 ? \"2px\" : \"0px\",\n              borderBottomStrength: index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"giveup_button\",\n              onClick: openModal,\n              children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              isOpen: modalIsOpen,\n              onRequestClose: closeModal,\n              overlayClassName: \"ModalOverlay\",\n              className: \"ModalContent\",\n              contentLabel: \"\\uD3EC\\uAE30 \\uD655\\uC778\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\uC815\\uB9D0\\uB85C \\uD3EC\\uAE30\\uB97C \\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleGiveUpClick,\n                  children: \"\\uD3EC\\uAE30\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: closeModal,\n                  children: \"\\uB354\\uD574\\uBCF4\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border_line\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nickname\",\n              children: [nickname, \" \\uB2D8\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"profile_photo\",\n              src: Profile,\n              alt: \"Profile\",\n              width: \"25\",\n              height: \"25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"F22F\",\n          onClick: handleLogoClick,\n          children: \"F22F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"e168_70\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: \"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description_2\",\n            children: \"Tab \\uD0A4\\uB97C \\uB20C\\uB7EC N\\uBC88\\uC9F8 \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ScrollToTopButton, {\n            className: \"scroll_to_top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n_s(Problem, \"FMrYlZkK3g3P9FGwbMwUUc7HRI4=\", false, function () {\n  return [useNavigate];\n});\n_c = Problem;\nvar _c;\n$RefreshReg$(_c, \"Problem\");","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","useNavigate","Profile","SendButton","Loading","motion","Modal","ScrollToTopButton","jsxDEV","_jsxDEV","Problem","_s","text","setText","qnas","setQnas","question","setQuestion","navigate","shake","setShake","isLoading","setIsLoading","gameAttempts","setGameAttempts","correctAnswers","setCorrectAnswers","giveUpCount","setGiveUpCount","totalQuestionsAsked","setTotalQuestionsAsked","updateState","setUpdateState","tabPressed","setTabPressed","isProcessing","setIsProcessing","nickname","setNickname","modalIsOpen","setModalIsOpen","text_t","setText_t","now","Date","currentDate","getFullYear","getMonth","getDate","lastTime","localStorage","getItem","lastDate","setItem","savedNickname","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","console","log","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","process","env","REACT_APP_API_URL","get","then","response","data","catch","error","handleChange","e","target","value","handleLogoClick","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","closeModal","lastGiveUpDate","lastCorrectDate","subjectMarkers","hasSubject","some","marker","includes","newQnas","answer","setTimeout","text_x","length","anotherResponse","post","startsWith","prev","tempQnas","fileName","_jsxFileName","lineNumber","columnNumber","updatedQnas","map","qna","type","openModal","div","initial","opacity","animate","exit","children","className","onChange","onKeyDown","placeholder","onClick","src","alt","width","height","index","borderStrength","borderBottomStrength","isOpen","onRequestClose","overlayClassName","contentLabel","_c","$RefreshReg$"],"sources":["/app/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport Modal from \"react-modal\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [text_t, setText_t] = useState(\"\");\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    let lastTime = localStorage.getItem(\"startTime\");\n    if (lastTime) {\n      lastTime = new Date(lastTime);\n      const lastDate = `${lastTime.getFullYear()}-${\n        lastTime.getMonth() + 1\n      }-${lastTime.getDate()}`;\n      if (lastDate !== currentDate) {\n        localStorage.setItem(\"startTime\", now);\n        localStorage.setItem(\"endTime\", \"\");\n      }\n    } else {\n      localStorage.setItem(\"startTime\", now);\n      localStorage.setItem(\"endTime\", \"\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", { state: { userAnswer: text_t } });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    closeModal();\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"endTime\", now);\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    const subjectMarkers = [\"은\", \"는\", \"이\", \"가\"];\n\n    let hasSubject = subjectMarkers.some((marker) => text.includes(marker));\n\n    if (!hasSubject) {\n      setShake(true); // 실패 시 shake 상태를 true로 변경\n      const newQnas = [\n        { question: text, answer: \"주어를 입력해주세요.\" },\n        ...qnas,\n      ];\n      setQnas(newQnas);\n      saveQnas(newQnas);\n      setTotalQuestionsAsked(totalQuestionsAsked + 1);\n      setTimeout(() => setShake(false), 500);\n      setTimeout(() => setText(\"\"), 0);\n      return;\n    }\n\n    setIsProcessing(true);\n    try {\n      setText_t(text);\n      const text_x = text + \"?\";\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        if (text_x.length <= 10) {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text_x, answer: \"10자 이상으로 입력해주세요.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n          return;\n        }\n        console.log(text_x);\n        const anotherResponse = await axios.post(\n          process.env.REACT_APP_API_URL + \"/submit/\",\n          {\n            data: text_x,\n          }\n        );\n        console.log(anotherResponse.data.response);\n        if (\n          anotherResponse.data.response.startsWith(\"네\") ||\n          anotherResponse.data.response.startsWith(\"예\") ||\n          anotherResponse.data.response.startsWith(\"맞습니다\")\n        ) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${\n            now.getMonth() + 1\n          }-${now.getDate()}`;\n\n          localStorage.setItem(\"endTime\", now);\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (\n            lastGiveUpDate !== currentDate &&\n            lastCorrectDate !== currentDate\n          ) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers((prev) => prev + 1);\n\n            // setUpdateState(true);\n          }\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text_x, answer: \"정답이 아닙니다.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{ question: text_x, answer: <Loading /> }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n        console.log(text_x);\n        const response = await axios.post(\n          process.env.REACT_APP_API_URL + \"/question/\",\n          {\n            data: text_x,\n          }\n        );\n        // console(response.data.response);\n        let updatedQnas;\n        if (\n          response.data.response.startsWith(\"네\") ||\n          response.data.response.startsWith(\"예\") ||\n          response.data.response.startsWith(\"맞습니다\") ||\n          response.data.response.startsWith(\"아니오\") ||\n          response.data.response.startsWith(\"아닙니다\") ||\n          response.data.response.startsWith(\"모르겠습니다\") ||\n          response.data.response.startsWith(\"모릅니다\")\n        ) {\n          updatedQnas = tempQnas.map((qna) =>\n            qna.question === text_x && qna.answer.type === Loading\n              ? { question: text_x, answer: response.data.response }\n              : qna\n          );\n        } else {\n          updatedQnas = tempQnas.map((qna) =>\n            qna.question === text_x && qna.answer.type === Loading\n              ? {\n                  question: text_x,\n                  answer: \"예, 아니오로 대답할 수 있는 질문을 해주세요.\",\n                }\n              : qna\n          );\n        }\n\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  function openModal() {\n    setModalIsOpen(true);\n  }\n\n  function closeModal() {\n    setModalIsOpen(false);\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"question_box\">\n              <span className=\"Question\">{question}</span>\n            </div>\n            <input\n              className={`textbox ${shake ? \"shake\" : \"\"}`}\n              value={text}\n              onChange={handleChange}\n              onKeyDown={handleKeyPress}\n              placeholder=\"질문을 입력하세요.\"\n            />\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  answer={\n                    isLoading && qna.question === text ? (\n                      <span className=\"loading\">Loading</span>\n                    ) : (\n                      qna.answer\n                    )\n                  }\n                  borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n            <div>\n              <button className=\"giveup_button\" onClick={openModal}>\n                포기하기\n              </button>\n\n              <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                overlayClassName=\"ModalOverlay\"\n                className=\"ModalContent\"\n                contentLabel=\"포기 확인\"\n              >\n                <h2>정말로 포기를 하시겠습니까?</h2>\n                <div className=\"button-container\">\n                  <button onClick={handleGiveUpClick}>포기하기</button>\n                  <button onClick={closeModal}>더해보기</button>\n                </div>\n              </Modal>\n            </div>\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <button className=\"F22F\" onClick={handleLogoClick}>\n            F22F\n          </button>\n\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              Tab 키를 눌러 N번째 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}