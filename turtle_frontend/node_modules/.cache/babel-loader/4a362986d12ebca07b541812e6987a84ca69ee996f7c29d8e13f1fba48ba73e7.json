{"ast":null,"code":"import _toConsumableArray from\"/Users/yijungu/SeaTuetleSoup/turtle_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/yijungu/SeaTuetleSoup/turtle_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/yijungu/SeaTuetleSoup/turtle_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yijungu/SeaTuetleSoup/turtle_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import QnA from\"../../component/qna\";import\"./page.css\";import{useNavigate}from\"react-router-dom\";import Profile from\"../../images/Profile.png\";import SendButton from\"../../images/SendButton.png\";import Loading from\"../../component/loading\";import{motion}from\"framer-motion\";import ScrollToTopButton from\"../../component/scrollbutton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Problem(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),qnas=_useState4[0],setQnas=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),question=_useState6[0],setQuestion=_useState6[1];var navigate=useNavigate();var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),shake=_useState8[0],setShake=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isLoading=_useState10[0],setIsLoading=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),gameAttempts=_useState12[0],setGameAttempts=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),correctAnswers=_useState14[0],setCorrectAnswers=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),giveUpCount=_useState16[0],setGiveUpCount=_useState16[1];var _useState17=useState(0),_useState18=_slicedToArray(_useState17,2),totalQuestionsAsked=_useState18[0],setTotalQuestionsAsked=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),updateState=_useState20[0],setUpdateState=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),tabPressed=_useState22[0],setTabPressed=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),isProcessing=_useState24[0],setIsProcessing=_useState24[1];var _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),nickname=_useState26[0],setNickname=_useState26[1];useEffect(function(){var savedNickname=localStorage.getItem(\"nickname\");if(savedNickname){setNickname(savedNickname);}},[]);useEffect(function(){// 현재 날짜를 구한다\nvar now=new Date();var currentDate=\"\".concat(now.getFullYear(),\"-\").concat(now.getMonth()+1,\"-\").concat(now.getDate());// 이전에 저장한 날짜를 불러온다\nvar savedDate=localStorage.getItem(\"date\");var savedGameAttempts=Number(localStorage.getItem(\"gameAttempts\"));var savedCorrectAnswers=Number(localStorage.getItem(\"correctAnswers\"));var savedGiveUpCount=Number(localStorage.getItem(\"giveUpCount\"));var savedTotalQuestionsAsked=Number(localStorage.getItem(\"totalQuestionsAsked\"));// 날짜가 다르면 모든 값을 초기화한다\nif(savedDate!==currentDate){setGameAttempts(savedGameAttempts+1);setTotalQuestionsAsked(0);localStorage.setItem(\"date\",currentDate);}else{// 같은 날이면 localStorage에 저장된 값을 불러온다\nsetGameAttempts(savedGameAttempts||1);setTotalQuestionsAsked(savedTotalQuestionsAsked||0);}console.log(\"asdasd\",savedCorrectAnswers);setCorrectAnswers(savedCorrectAnswers);console.log(\"asdasd\",correctAnswers);setGiveUpCount(savedGiveUpCount||0);},[]);// 값들이 변경될 때마다 localStorage에 저장한다\nuseEffect(function(){localStorage.setItem(\"gameAttempts\",gameAttempts);localStorage.setItem(\"giveUpCount\",giveUpCount);localStorage.setItem(\"correctAnswers\",correctAnswers);localStorage.setItem(\"totalQuestionsAsked\",totalQuestionsAsked);},[gameAttempts,correctAnswers,giveUpCount,totalQuestionsAsked]);var saveQnas=function saveQnas(qnas){localStorage.setItem(\"qnas\",JSON.stringify(qnas));};useEffect(function(){var savedQnas=JSON.parse(localStorage.getItem(\"qnas\"));var savedDate=localStorage.getItem(\"date\");console.log(savedQnas);var now=new Date();var currentDate=\"\".concat(now.getFullYear(),\"-\").concat(now.getMonth()+1,\"-\").concat(now.getDate());if(savedQnas&&savedDate===currentDate){setQnas(savedQnas);}else{localStorage.removeItem(\"qnas\");localStorage.setItem(\"date\",currentDate);}},[]);useEffect(function(){if(updateState){navigate(\"/thanks\",{state:{userAnswer:text}});// 상태 업데이트 완료 표시\nsetUpdateState(false);}},[updateState,text]);useEffect(function(){var now=new Date();var currentDate=\"\".concat(now.getFullYear(),\"-\").concat(now.getMonth()+1,\"-\").concat(now.getDate());localStorage.setItem(\"date\",currentDate);},[qnas]);useEffect(function(){console.log(process.env.REACT_APP_API_URL);axios.get(process.env.REACT_APP_API_URL+\"/getQuestion/\").then(function(response){var data=response.data;setQuestion(data.question);}).catch(function(error){console.error(\"There was an error!\",error);});},[]);var handleChange=function handleChange(e){setText(e.target.value);};var handleKeyPress=function handleKeyPress(e){if(e.key===\"Enter\"){e.preventDefault();handleSendClick();}if(e.key===\"Tab\"){e.preventDefault();setTabPressed(!tabPressed);}};var handleGiveUpClick=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var lastGiveUpDate,lastCorrectDate,now,currentDate;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setText(\"포기할게요\");lastGiveUpDate=localStorage.getItem(\"lastGiveUpDate\");lastCorrectDate=localStorage.getItem(\"lastCorrectDate\");now=new Date();currentDate=\"\".concat(now.getFullYear(),\"-\").concat(now.getMonth()+1,\"-\").concat(now.getDate());// 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\nif(lastGiveUpDate!==currentDate&&lastCorrectDate!==currentDate){// 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\nlocalStorage.setItem(\"lastGiveUpDate\",currentDate);// 실패 횟수를 증가\nsetGiveUpCount(giveUpCount+1);}setUpdateState(true);case 7:case\"end\":return _context.stop();}},_callee);}));return function handleGiveUpClick(){return _ref.apply(this,arguments);};}();var handleSendClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var text_t,anotherResponse,now,currentDate,lastCorrectDate,lastGiveUpDate,newQnas,tempQnas,response,updatedQnas;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:if(!isProcessing){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:// 실행 중이 아니라면, 실행 중임을 표시\nsetIsProcessing(true);_context2.prev=3;text_t=text;setTimeout(function(){return setText(\"\");},0);if(!(tabPressed===true)){_context2.next=14;break;}_context2.next=9;return axios.post(process.env.REACT_APP_API_URL+\"/submit/\",{data:text_t});case 9:anotherResponse=_context2.sent;console.log(anotherResponse.data.response);if(anotherResponse.data.response.startsWith(\"네\")||anotherResponse.data.response.startsWith(\"예\")||anotherResponse.data.response.startsWith(\"맞습니다\")){now=new Date();currentDate=\"\".concat(now.getFullYear(),\"-\").concat(now.getMonth()+1,\"-\").concat(now.getDate());// 마지막으로 정답을 맞춘 날짜를 불러오기\nlastCorrectDate=localStorage.getItem(\"lastCorrectDate\");lastGiveUpDate=localStorage.getItem(\"lastGiveUpDate\");console.log(lastCorrectDate);// 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\nif(lastGiveUpDate!==currentDate&&lastCorrectDate!==currentDate){// 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\nlocalStorage.setItem(\"lastCorrectDate\",currentDate);// 정답 횟수를 증가\nsetCorrectAnswers(function(prev){return prev+1;});// setUpdateState(true);\n}setUpdateState(true);}else{setShake(true);// 실패 시 shake 상태를 true로 변경\nnewQnas=[{question:text,answer:\"정답이 아닙니다.\"}].concat(_toConsumableArray(qnas));setQnas(newQnas);saveQnas(newQnas);setTotalQuestionsAsked(totalQuestionsAsked+1);setTimeout(function(){return setShake(false);},500);}_context2.next=23;break;case 14:tempQnas=[{question:text,answer:/*#__PURE__*/_jsx(Loading,{})}].concat(_toConsumableArray(qnas));setQnas(tempQnas);// 임시로 Loading 애니메이션을 표시\n_context2.next=18;return axios.post(process.env.REACT_APP_API_URL+\"/question/\",{data:text_t});case 18:response=_context2.sent;updatedQnas=tempQnas.map(function(qna){return qna.question===text&&qna.answer.type===Loading?{question:text,answer:response.data.response}:qna;});setQnas(updatedQnas);// 응답으로 교체\nsaveQnas(updatedQnas);setTotalQuestionsAsked(totalQuestionsAsked+1);// localStorage에 저장\ncase 23:setIsProcessing(false);_context2.next=31;break;case 26:_context2.prev=26;_context2.t0=_context2[\"catch\"](3);setIsLoading(false);setIsProcessing(false);console.error(_context2.t0);case 31:case\"end\":return _context2.stop();}},_callee2,null,[[3,26]]);}));return function handleSendClick(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"all\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"e218_192\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"question_box\",children:/*#__PURE__*/_jsx(\"span\",{className:\"Question\",children:question})}),/*#__PURE__*/_jsx(\"input\",{className:\"textbox \".concat(shake?\"shake\":\"\"),value:text,onChange:handleChange,onKeyDown:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{className:\"send_button \".concat(tabPressed?\"tabPressed\":\"\"),onClick:handleSendClick,children:/*#__PURE__*/_jsx(\"img\",{className:\"SendButton\",src:SendButton,alt:\"SendButton\",width:\"15\",height:\"18\"})}),qnas.map(function(qna,index){return/*#__PURE__*/_jsx(\"div\",{className:\"QAresponse\",children:/*#__PURE__*/_jsx(QnA,{question:qna.question,answer:isLoading&&qna.question===text?/*#__PURE__*/_jsx(\"span\",{className:\"loading\",children:\"Loading\"}):qna.answer,borderStrength:index===0?\"2px\":\"0px\",borderBottomStrength:index===qnas.length-1?\"0.01px\":\"0px\"})},index);}),/*#__PURE__*/_jsx(\"button\",{className:\"giveup_button\",onClick:handleGiveUpClick,children:\"\\uD3EC\\uAE30\\uD558\\uAE30\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border_line\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"nickname\",children:[nickname,\" \\uB2D8\"]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{className:\"profile_photo\",src:Profile,alt:\"Profile\",width:\"25\",height:\"25\"})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"F22F\",children:\"F22F\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"e168_70\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"description\",children:\"\\uD14D\\uC2A4\\uD2B8 \\uC785\\uB825 \\uCE78\\uC5D0 \\uCD94\\uCE21\\uD55C \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uBA74 \\u2018\\uB124\\u2019 \\uB610\\uB294 \\u2018\\uC544\\uB2C8\\uC624\\u2019 \\uD615\\uC2DD\\uC758 \\uB2F5\\uC744 \\uBC1B\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"span\",{className:\"description_2\",children:\"N\\uBC88\\uC9F8 \\uBC14\\uB2E4\\uAC70\\uBD81\\uC218\\uD504\\uC758 \\uC815\\uB2F5\\uC744 \\uB9DE\\uD600\\uBCF4\\uC138\\uC694.\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ScrollToTopButton,{className:\"scroll_to_top\"})})]})})});}","map":{"version":3,"names":["React","useState","useEffect","axios","QnA","useNavigate","Profile","SendButton","Loading","motion","ScrollToTopButton","jsx","_jsx","jsxs","_jsxs","Problem","_useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","qnas","setQnas","_useState5","_useState6","question","setQuestion","navigate","_useState7","_useState8","shake","setShake","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","gameAttempts","setGameAttempts","_useState13","_useState14","correctAnswers","setCorrectAnswers","_useState15","_useState16","giveUpCount","setGiveUpCount","_useState17","_useState18","totalQuestionsAsked","setTotalQuestionsAsked","_useState19","_useState20","updateState","setUpdateState","_useState21","_useState22","tabPressed","setTabPressed","_useState23","_useState24","isProcessing","setIsProcessing","_useState25","_useState26","nickname","setNickname","savedNickname","localStorage","getItem","now","Date","currentDate","concat","getFullYear","getMonth","getDate","savedDate","savedGameAttempts","Number","savedCorrectAnswers","savedGiveUpCount","savedTotalQuestionsAsked","setItem","console","log","saveQnas","JSON","stringify","savedQnas","parse","removeItem","state","userAnswer","process","env","REACT_APP_API_URL","get","then","response","data","catch","error","handleChange","e","target","value","handleKeyPress","key","preventDefault","handleSendClick","handleGiveUpClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lastGiveUpDate","lastCorrectDate","wrap","_callee$","_context","prev","next","stop","apply","arguments","_ref2","_callee2","text_t","anotherResponse","newQnas","tempQnas","updatedQnas","_callee2$","_context2","abrupt","setTimeout","post","sent","startsWith","answer","_toConsumableArray","map","qna","type","t0","div","initial","opacity","animate","exit","children","className","onChange","onKeyDown","onClick","src","alt","width","height","index","borderStrength","borderBottomStrength","length"],"sources":["/Users/yijungu/SeaTuetleSoup/turtle_frontend/src/page/problem/page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QnA from \"../../component/qna\";\nimport \"./page.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Profile from \"../../images/Profile.png\";\nimport SendButton from \"../../images/SendButton.png\";\nimport Loading from \"../../component/loading\";\nimport { motion } from \"framer-motion\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\n\nexport default function Problem() {\n  const [text, setText] = useState(\"\");\n  const [qnas, setQnas] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const navigate = useNavigate();\n  const [shake, setShake] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [gameAttempts, setGameAttempts] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [giveUpCount, setGiveUpCount] = useState(0);\n  const [totalQuestionsAsked, setTotalQuestionsAsked] = useState(0);\n  const [updateState, setUpdateState] = useState(false);\n  const [tabPressed, setTabPressed] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [nickname, setNickname] = useState(\"\");\n\n  useEffect(() => {\n    const savedNickname = localStorage.getItem(\"nickname\");\n    if (savedNickname) {\n      setNickname(savedNickname);\n    }\n  }, []);\n\n  useEffect(() => {\n    // 현재 날짜를 구한다\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    // 이전에 저장한 날짜를 불러온다\n    const savedDate = localStorage.getItem(\"date\");\n    const savedGameAttempts = Number(localStorage.getItem(\"gameAttempts\"));\n    const savedCorrectAnswers = Number(localStorage.getItem(\"correctAnswers\"));\n\n    const savedGiveUpCount = Number(localStorage.getItem(\"giveUpCount\"));\n    const savedTotalQuestionsAsked = Number(\n      localStorage.getItem(\"totalQuestionsAsked\")\n    );\n\n    // 날짜가 다르면 모든 값을 초기화한다\n    if (savedDate !== currentDate) {\n      setGameAttempts(savedGameAttempts + 1);\n      setTotalQuestionsAsked(0);\n      localStorage.setItem(\"date\", currentDate);\n    } else {\n      // 같은 날이면 localStorage에 저장된 값을 불러온다\n      setGameAttempts(savedGameAttempts || 1);\n      setTotalQuestionsAsked(savedTotalQuestionsAsked || 0);\n    }\n    console.log(\"asdasd\", savedCorrectAnswers);\n    setCorrectAnswers(savedCorrectAnswers);\n    console.log(\"asdasd\", correctAnswers);\n    setGiveUpCount(savedGiveUpCount || 0);\n  }, []);\n\n  // 값들이 변경될 때마다 localStorage에 저장한다\n  useEffect(() => {\n    localStorage.setItem(\"gameAttempts\", gameAttempts);\n    localStorage.setItem(\"giveUpCount\", giveUpCount);\n    localStorage.setItem(\"correctAnswers\", correctAnswers);\n    localStorage.setItem(\"totalQuestionsAsked\", totalQuestionsAsked);\n  }, [gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked]);\n\n  const saveQnas = (qnas) => {\n    localStorage.setItem(\"qnas\", JSON.stringify(qnas));\n  };\n\n  useEffect(() => {\n    const savedQnas = JSON.parse(localStorage.getItem(\"qnas\"));\n    const savedDate = localStorage.getItem(\"date\");\n    console.log(savedQnas);\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n\n    if (savedQnas && savedDate === currentDate) {\n      setQnas(savedQnas);\n    } else {\n      localStorage.removeItem(\"qnas\");\n      localStorage.setItem(\"date\", currentDate);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (updateState) {\n      navigate(\"/thanks\", { state: { userAnswer: text } });\n      // 상태 업데이트 완료 표시\n      setUpdateState(false);\n    }\n  }, [updateState, text]);\n\n  useEffect(() => {\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    localStorage.setItem(\"date\", currentDate);\n  }, [qnas]);\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_API_URL);\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/getQuestion/\")\n      .then((response) => {\n        const data = response.data;\n        setQuestion(data.question);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSendClick();\n    }\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      setTabPressed(!tabPressed);\n    }\n  };\n  const handleGiveUpClick = async () => {\n    setText(\"포기할게요\");\n    const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n    const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n    const now = new Date();\n    const currentDate = `${now.getFullYear()}-${\n      now.getMonth() + 1\n    }-${now.getDate()}`;\n    // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n    if (lastGiveUpDate !== currentDate && lastCorrectDate !== currentDate) {\n      // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n\n      localStorage.setItem(\"lastGiveUpDate\", currentDate);\n\n      // 실패 횟수를 증가\n      setGiveUpCount(giveUpCount + 1);\n    }\n    setUpdateState(true);\n  };\n\n  const handleSendClick = async () => {\n    if (isProcessing) return;\n    // 실행 중이 아니라면, 실행 중임을 표시\n    setIsProcessing(true);\n    try {\n      const text_t = text;\n      setTimeout(() => setText(\"\"), 0);\n      if (tabPressed === true) {\n        // 텍스트가 '정답'으로 시작하면 다른 주소로 요청\n        const anotherResponse = await axios.post(\n          process.env.REACT_APP_API_URL + \"/submit/\",\n          {\n            data: text_t,\n          }\n        );\n        console.log(anotherResponse.data.response);\n        if (\n          anotherResponse.data.response.startsWith(\"네\") ||\n          anotherResponse.data.response.startsWith(\"예\") ||\n          anotherResponse.data.response.startsWith(\"맞습니다\")\n        ) {\n          const now = new Date();\n          const currentDate = `${now.getFullYear()}-${\n            now.getMonth() + 1\n          }-${now.getDate()}`;\n\n          // 마지막으로 정답을 맞춘 날짜를 불러오기\n          const lastCorrectDate = localStorage.getItem(\"lastCorrectDate\");\n          const lastGiveUpDate = localStorage.getItem(\"lastGiveUpDate\");\n          console.log(lastCorrectDate);\n          // 마지막으로 정답을 맞춘 날짜와 현재 날짜를 비교하기\n          if (\n            lastGiveUpDate !== currentDate &&\n            lastCorrectDate !== currentDate\n          ) {\n            // 현재 날짜를 마지막으로 정답을 맞춘 날짜로 저장\n            localStorage.setItem(\"lastCorrectDate\", currentDate);\n\n            // 정답 횟수를 증가\n            setCorrectAnswers((prev) => prev + 1);\n\n            // setUpdateState(true);\n          }\n          setUpdateState(true);\n        } else {\n          setShake(true); // 실패 시 shake 상태를 true로 변경\n          const newQnas = [\n            { question: text, answer: \"정답이 아닙니다.\" },\n            ...qnas,\n          ];\n          setQnas(newQnas);\n          saveQnas(newQnas);\n          setTotalQuestionsAsked(totalQuestionsAsked + 1);\n          setTimeout(() => setShake(false), 500);\n        }\n      } else {\n        const tempQnas = [{ question: text, answer: <Loading /> }, ...qnas];\n        setQnas(tempQnas); // 임시로 Loading 애니메이션을 표시\n\n        const response = await axios.post(\n          process.env.REACT_APP_API_URL + \"/question/\",\n          {\n            data: text_t,\n          }\n        );\n        const updatedQnas = tempQnas.map((qna) =>\n          qna.question === text && qna.answer.type === Loading\n            ? { question: text, answer: response.data.response }\n            : qna\n        );\n\n        setQnas(updatedQnas); // 응답으로 교체\n        saveQnas(updatedQnas);\n        setTotalQuestionsAsked(totalQuestionsAsked + 1); // localStorage에 저장\n      }\n      setIsProcessing(false);\n    } catch (error) {\n      setIsLoading(false);\n      setIsProcessing(false);\n      console.error(error);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"all\">\n          <div className=\"e218_192\">\n            <div className=\"question_box\">\n              <span className=\"Question\">{question}</span>\n            </div>\n            <input\n              className={`textbox ${shake ? \"shake\" : \"\"}`}\n              value={text}\n              onChange={handleChange}\n              onKeyDown={handleKeyPress}\n            />\n\n            <button\n              className={`send_button ${tabPressed ? \"tabPressed\" : \"\"}`}\n              onClick={handleSendClick}\n            >\n              <img\n                className=\"SendButton\"\n                src={SendButton}\n                alt=\"SendButton\"\n                width=\"15\"\n                height=\"18\"\n              />\n            </button>\n\n            {qnas.map((qna, index) => (\n              <div className=\"QAresponse\" key={index}>\n                <QnA\n                  question={qna.question}\n                  answer={\n                    isLoading && qna.question === text ? (\n                      <span className=\"loading\">Loading</span>\n                    ) : (\n                      qna.answer\n                    )\n                  }\n                  borderStrength={index === 0 ? \"2px\" : \"0px\"}\n                  borderBottomStrength={\n                    index === qnas.length - 1 ? \"0.01px\" : \"0px\"\n                  }\n                />\n              </div>\n            ))}\n            <button className=\"giveup_button\" onClick={handleGiveUpClick}>\n              포기하기\n            </button>\n          </div>\n\n          <div className=\"border_line\">\n            <div>\n              <p className=\"nickname\">{nickname} 님</p>\n            </div>\n            <div>\n              <img\n                className=\"profile_photo\"\n                src={Profile}\n                alt=\"Profile\"\n                width=\"25\"\n                height=\"25\"\n              />\n            </div>\n          </div>\n\n          <button className=\"F22F\">F22F</button>\n\n          <div className=\"e168_70\">\n            <span className=\"description\">\n              텍스트 입력 칸에 추측한 내용을 적으면 ‘네’ 또는 ‘아니오’ 형식의\n              답을 받을 수 있습니다.\n            </span>\n            <span className=\"description_2\">\n              N번째 바다거북수프의 정답을 맞혀보세요.\n            </span>\n          </div>\n          <div>\n            <ScrollToTopButton className=\"scroll_to_top\" />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"mappings":"giBAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,GAAG,KAAM,qBAAqB,CACrC,MAAO,YAAY,CACnB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAC9C,MAAO,CAAAC,UAAU,KAAM,6BAA6B,CACpD,MAAO,CAAAC,OAAO,KAAM,yBAAyB,CAC7C,OAASC,MAAM,KAAQ,eAAe,CACtC,MAAO,CAAAC,iBAAiB,KAAM,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7D,cAAe,SAAS,CAAAC,OAAOA,CAAA,CAAG,CAChC,IAAAC,SAAA,CAAwBf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACpB,IAAAI,UAAA,CAAwBpB,QAAQ,CAAC,EAAE,CAAC,CAAAqB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA7BE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IACpB,IAAAG,UAAA,CAAgCxB,QAAQ,CAAC,EAAE,CAAC,CAAAyB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAArCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAC5B,GAAM,CAAAG,QAAQ,CAAGxB,WAAW,CAAC,CAAC,CAC9B,IAAAyB,UAAA,CAA0B7B,QAAQ,CAAC,KAAK,CAAC,CAAA8B,UAAA,CAAAb,cAAA,CAAAY,UAAA,IAAlCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACtB,IAAAG,UAAA,CAAkCjC,QAAQ,CAAC,KAAK,CAAC,CAAAkC,WAAA,CAAAjB,cAAA,CAAAgB,UAAA,IAA1CE,SAAS,CAAAD,WAAA,IAAEE,YAAY,CAAAF,WAAA,IAC9B,IAAAG,WAAA,CAAwCrC,QAAQ,CAAC,CAAC,CAAC,CAAAsC,WAAA,CAAArB,cAAA,CAAAoB,WAAA,IAA5CE,YAAY,CAAAD,WAAA,IAAEE,eAAe,CAAAF,WAAA,IACpC,IAAAG,WAAA,CAA4CzC,QAAQ,CAAC,CAAC,CAAC,CAAA0C,WAAA,CAAAzB,cAAA,CAAAwB,WAAA,IAAhDE,cAAc,CAAAD,WAAA,IAAEE,iBAAiB,CAAAF,WAAA,IACxC,IAAAG,WAAA,CAAsC7C,QAAQ,CAAC,CAAC,CAAC,CAAA8C,WAAA,CAAA7B,cAAA,CAAA4B,WAAA,IAA1CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAClC,IAAAG,WAAA,CAAsDjD,QAAQ,CAAC,CAAC,CAAC,CAAAkD,WAAA,CAAAjC,cAAA,CAAAgC,WAAA,IAA1DE,mBAAmB,CAAAD,WAAA,IAAEE,sBAAsB,CAAAF,WAAA,IAClD,IAAAG,WAAA,CAAsCrD,QAAQ,CAAC,KAAK,CAAC,CAAAsD,WAAA,CAAArC,cAAA,CAAAoC,WAAA,IAA9CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAClC,IAAAG,WAAA,CAAoCzD,QAAQ,CAAC,KAAK,CAAC,CAAA0D,WAAA,CAAAzC,cAAA,CAAAwC,WAAA,IAA5CE,UAAU,CAAAD,WAAA,IAAEE,aAAa,CAAAF,WAAA,IAChC,IAAAG,WAAA,CAAwC7D,QAAQ,CAAC,KAAK,CAAC,CAAA8D,WAAA,CAAA7C,cAAA,CAAA4C,WAAA,IAAhDE,YAAY,CAAAD,WAAA,IAAEE,eAAe,CAAAF,WAAA,IACpC,IAAAG,WAAA,CAAgCjE,QAAQ,CAAC,EAAE,CAAC,CAAAkE,WAAA,CAAAjD,cAAA,CAAAgD,WAAA,IAArCE,QAAQ,CAAAD,WAAA,IAAEE,WAAW,CAAAF,WAAA,IAE5BjE,SAAS,CAAC,UAAM,CACd,GAAM,CAAAoE,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACtD,GAAIF,aAAa,CAAE,CACjBD,WAAW,CAACC,aAAa,CAAC,CAC5B,CACF,CAAC,CAAE,EAAE,CAAC,CAENpE,SAAS,CAAC,UAAM,CACd;AACA,GAAM,CAAAuE,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,GAAM,CAAAC,WAAW,IAAAC,MAAA,CAAMH,GAAG,CAACI,WAAW,CAAC,CAAC,MAAAD,MAAA,CACtCH,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAF,MAAA,CAChBH,GAAG,CAACM,OAAO,CAAC,CAAC,CAAE,CAEnB;AACA,GAAM,CAAAC,SAAS,CAAGT,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC9C,GAAM,CAAAS,iBAAiB,CAAGC,MAAM,CAACX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CACtE,GAAM,CAAAW,mBAAmB,CAAGD,MAAM,CAACX,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAE1E,GAAM,CAAAY,gBAAgB,CAAGF,MAAM,CAACX,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CACpE,GAAM,CAAAa,wBAAwB,CAAGH,MAAM,CACrCX,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAC5C,CAAC,CAED;AACA,GAAIQ,SAAS,GAAKL,WAAW,CAAE,CAC7BlC,eAAe,CAACwC,iBAAiB,CAAG,CAAC,CAAC,CACtC5B,sBAAsB,CAAC,CAAC,CAAC,CACzBkB,YAAY,CAACe,OAAO,CAAC,MAAM,CAAEX,WAAW,CAAC,CAC3C,CAAC,IAAM,CACL;AACAlC,eAAe,CAACwC,iBAAiB,EAAI,CAAC,CAAC,CACvC5B,sBAAsB,CAACgC,wBAAwB,EAAI,CAAC,CAAC,CACvD,CACAE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEL,mBAAmB,CAAC,CAC1CtC,iBAAiB,CAACsC,mBAAmB,CAAC,CACtCI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAE5C,cAAc,CAAC,CACrCK,cAAc,CAACmC,gBAAgB,EAAI,CAAC,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN;AACAlF,SAAS,CAAC,UAAM,CACdqE,YAAY,CAACe,OAAO,CAAC,cAAc,CAAE9C,YAAY,CAAC,CAClD+B,YAAY,CAACe,OAAO,CAAC,aAAa,CAAEtC,WAAW,CAAC,CAChDuB,YAAY,CAACe,OAAO,CAAC,gBAAgB,CAAE1C,cAAc,CAAC,CACtD2B,YAAY,CAACe,OAAO,CAAC,qBAAqB,CAAElC,mBAAmB,CAAC,CAClE,CAAC,CAAE,CAACZ,YAAY,CAAEI,cAAc,CAAEI,WAAW,CAAEI,mBAAmB,CAAC,CAAC,CAEpE,GAAM,CAAAqC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIlE,IAAI,CAAK,CACzBgD,YAAY,CAACe,OAAO,CAAC,MAAM,CAAEI,IAAI,CAACC,SAAS,CAACpE,IAAI,CAAC,CAAC,CACpD,CAAC,CAEDrB,SAAS,CAAC,UAAM,CACd,GAAM,CAAA0F,SAAS,CAAGF,IAAI,CAACG,KAAK,CAACtB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAC1D,GAAM,CAAAQ,SAAS,CAAGT,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC9Ce,OAAO,CAACC,GAAG,CAACI,SAAS,CAAC,CACtB,GAAM,CAAAnB,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,GAAM,CAAAC,WAAW,IAAAC,MAAA,CAAMH,GAAG,CAACI,WAAW,CAAC,CAAC,MAAAD,MAAA,CACtCH,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAF,MAAA,CAChBH,GAAG,CAACM,OAAO,CAAC,CAAC,CAAE,CAEnB,GAAIa,SAAS,EAAIZ,SAAS,GAAKL,WAAW,CAAE,CAC1CnD,OAAO,CAACoE,SAAS,CAAC,CACpB,CAAC,IAAM,CACLrB,YAAY,CAACuB,UAAU,CAAC,MAAM,CAAC,CAC/BvB,YAAY,CAACe,OAAO,CAAC,MAAM,CAAEX,WAAW,CAAC,CAC3C,CACF,CAAC,CAAE,EAAE,CAAC,CAENzE,SAAS,CAAC,UAAM,CACd,GAAIsD,WAAW,CAAE,CACf3B,QAAQ,CAAC,SAAS,CAAE,CAAEkE,KAAK,CAAE,CAAEC,UAAU,CAAE7E,IAAK,CAAE,CAAC,CAAC,CACpD;AACAsC,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAAE,CAACD,WAAW,CAAErC,IAAI,CAAC,CAAC,CAEvBjB,SAAS,CAAC,UAAM,CACd,GAAM,CAAAuE,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,GAAM,CAAAC,WAAW,IAAAC,MAAA,CAAMH,GAAG,CAACI,WAAW,CAAC,CAAC,MAAAD,MAAA,CACtCH,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAF,MAAA,CAChBH,GAAG,CAACM,OAAO,CAAC,CAAC,CAAE,CACnBR,YAAY,CAACe,OAAO,CAAC,MAAM,CAAEX,WAAW,CAAC,CAC3C,CAAC,CAAE,CAACpD,IAAI,CAAC,CAAC,CAEVrB,SAAS,CAAC,UAAM,CACdqF,OAAO,CAACC,GAAG,CAACS,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC,CAC1ChG,KAAK,CACFiG,GAAG,CAACH,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAG,eAAe,CAAC,CACpDE,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,GAAM,CAAAC,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAC1B3E,WAAW,CAAC2E,IAAI,CAAC5E,QAAQ,CAAC,CAC5B,CAAC,CAAC,CACD6E,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBlB,OAAO,CAACkB,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAC1BvF,OAAO,CAACuF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACzB,CAAC,CAED,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIH,CAAC,CAAK,CAC5B,GAAIA,CAAC,CAACI,GAAG,GAAK,OAAO,CAAE,CACrBJ,CAAC,CAACK,cAAc,CAAC,CAAC,CAClBC,eAAe,CAAC,CAAC,CACnB,CACA,GAAIN,CAAC,CAACI,GAAG,GAAK,KAAK,CAAE,CACnBJ,CAAC,CAACK,cAAc,CAAC,CAAC,CAClBnD,aAAa,CAAC,CAACD,UAAU,CAAC,CAC5B,CACF,CAAC,CACD,GAAM,CAAAsD,iBAAiB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,cAAA,CAAAC,eAAA,CAAAhD,GAAA,CAAAE,WAAA,QAAA0C,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SACxB1G,OAAO,CAAC,OAAO,CAAC,CACVoG,cAAc,CAAGjD,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CACvDiD,eAAe,CAAGlD,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CACzDC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAChBC,WAAW,IAAAC,MAAA,CAAMH,GAAG,CAACI,WAAW,CAAC,CAAC,MAAAD,MAAA,CACtCH,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAF,MAAA,CAChBH,GAAG,CAACM,OAAO,CAAC,CAAC,EACjB;AACA,GAAIyC,cAAc,GAAK7C,WAAW,EAAI8C,eAAe,GAAK9C,WAAW,CAAE,CACrE;AAEAJ,YAAY,CAACe,OAAO,CAAC,gBAAgB,CAAEX,WAAW,CAAC,CAEnD;AACA1B,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CACjC,CACAS,cAAc,CAAC,IAAI,CAAC,CAAC,wBAAAmE,QAAA,CAAAG,IAAA,MAAAR,OAAA,GACtB,kBAlBK,CAAAL,iBAAiBA,CAAA,SAAAC,IAAA,CAAAa,KAAA,MAAAC,SAAA,OAkBtB,CAED,GAAM,CAAAhB,eAAe,6BAAAiB,KAAA,CAAAd,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAa,SAAA,MAAAC,MAAA,CAAAC,eAAA,CAAA5D,GAAA,CAAAE,WAAA,CAAA8C,eAAA,CAAAD,cAAA,CAAAc,OAAA,CAAAC,QAAA,CAAAjC,QAAA,CAAAkC,WAAA,QAAAnB,mBAAA,GAAAK,IAAA,UAAAe,UAAAC,SAAA,iBAAAA,SAAA,CAAAb,IAAA,CAAAa,SAAA,CAAAZ,IAAA,aAClB9D,YAAY,EAAA0E,SAAA,CAAAZ,IAAA,iBAAAY,SAAA,CAAAC,MAAA,kBAChB;AACA1E,eAAe,CAAC,IAAI,CAAC,CAACyE,SAAA,CAAAb,IAAA,GAEdO,MAAM,CAAGjH,IAAI,CACnByH,UAAU,CAAC,iBAAM,CAAAxH,OAAO,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,CAAC,KAC7BwC,UAAU,GAAK,IAAI,GAAA8E,SAAA,CAAAZ,IAAA,WAAAY,SAAA,CAAAZ,IAAA,SAES,CAAA3H,KAAK,CAAC0I,IAAI,CACtC5C,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAG,UAAU,CAC1C,CACEI,IAAI,CAAE6B,MACR,CACF,CAAC,QALKC,eAAe,CAAAK,SAAA,CAAAI,IAAA,CAMrBvD,OAAO,CAACC,GAAG,CAAC6C,eAAe,CAAC9B,IAAI,CAACD,QAAQ,CAAC,CAC1C,GACE+B,eAAe,CAAC9B,IAAI,CAACD,QAAQ,CAACyC,UAAU,CAAC,GAAG,CAAC,EAC7CV,eAAe,CAAC9B,IAAI,CAACD,QAAQ,CAACyC,UAAU,CAAC,GAAG,CAAC,EAC7CV,eAAe,CAAC9B,IAAI,CAACD,QAAQ,CAACyC,UAAU,CAAC,MAAM,CAAC,CAChD,CACMtE,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAChBC,WAAW,IAAAC,MAAA,CAAMH,GAAG,CAACI,WAAW,CAAC,CAAC,MAAAD,MAAA,CACtCH,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAF,MAAA,CAChBH,GAAG,CAACM,OAAO,CAAC,CAAC,EAEjB;AACM0C,eAAe,CAAGlD,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CACzDgD,cAAc,CAAGjD,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAC7De,OAAO,CAACC,GAAG,CAACiC,eAAe,CAAC,CAC5B;AACA,GACED,cAAc,GAAK7C,WAAW,EAC9B8C,eAAe,GAAK9C,WAAW,CAC/B,CACA;AACAJ,YAAY,CAACe,OAAO,CAAC,iBAAiB,CAAEX,WAAW,CAAC,CAEpD;AACA9B,iBAAiB,CAAC,SAACgF,IAAI,QAAK,CAAAA,IAAI,CAAG,CAAC,GAAC,CAErC;AACF,CACApE,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,IAAM,CACLxB,QAAQ,CAAC,IAAI,CAAC,CAAE;AACVqG,OAAO,EACX,CAAE3G,QAAQ,CAAER,IAAI,CAAE6H,MAAM,CAAE,WAAY,CAAC,EAAApE,MAAA,CAAAqE,kBAAA,CACpC1H,IAAI,GAETC,OAAO,CAAC8G,OAAO,CAAC,CAChB7C,QAAQ,CAAC6C,OAAO,CAAC,CACjBjF,sBAAsB,CAACD,mBAAmB,CAAG,CAAC,CAAC,CAC/CwF,UAAU,CAAC,iBAAM,CAAA3G,QAAQ,CAAC,KAAK,CAAC,GAAE,GAAG,CAAC,CACxC,CAACyG,SAAA,CAAAZ,IAAA,kBAEKS,QAAQ,EAAI,CAAE5G,QAAQ,CAAER,IAAI,CAAE6H,MAAM,cAAEpI,IAAA,CAACJ,OAAO,GAAE,CAAE,CAAC,EAAAoE,MAAA,CAAAqE,kBAAA,CAAK1H,IAAI,GAClEC,OAAO,CAAC+G,QAAQ,CAAC,CAAE;AAAAG,SAAA,CAAAZ,IAAA,UAEI,CAAA3H,KAAK,CAAC0I,IAAI,CAC/B5C,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAG,YAAY,CAC5C,CACEI,IAAI,CAAE6B,MACR,CACF,CAAC,SALK9B,QAAQ,CAAAoC,SAAA,CAAAI,IAAA,CAMRN,WAAW,CAAGD,QAAQ,CAACW,GAAG,CAAC,SAACC,GAAG,QACnC,CAAAA,GAAG,CAACxH,QAAQ,GAAKR,IAAI,EAAIgI,GAAG,CAACH,MAAM,CAACI,IAAI,GAAK5I,OAAO,CAChD,CAAEmB,QAAQ,CAAER,IAAI,CAAE6H,MAAM,CAAE1C,QAAQ,CAACC,IAAI,CAACD,QAAS,CAAC,CAClD6C,GAAG,EACT,CAAC,CAED3H,OAAO,CAACgH,WAAW,CAAC,CAAE;AACtB/C,QAAQ,CAAC+C,WAAW,CAAC,CACrBnF,sBAAsB,CAACD,mBAAmB,CAAG,CAAC,CAAC,CAAE;AAAA,QAEnDa,eAAe,CAAC,KAAK,CAAC,CAACyE,SAAA,CAAAZ,IAAA,kBAAAY,SAAA,CAAAb,IAAA,IAAAa,SAAA,CAAAW,EAAA,CAAAX,SAAA,aAEvBrG,YAAY,CAAC,KAAK,CAAC,CACnB4B,eAAe,CAAC,KAAK,CAAC,CACtBsB,OAAO,CAACkB,KAAK,CAAAiC,SAAA,CAAAW,EAAM,CAAC,CAAC,yBAAAX,SAAA,CAAAX,IAAA,MAAAI,QAAA,iBAExB,kBAjFK,CAAAlB,eAAeA,CAAA,SAAAiB,KAAA,CAAAF,KAAA,MAAAC,SAAA,OAiFpB,CAED,mBACErH,IAAA,CAACH,MAAM,CAAC6I,GAAG,EACTC,OAAO,CAAE,CAAEC,OAAO,CAAE,CAAE,CAAE,CACxBC,OAAO,CAAE,CAAED,OAAO,CAAE,CAAE,CAAE,CACxBE,IAAI,CAAE,CAAEF,OAAO,CAAE,CAAE,CAAE,CAAAG,QAAA,cAErB/I,IAAA,QAAKgJ,SAAS,CAAC,WAAW,CAAAD,QAAA,cACxB7I,KAAA,QAAK8I,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB7I,KAAA,QAAK8I,SAAS,CAAC,UAAU,CAAAD,QAAA,eACvB/I,IAAA,QAAKgJ,SAAS,CAAC,cAAc,CAAAD,QAAA,cAC3B/I,IAAA,SAAMgJ,SAAS,CAAC,UAAU,CAAAD,QAAA,CAAEhI,QAAQ,CAAO,CAAC,CACzC,CAAC,cACNf,IAAA,UACEgJ,SAAS,YAAAhF,MAAA,CAAa5C,KAAK,CAAG,OAAO,CAAG,EAAE,CAAG,CAC7C6E,KAAK,CAAE1F,IAAK,CACZ0I,QAAQ,CAAEnD,YAAa,CACvBoD,SAAS,CAAEhD,cAAe,CAC3B,CAAC,cAEFlG,IAAA,WACEgJ,SAAS,gBAAAhF,MAAA,CAAiBhB,UAAU,CAAG,YAAY,CAAG,EAAE,CAAG,CAC3DmG,OAAO,CAAE9C,eAAgB,CAAA0C,QAAA,cAEzB/I,IAAA,QACEgJ,SAAS,CAAC,YAAY,CACtBI,GAAG,CAAEzJ,UAAW,CAChB0J,GAAG,CAAC,YAAY,CAChBC,KAAK,CAAC,IAAI,CACVC,MAAM,CAAC,IAAI,CACZ,CAAC,CACI,CAAC,CAER5I,IAAI,CAAC2H,GAAG,CAAC,SAACC,GAAG,CAAEiB,KAAK,qBACnBxJ,IAAA,QAAKgJ,SAAS,CAAC,YAAY,CAAAD,QAAA,cACzB/I,IAAA,CAACR,GAAG,EACFuB,QAAQ,CAAEwH,GAAG,CAACxH,QAAS,CACvBqH,MAAM,CACJ5G,SAAS,EAAI+G,GAAG,CAACxH,QAAQ,GAAKR,IAAI,cAChCP,IAAA,SAAMgJ,SAAS,CAAC,SAAS,CAAAD,QAAA,CAAC,SAAO,CAAM,CAAC,CAExCR,GAAG,CAACH,MAEP,CACDqB,cAAc,CAAED,KAAK,GAAK,CAAC,CAAG,KAAK,CAAG,KAAM,CAC5CE,oBAAoB,CAClBF,KAAK,GAAK7I,IAAI,CAACgJ,MAAM,CAAG,CAAC,CAAG,QAAQ,CAAG,KACxC,CACF,CAAC,EAd6BH,KAe5B,CAAC,EACP,CAAC,cACFxJ,IAAA,WAAQgJ,SAAS,CAAC,eAAe,CAACG,OAAO,CAAE7C,iBAAkB,CAAAyC,QAAA,CAAC,0BAE9D,CAAQ,CAAC,EACN,CAAC,cAEN7I,KAAA,QAAK8I,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1B/I,IAAA,QAAA+I,QAAA,cACE7I,KAAA,MAAG8I,SAAS,CAAC,UAAU,CAAAD,QAAA,EAAEvF,QAAQ,CAAC,SAAE,EAAG,CAAC,CACrC,CAAC,cACNxD,IAAA,QAAA+I,QAAA,cACE/I,IAAA,QACEgJ,SAAS,CAAC,eAAe,CACzBI,GAAG,CAAE1J,OAAQ,CACb2J,GAAG,CAAC,SAAS,CACbC,KAAK,CAAC,IAAI,CACVC,MAAM,CAAC,IAAI,CACZ,CAAC,CACC,CAAC,EACH,CAAC,cAENvJ,IAAA,WAAQgJ,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,MAAI,CAAQ,CAAC,cAEtC7I,KAAA,QAAK8I,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtB/I,IAAA,SAAMgJ,SAAS,CAAC,aAAa,CAAAD,QAAA,CAAC,oPAG9B,CAAM,CAAC,cACP/I,IAAA,SAAMgJ,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAC,6GAEhC,CAAM,CAAC,EACJ,CAAC,cACN/I,IAAA,QAAA+I,QAAA,cACE/I,IAAA,CAACF,iBAAiB,EAACkJ,SAAS,CAAC,eAAe,CAAE,CAAC,CAC5C,CAAC,EACH,CAAC,CACH,CAAC,CACI,CAAC,CAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}