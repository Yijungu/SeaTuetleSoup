[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/page/home/page.js":"4","/app/src/page/thanks/page.js":"5","/app/src/page/problem/page.js":"6","/app/src/component/qna.js":"7","/app/src/component/loading.js":"8","/app/src/component/scrollbutton.js":"9"},{"size":869,"mtime":1688803398139,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1687682060000,"results":"12","hashOfConfig":"11"},{"size":528,"mtime":1687682060000,"results":"13","hashOfConfig":"11"},{"size":8825,"mtime":1688907341508,"results":"14","hashOfConfig":"11"},{"size":7080,"mtime":1688804627187,"results":"15","hashOfConfig":"11"},{"size":16931,"mtime":1688951189710,"results":"16","hashOfConfig":"11"},{"size":1769,"mtime":1688286434000,"results":"17","hashOfConfig":"11"},{"size":188,"mtime":1688004607000,"results":"18","hashOfConfig":"11"},{"size":846,"mtime":1688122435000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17z7135",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"/app/src/index.js",["50"],[],"/app/src/reportWebVitals.js",[],[],"/app/src/App.js",[],[],"/app/src/page/home/page.js",["51","52"],[],"import { Link } from \"react-router-dom\";\nimport \"./page.css\";\nimport Profile from \"../../images/Profile.png\";\nimport Check from \"../../images/Check.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport ScrollToTopButton from \"../../component/scrollbutton\";\nimport React, { useState, useEffect } from \"react\";\n\nexport default function Home() {\n  const [nickname, setNickname] = useState(\n    localStorage.getItem(\"nickname\") || \"\"\n  );\n  const [isAnimating, setIsAnimating] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = (event) => {\n    setNickname(event.target.value);\n  };\n  const handleLogoClick = async () => {\n    navigate(\"/\");\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      setIsAnimating(true);\n      setTimeout(() => setIsAnimating(false), 900);\n      localStorage.setItem(\"nickname\", nickname); // The animation lasts 900ms\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <div className=\"container\">\n        <div className=\"e4_2\">\n          <div className=\"e6_15\">\n            <span className=\"e6_16\">My Soup Recipe</span>\n            <span className=\"e6_17\">AI 기반 바다거북수프 공장</span>\n          </div>\n          <div className=\"e6_18\">\n            <div className=\"start_button\"></div>\n            <Link\n              to=\"/issue\"\n              className=\"e6_20\"\n              style={{ textDecoration: \"none\" }}\n            >\n              시작하기 ✨{\" \"}\n            </Link>\n          </div>\n          <div className=\"e19_10\">\n            <div className=\"computer_top\"></div>\n            <div className=\"e6_24\"></div>\n\n            <div className=\"e6_28\"></div>\n            <div className=\"e6_25\"></div>\n            <div className=\"e6_26\"></div>\n            <div className=\"e6_27\"></div>\n            <div className=\"e12_16\">\n              <div className=\"my_chat_box\"></div>\n              <span className=\"my_chat\">바닷가 레스토랑인게 중요합니까?</span>\n            </div>\n            <div className=\"e6_30\">\n              <div className=\"AI_chat_box_2\"></div>\n              <span className=\"AI_chat_2\">\n                네. 그 남자의 과거와 관련있습니다.\n              </span>\n            </div>\n            <div className=\"e12_26\">\n              <div className=\"AI_chat_box\"></div>\n              <span className=\"AI_chat\">네. 조금은 관계 있습니다.</span>\n            </div>\n            <div className=\"e6_29\">\n              <div className=\"my_chat_box_2\"></div>\n              <span className=\"my_chat\">\n                수프가 남자의 과거와 관련이 있나요?{\" \"}\n              </span>\n            </div>\n          </div>\n          <button className=\"F22F_main\" onClick={handleLogoClick}>\n            F22F\n          </button>\n          <div className=\"e204_184\">\n            <div className=\"e186_126\"></div>\n            <div className=\"checkmakr_box\">\n              <div\n                className={`checkmark ${isAnimating ? \"animate\" : \"\"}`}\n              ></div>\n            </div>\n            <div className=\"nickname_profile_main\">\n              <div className=\"e186_114\">\n                <img\n                  className=\"profile_photo_main\"\n                  src={Profile}\n                  alt=\"Profile\"\n                  width=\"30\"\n                  height=\"30\"\n                />\n              </div>\n              <input\n                type=\"text\"\n                className=\"nickname_main\"\n                value={nickname}\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder=\"닉네임을 입력하세요.\"\n              />\n            </div>\n          </div>\n          <div className=\"e186_174\">\n            <span className=\"e186_175\">Q. 마이수프레시피란 무엇인가요?</span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              마이수프레시피는 매일 한 개의 바다거북수프 문제를 선정하여\n              출제하는 곳입니다. 바다거북수프 문제란 보통 기묘한 내용을 바탕으로\n              만들어지는 추리게임입니다. 어떠한 상황을 제시하면 왜 그런 상황이\n              발생했는지 추리해서 정답을 맞히면 됩니다. 상상력을 총동원해서\n              오늘의 정답을 맞혀보세요!\n            </span>\n          </div>\n          <div className=\"e186_176\">\n            <span className=\"e186_177\">질문과 답변</span>\n          </div>\n          <div className=\"e186_179\">\n            <span className=\"e186_175\">Q. 게임 방법은 무엇인가요?</span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              바다거북수프 문제가 출제되면, 유저들은 AI에게 예, 아니오로 대답할\n              수 있는 질문을 입력합니다. 질문을 할 때는 문장의 끝에{\" \"}\n              <span className=\"bold-word\">‘?’</span>를 붙여주세요. 질문에 대한\n              답을 듣게 되면, 이를 바탕으로 이야기의 전말을 추리합니다. 이렇게\n              반복하여 문답을 진행한 뒤, 정답을 맞히고 싶다면{\" \"}\n              <span className=\"bold-word\">‘Tab 키’</span>를 눌러 정답을 작성하면\n              됩니다.\n            </span>\n          </div>\n          <div className=\"e186_182\">\n            <span className=\"e186_175\">\n              Q. AI가 어떻게 정답임을 인지하나요?\n            </span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              오늘의 정답에서 꼭 들어가야 할 핵심 키워드들을 몇 개씩\n              정해놓습니다. AI는 유저가 제출한 답과 키워드들의 문맥이 일치하는지\n              판단합니다. 유저가 어느 정도 정답과 가까운 내용을 작성하였다면\n              정답을 공개합니다.\n            </span>\n          </div>\n          <div className=\"e186_185\">\n            <span className=\"e186_175\">\n              Q. 마이수프레시피의 문제는 어떻게 정해지나요?\n            </span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              마이수프레시피는 AI 모델을 기반으로 이야기를 구성합니다. AI는 여러\n              번의 테스트를 거쳐 마이수프레시피만의 최적화된 AI를 사용하고\n              있습니다. 그 후 수정, 보완하는 과정을 거쳐 좀 더 개연성 있고\n              흥미로운 문제가 완성됩니다.\n            </span>\n          </div>\n          <div className=\"e186_188\">\n            <span className=\"e186_175\">\n              Q. 하루에 한 번 이상 플레이할 수 없나요?\n            </span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              마이수프레시피는 하루에 한 문제만 출제됩니다. 마이수프레시피는\n              <a\n                href=\"https://semantle-ko.newsjel.ly/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                '꼬맨틀'\n              </a>\n              을 바탕으로 만들게 되었습니다. 우리의 목적은 꼬맨틀처럼 &quot;하루\n              한 번, 여러분의 일일퀘스트&quot;가 되는 것입니다. 문제는 국제\n              표준시(UTC) 기준 매일 오후 3시 또는 한국 표준시(KST) 기준 자정에\n              바뀝니다.\n            </span>\n          </div>\n          <div className=\"e186_191\">\n            <span className=\"e186_175\">\n              Q. 여태까지 플레이한 기록을 볼 수 있나요?\n            </span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              마이수프레시피는 쿠키를 사용하여 유저의 닉네임 및 개인 게임 통계를\n              저장하며, 통계 수집을 위해 쿠키 정보를 사용합니다. 따라서 동일\n              브라우저에서 플레이했다면, 여태까지 플레이했던 기록을 확인할 수\n              있습니다.\n            </span>\n          </div>\n          <div className=\"e186_197\">\n            <span className=\"e186_175\">\n              Q. 다른 질문이나 피드백은 어떻게 보내나요?\n            </span>\n            <p className=\"A_dot\"> A.</p>\n            <span className=\"e186_178\">\n              질문이나 피드백은 F2__2F@naver.com로 문의해주세요!\n            </span>\n          </div>\n          <ScrollToTopButton className=\"scroll_to_top\" />\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n",[],"/app/src/page/thanks/page.js",["53","54","55","56","57","58"],[],"/app/src/page/problem/page.js",["59","60"],[],"/app/src/component/qna.js",[],[],"/app/src/component/loading.js",[],[],"/app/src/component/scrollbutton.js",["61"],[],"import React, { useState } from \"react\";\nimport scrollToTopImage from \"../images/ScrollToTopButton.png\";\n\nconst ScrollToTopButton = ({ className }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // 스크롤 위치에 따라 버튼의 가시성을 토글\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 300) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  // 화면 맨 위로 스크롤\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", toggleVisibility);\n  }, []);\n\n  return (\n    <div className={className} onClick={scrollToTop}>\n      <img src={scrollToTopImage} alt=\"Go to top\" width=\"50\" height=\"40\" />\n    </div>\n  );\n};\n\nexport default ScrollToTopButton;\n",{"ruleId":"62","severity":1,"message":"63","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":11},{"ruleId":"62","severity":1,"message":"66","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":13},{"ruleId":"62","severity":1,"message":"67","line":8,"column":27,"nodeType":"64","messageId":"65","endLine":8,"endColumn":36},{"ruleId":"62","severity":1,"message":"68","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":23},{"ruleId":"62","severity":1,"message":"69","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":18},{"ruleId":"62","severity":1,"message":"70","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":16},{"ruleId":"62","severity":1,"message":"71","line":12,"column":10,"nodeType":"64","messageId":"65","endLine":12,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":52,"column":6,"nodeType":"74","endLine":52,"endColumn":73,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"76","line":88,"column":6,"nodeType":"74","endLine":88,"endColumn":8,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"78","line":95,"column":6,"nodeType":"74","endLine":95,"endColumn":8,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":132,"column":6,"nodeType":"74","endLine":132,"endColumn":25,"suggestions":"81"},{"ruleId":"62","severity":1,"message":"82","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Check' is defined but never used.","'useEffect' is defined but never used.","'SpoonForkButton' is defined but never used.","'TurtleIcon' is defined but never used.","'UserIcon' is defined but never used.","'motion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'workTime'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCopyText' needs the current value of 'workTime'.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'n'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFirstN' needs the current value of 'n'.",["84"],"React Hook useEffect has a missing dependency: 'correctAnswers'. Either include it or remove the dependency array.",["85"],"React Hook useEffect has missing dependencies: 'navigate' and 'text_t'. Either include them or remove the dependency array.",["86"],"'isVisible' is assigned a value but never used.",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [n, gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked, workTime]",{"range":"95","text":"96"},"Update the dependencies array to be: [n]",{"range":"97","text":"98"},"Update the dependencies array to be: [correctAnswers]",{"range":"99","text":"100"},"Update the dependencies array to be: [updateState, text, navigate, text_t]",{"range":"101","text":"102"},[2268,2335],"[n, gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked, workTime]",[3213,3215],"[n]",[3453,3455],"[correctAnswers]",[4580,4599],"[updateState, text, navigate, text_t]"]