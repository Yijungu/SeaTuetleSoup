[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/page/home/page.js":"4","/app/src/page/problem/page.js":"5","/app/src/page/thanks/page.js":"6","/app/src/component/scrollbutton.js":"7","/app/src/component/loading.js":"8","/app/src/component/qna.js":"9"},{"size":866,"mtime":1688037504322,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1687844865464,"results":"12","hashOfConfig":"11"},{"size":528,"mtime":1687844865462,"results":"13","hashOfConfig":"11"},{"size":6410,"mtime":1688103243167,"results":"14","hashOfConfig":"11"},{"size":11061,"mtime":1688103239060,"results":"15","hashOfConfig":"11"},{"size":3675,"mtime":1688103240908,"results":"16","hashOfConfig":"11"},{"size":843,"mtime":1688021399694,"results":"17","hashOfConfig":"11"},{"size":188,"mtime":1688003848414,"results":"18","hashOfConfig":"11"},{"size":1756,"mtime":1688035198611,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"17z7135",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/app/src/index.js",["50"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from \"./page/home/page\";\nimport Thanks from \"./page/thanks/page\";\nimport Problem from \"./page/problem/page\";\nimport { AnimatePresence } from \"framer-motion\"; // 이 부분을 import 해주세요.\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Router>\n    <AnimatePresence>\n      {\" \"}\n      {/* 이 부분에 추가했습니다. */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/thanks\" element={<Thanks />} />\n        <Route path=\"/problem\" element={<Problem />} />\n      </Routes>\n    </AnimatePresence>\n  </Router>\n);\n\nreportWebVitals();\n","/app/src/reportWebVitals.js",[],[],"/app/src/App.js",[],[],"/app/src/page/home/page.js",[],[],"/app/src/page/problem/page.js",["51","52"],[],"/app/src/page/thanks/page.js",[],[],"/app/src/component/scrollbutton.js",["53"],[],"import React, { useState } from \"react\";\nimport scrollToTopImage from \"../images/ScollTopButton.png\";\n\nconst ScrollToTopButton = ({ className }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // 스크롤 위치에 따라 버튼의 가시성을 토글\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 300) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  // 화면 맨 위로 스크롤\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", toggleVisibility);\n  }, []);\n\n  return (\n    <div className={className} onClick={scrollToTop}>\n      <img src={scrollToTopImage} alt=\"Go to top\" width=\"50\" height=\"40\" />\n    </div>\n  );\n};\n\nexport default ScrollToTopButton;\n","/app/src/component/loading.js",[],[],"/app/src/component/qna.js",[],[],[],{"ruleId":"54","severity":1,"message":"55","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":11},{"ruleId":"58","severity":1,"message":"59","line":66,"column":6,"nodeType":"60","endLine":66,"endColumn":8,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":103,"column":6,"nodeType":"60","endLine":103,"endColumn":25,"suggestions":"63"},{"ruleId":"54","severity":1,"message":"64","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'correctAnswers'. Either include it or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["66"],"'isVisible' is assigned a value but never used.",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [correctAnswers]",{"range":"71","text":"72"},"Update the dependencies array to be: [updateState, text, navigate]",{"range":"73","text":"74"},[2467,2469],"[correctAnswers]",[3587,3606],"[updateState, text, navigate]"]