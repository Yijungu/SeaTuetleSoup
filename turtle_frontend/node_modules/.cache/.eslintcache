[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/page/home/page.js":"4","/app/src/page/thanks/page.js":"5","/app/src/page/problem/page.js":"6","/app/src/component/qna.js":"7","/app/src/component/loading.js":"8","/app/src/component/scrollbutton.js":"9"},{"size":869,"mtime":1688803398139,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1687682060000,"results":"12","hashOfConfig":"11"},{"size":528,"mtime":1687682060000,"results":"13","hashOfConfig":"11"},{"size":10347,"mtime":1689265062234,"results":"14","hashOfConfig":"11"},{"size":12316,"mtime":1689262673032,"results":"15","hashOfConfig":"11"},{"size":17090,"mtime":1689255473797,"results":"16","hashOfConfig":"11"},{"size":1769,"mtime":1688286434000,"results":"17","hashOfConfig":"11"},{"size":188,"mtime":1688004607000,"results":"18","hashOfConfig":"11"},{"size":846,"mtime":1688122435000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"17z7135",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"/app/src/index.js",["50"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from \"./page/home/page\";\nimport Thanks from \"./page/thanks/page\";\nimport Problem from \"./page/problem/page\";\nimport { AnimatePresence } from \"framer-motion\"; // 이 부분을 import 해주세요.\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Router>\n    <AnimatePresence>\n      {\" \"}\n      {/* 이 부분에 추가했습니다. */}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/explanation\" element={<Thanks />} />\n        <Route path=\"/issue\" element={<Problem />} />\n      </Routes>\n    </AnimatePresence>\n  </Router>\n);\n\nreportWebVitals();\n",[],"/app/src/reportWebVitals.js",[],[],"/app/src/App.js",[],[],"/app/src/page/home/page.js",["51"],[],"/app/src/page/thanks/page.js",["52","53","54"],[],"/app/src/page/problem/page.js",["55"],[],"/app/src/component/qna.js",[],[],"/app/src/component/loading.js",[],[],"/app/src/component/scrollbutton.js",["56"],[],"import React, { useState } from \"react\";\nimport scrollToTopImage from \"../images/ScrollToTopButton.png\";\n\nconst ScrollToTopButton = ({ className }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // 스크롤 위치에 따라 버튼의 가시성을 토글\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 300) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  // 화면 맨 위로 스크롤\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", toggleVisibility);\n  }, []);\n\n  return (\n    <div className={className} onClick={scrollToTop}>\n      <img src={scrollToTopImage} alt=\"Go to top\" width=\"50\" height=\"40\" />\n    </div>\n  );\n};\n\nexport default ScrollToTopButton;\n",{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":11},{"ruleId":"57","severity":1,"message":"61","line":8,"column":27,"nodeType":"59","messageId":"60","endLine":8,"endColumn":36},{"ruleId":"62","severity":1,"message":"63","line":59,"column":6,"nodeType":"64","endLine":59,"endColumn":73,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":95,"column":6,"nodeType":"64","endLine":95,"endColumn":8,"suggestions":"67"},{"ruleId":"57","severity":1,"message":"68","line":121,"column":13,"nodeType":"59","messageId":"60","endLine":121,"endColumn":21},{"ruleId":"62","severity":1,"message":"69","line":133,"column":6,"nodeType":"64","endLine":133,"endColumn":25,"suggestions":"70"},{"ruleId":"57","severity":1,"message":"71","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'workTime'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCopyText' needs the current value of 'workTime'.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'n'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFirstN' needs the current value of 'n'.",["73"],"'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'text_t'. Either include them or remove the dependency array.",["74"],"'isVisible' is assigned a value but never used.",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [n, gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked, workTime]",{"range":"81","text":"82"},"Update the dependencies array to be: [n]",{"range":"83","text":"84"},"Update the dependencies array to be: [updateState, text, navigate, text_t]",{"range":"85","text":"86"},[2529,2596],"[n, gameAttempts, correctAnswers, giveUpCount, totalQuestionsAsked, workTime]",[3474,3476],"[n]",[4514,4533],"[updateState, text, navigate, text_t]"]